{"ast":null,"code":"(function () {\n  var d;\n  window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 30, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = []);\n\n  d.Class = function (a) {\n    var b = function () {\n      arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments));\n    };\n\n    a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function () {\n      for (var a = 0, b = arguments.length; a < b; a++) this.events[arguments[a]] = [];\n    }, b.prototype.listenTo = function (a, b, c) {\n      this.removeListener(a, b, c);\n      a.events[b].push({\n        handler: c,\n        scope: this\n      });\n    }, b.prototype.addListener = function (a, b, c) {\n      this.removeListener(this, a, b);\n      this.events[a].push({\n        handler: b,\n        scope: c\n      });\n    }, b.prototype.removeListener = function (a, b, c) {\n      if (a && a.events) for (a = a.events[b], b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1);\n    }, b.prototype.fire = function (a, b) {\n      for (var c = this.events[a], d = 0, k = c.length; d < k; d++) {\n        var l = c[d];\n        l.handler.call(l.scope, b);\n      }\n    });\n\n    for (var c in a) b.prototype[c] = a[c];\n\n    return b;\n  };\n\n  d.addChart = function (a) {\n    d.updateInt || (d.updateInt = setInterval(function () {\n      d.update();\n    }, Math.round(1E3 / d.updateRate)));\n    d.charts.push(a);\n  };\n\n  d.removeChart = function (a) {\n    for (var b = d.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n\n    0 === b.length && d.updateInt && clearInterval(d.updateInt);\n  };\n\n  d.isModern = !0;\n\n  d.getIEVersion = function () {\n    var a = 0,\n        b,\n        c;\n    \"Microsoft Internet Explorer\" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1)));\n    return a;\n  };\n\n  d.applyLang = function (a, b) {\n    var c = d.translations;\n    b.dayNames = d.extend({}, d.dayNames);\n    b.shortDayNames = d.extend({}, d.shortDayNames);\n    b.monthNames = d.extend({}, d.monthNames);\n    b.shortMonthNames = d.extend({}, d.shortMonthNames);\n    c && (c = c[a]) && (d.lang = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)));\n  };\n\n  d.IEversion = d.getIEVersion();\n  9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0);\n  d.dx = 0;\n  d.dy = 0;\n  if (document.addEventListener || window.opera) d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5;\n  document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0));\n  window.chrome && (d.chrome = !0);\n\n  d.handleMouseUp = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleReleaseOutside && e.handleReleaseOutside(a);\n    }\n  };\n\n  d.handleMouseMove = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleMouseMove && e.handleMouseMove(a);\n    }\n  };\n\n  d.handleWheel = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e && e.mouseIsOver) {\n        e.mouseWheelScrollEnabled || e.mouseWheelZoomEnabled ? e.handleWheel && e.handleWheel(a) : a.stopPropagation && a.stopPropagation();\n        break;\n      }\n    }\n  };\n\n  d.resetMouseOver = function () {\n    for (var a = d.charts, b = 0; b < a.length; b++) {\n      var c = a[b];\n      c && (c.mouseIsOver = !1);\n    }\n  };\n\n  d.ready = function (a) {\n    d.onReadyArray.push(a);\n  };\n\n  d.handleLoad = function () {\n    d.isReady = !0;\n\n    for (var a = d.onReadyArray, b = 0; b < a.length; b++) {\n      var c = a[b];\n      isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b);\n    }\n  };\n\n  d.addInitHandler = function (a, b) {\n    d.initHandlers.push({\n      method: a,\n      types: b\n    });\n  };\n\n  d.callInitHandler = function (a) {\n    var b = d.initHandlers;\n    if (d.initHandlers) for (var c = 0; c < b.length; c++) {\n      var e = b[c];\n      e.types ? d.isInArray(e.types, a.type) && e.method(a) : e.method(a);\n    }\n  };\n\n  d.getUniqueId = function () {\n    d.uid++;\n    return \"AmChartsEl-\" + d.uid;\n  };\n\n  d.isNN && (document.addEventListener(\"mousemove\", d.handleMouseMove, !0), document.addEventListener(\"mouseup\", d.handleMouseUp, !0), window.addEventListener(\"load\", d.handleLoad, !0), window.addEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.addEventListener(\"mousewheel\", d.handleWheel, !0));\n  d.isIE && (document.attachEvent(\"onmousemove\", d.handleMouseMove), document.attachEvent(\"onmouseup\", d.handleMouseUp), window.attachEvent(\"onload\", d.handleLoad));\n\n  d.clear = function () {\n    var a = d.charts;\n    if (a) for (var b = 0; b < a.length; b++) a[b].clear();\n    d.updateInt && clearInterval(d.updateInt);\n    d.charts = null;\n    d.isNN && (document.removeEventListener(\"mousemove\", d.handleMouseMove, !0), document.removeEventListener(\"mouseup\", d.handleMouseUp, !0), window.removeEventListener(\"load\", d.handleLoad, !0), window.removeEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.removeEventListener(\"mousewheel\", d.handleWheel, !0));\n    d.isIE && (document.detachEvent(\"onmousemove\", d.handleMouseMove), document.detachEvent(\"onmouseup\", d.handleMouseUp), window.detachEvent(\"onload\", d.handleLoad));\n  };\n\n  d.makeChart = function (a, b, c) {\n    var e = b.type,\n        h = b.theme;\n    d.isString(h) && (h = d.themes[h], b.theme = h);\n    var f;\n\n    switch (e) {\n      case \"serial\":\n        f = new d.AmSerialChart(h);\n        break;\n\n      case \"xy\":\n        f = new d.AmXYChart(h);\n        break;\n\n      case \"pie\":\n        f = new d.AmPieChart(h);\n        break;\n\n      case \"radar\":\n        f = new d.AmRadarChart(h);\n        break;\n\n      case \"gauge\":\n        f = new d.AmAngularGauge(h);\n        break;\n\n      case \"funnel\":\n        f = new d.AmFunnelChart(h);\n        break;\n\n      case \"map\":\n        f = new d.AmMap(h);\n        break;\n\n      case \"stock\":\n        f = new d.AmStockChart(h);\n        break;\n\n      case \"gantt\":\n        f = new d.AmGanttChart(h);\n    }\n\n    d.extend(f, b);\n    d.isReady ? isNaN(c) ? f.write(a) : setTimeout(function () {\n      d.realWrite(f, a);\n    }, c) : d.ready(function () {\n      isNaN(c) ? f.write(a) : setTimeout(function () {\n        d.realWrite(f, a);\n      }, c);\n    });\n    return f;\n  };\n\n  d.realWrite = function (a, b) {\n    a.write(b);\n  };\n\n  d.updateCount = 0;\n  d.validateAt = Math.round(d.updateRate / 5);\n\n  d.update = function () {\n    var a = d.charts;\n    d.updateCount++;\n    var b = !1;\n    d.updateCount == d.validateAt && (b = !0, d.updateCount = 0);\n    if (a) for (var c = 0; c < a.length; c++) a[c].update && a[c].update(), b && a[c].validateSize && a[c].validateSize();\n  };\n\n  d.bezierX = 3;\n  d.bezierY = 6;\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.toBoolean = function (a, b) {\n    if (void 0 === a) return b;\n\n    switch (String(a).toLowerCase()) {\n      case \"true\":\n      case \"yes\":\n      case \"1\":\n        return !0;\n\n      case \"false\":\n      case \"no\":\n      case \"0\":\n      case null:\n        return !1;\n\n      default:\n        return Boolean(a);\n    }\n  };\n\n  d.removeFromArray = function (a, b) {\n    var c;\n    if (void 0 !== b && void 0 !== a) for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1);\n  };\n\n  d.isInArray = function (a, b) {\n    for (var c = 0; c < a.length; c++) if (a[c] == b) return !0;\n\n    return !1;\n  };\n\n  d.getDecimals = function (a) {\n    var b = 0;\n    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));\n    return b;\n  };\n\n  d.wrappedText = function (a, b, c, e, h, f, g, k, l) {\n    var m = d.text(a, b, c, e, h, f, g),\n        n = \"\\n\";\n    d.isModern || (n = \"<br>\");\n    if (10 < l) return m;\n\n    if (m) {\n      var q = m.getBBox();\n\n      if (q.width > k) {\n        q = Math.ceil(q.width / k);\n        m.remove();\n\n        for (var m = [], p = 0; -1 < (p = b.indexOf(\" \", p));) m.push(p), p += 1;\n\n        for (var t, p = 0; p < m.length; p += Math.ceil(m.length / q)) t = m[p], b = b.substr(0, t) + n + b.substr(t + 1);\n\n        if (isNaN(t)) {\n          if (0 === l) for (p = 1; p < q; p++) t = Math.round(b.length / q * p), b = b.substr(0, t) + n + b.substr(t);\n          return d.text(a, b, c, e, h, f, g);\n        }\n\n        return d.wrappedText(a, b, c, e, h, f, g, k, l + 1);\n      }\n\n      return m;\n    }\n  };\n\n  d.getStyle = function (a, b) {\n    var c = \"\";\n    document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b) : a.currentStyle && (b = b.replace(/\\-(\\w)/g, function (a, b) {\n      return b.toUpperCase();\n    }), c = a.currentStyle[b]);\n    return c;\n  };\n\n  d.removePx = function (a) {\n    if (void 0 !== a) return Number(a.substring(0, a.length - 2));\n  };\n\n  d.getURL = function (a, b) {\n    if (a) if (\"_self\" != b && b) {\n      if (\"_top\" == b && window.top) window.top.location.href = a;else if (\"_parent\" == b && window.parent) window.parent.location.href = a;else if (\"_blank\" == b) window.open(a);else {\n        var c = document.getElementsByName(b)[0];\n        c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a);\n      }\n    } else window.location.href = a;\n  };\n\n  d.ifArray = function (a) {\n    return a && 0 < a.length ? !0 : !1;\n  };\n\n  d.callMethod = function (a, b) {\n    var c;\n\n    for (c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e) {\n        if (e[a]) e[a]();\n        var h = e.length;\n\n        if (0 < h) {\n          var d;\n\n          for (d = 0; d < h; d++) {\n            var g = e[d];\n            if (g && g[a]) g[a]();\n          }\n        }\n      }\n    }\n  };\n\n  d.toNumber = function (a) {\n    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"));\n  };\n\n  d.toColor = function (a) {\n    if (\"\" !== a && void 0 !== a) if (-1 != a.indexOf(\",\")) {\n      a = a.split(\",\");\n      var b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b].substring(a[b].length - 6, a[b].length);\n        a[b] = \"#\" + c;\n      }\n    } else a = a.substring(a.length - 6, a.length), a = \"#\" + a;\n    return a;\n  };\n\n  d.toCoordinate = function (a, b, c) {\n    var e;\n    void 0 !== a && (a = String(a), c && c < b && (b = c), e = Number(a), -1 != a.indexOf(\"!\") && (e = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (e = b * Number(a.substr(0, a.length - 1)) / 100));\n    return e;\n  };\n\n  d.fitToBounds = function (a, b, c) {\n    a < b && (a = b);\n    a > c && (a = c);\n    return a;\n  };\n\n  d.isDefined = function (a) {\n    return void 0 === a ? !1 : !0;\n  };\n\n  d.stripNumbers = function (a) {\n    return a.replace(/[0-9]+/g, \"\");\n  };\n\n  d.roundTo = function (a, b) {\n    if (0 > b) return a;\n    var c = Math.pow(10, b);\n    return Math.round(a * c) / c;\n  };\n\n  d.toFixed = function (a, b) {\n    var c = String(Math.round(a * Math.pow(10, b)));\n\n    if (0 < b) {\n      var e = c.length;\n\n      if (e < b) {\n        var h;\n\n        for (h = 0; h < b - e; h++) c = \"0\" + c;\n      }\n\n      e = c.substring(0, c.length - b);\n      \"\" === e && (e = 0);\n      return e + \".\" + c.substring(c.length - b, c.length);\n    }\n\n    return String(c);\n  };\n\n  d.formatDuration = function (a, b, c, e, h, f) {\n    var g = d.intervals,\n        k = f.decimalSeparator;\n\n    if (a >= g[b].contains) {\n      var l = a - Math.floor(a / g[b].contains) * g[b].contains;\n      \"ss\" == b && (l = d.formatNumber(l, f), 1 == l.split(k)[0].length && (l = \"0\" + l));\n      (\"mm\" == b || \"hh\" == b) && 10 > l && (l = \"0\" + l);\n      c = l + \"\" + e[b] + \"\" + c;\n      a = Math.floor(a / g[b].contains);\n      b = g[b].nextInterval;\n      return d.formatDuration(a, b, c, e, h, f);\n    }\n\n    \"ss\" == b && (a = d.formatNumber(a, f), 1 == a.split(k)[0].length && (a = \"0\" + a));\n    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);\n    c = a + \"\" + e[b] + \"\" + c;\n    if (g[h].count > g[b].count) for (a = g[b].count; a < g[h].count; a++) b = g[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + e[b] + \"\" + c : \"DD\" == b && (c = \"0\" + e[b] + \"\" + c);\n    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));\n    return c;\n  };\n\n  d.formatNumber = function (a, b, c, e, h) {\n    a = d.roundTo(a, b.precision);\n    isNaN(c) && (c = b.precision);\n    var f = b.decimalSeparator;\n    b = b.thousandsSeparator;\n    var g;\n    g = 0 > a ? \"-\" : \"\";\n    a = Math.abs(a);\n    var k = String(a),\n        l = !1;\n    -1 != k.indexOf(\"e\") && (l = !0);\n    0 <= c && !l && (k = d.toFixed(a, c));\n    var m = \"\";\n    if (l) m = k;else {\n      var k = k.split(\".\"),\n          l = String(k[0]),\n          n;\n\n      for (n = l.length; 0 <= n; n -= 3) m = n != l.length ? 0 !== n ? l.substring(n - 3, n) + b + m : l.substring(n - 3, n) + m : l.substring(n - 3, n);\n\n      void 0 !== k[1] && (m = m + f + k[1]);\n      void 0 !== c && 0 < c && \"0\" != m && (m = d.addZeroes(m, f, c));\n    }\n    m = g + m;\n    \"\" === g && !0 === e && 0 !== a && (m = \"+\" + m);\n    !0 === h && (m += \"%\");\n    return m;\n  };\n\n  d.addZeroes = function (a, b, c) {\n    a = a.split(b);\n    void 0 === a[1] && 0 < c && (a[1] = \"0\");\n    return a[1].length < c ? (a[1] += \"0\", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0];\n  };\n\n  d.scientificToNormal = function (a) {\n    var b;\n    a = String(a).split(\"e\");\n    var c;\n\n    if (\"-\" == a[1].substr(0, 1)) {\n      b = \"0.\";\n\n      for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += \"0\";\n\n      b += a[0].split(\".\").join(\"\");\n    } else {\n      var e = 0;\n      b = a[0].split(\".\");\n      b[1] && (e = b[1].length);\n      b = a[0].split(\".\").join(\"\");\n\n      for (c = 0; c < Math.abs(Number(a[1])) - e; c++) b += \"0\";\n    }\n\n    return b;\n  };\n\n  d.toScientific = function (a, b) {\n    if (0 === a) return \"0\";\n    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E),\n        e = String(e).split(\".\").join(b);\n    return String(e) + \"e\" + c;\n  };\n\n  d.randomColor = function () {\n    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6);\n  };\n\n  d.hitTest = function (a, b, c) {\n    var e = !1,\n        h = a.x,\n        f = a.x + a.width,\n        g = a.y,\n        k = a.y + a.height,\n        l = d.isInRectangle;\n    e || (e = l(h, g, b));\n    e || (e = l(h, k, b));\n    e || (e = l(f, g, b));\n    e || (e = l(f, k, b));\n    e || !0 === c || (e = d.hitTest(b, a, !0));\n    return e;\n  };\n\n  d.isInRectangle = function (a, b, c) {\n    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1;\n  };\n\n  d.isPercents = function (a) {\n    if (-1 != String(a).indexOf(\"%\")) return !0;\n  };\n\n  d.findPosX = function (a) {\n    var b = a,\n        c = a.offsetLeft;\n\n    if (a.offsetParent) {\n      for (; a = a.offsetParent;) c += a.offsetLeft;\n\n      for (; (b = b.parentNode) && b != document.body;) c -= b.scrollLeft || 0;\n    }\n\n    return c;\n  };\n\n  d.findPosY = function (a) {\n    var b = a,\n        c = a.offsetTop;\n\n    if (a.offsetParent) {\n      for (; a = a.offsetParent;) c += a.offsetTop;\n\n      for (; (b = b.parentNode) && b != document.body;) c -= b.scrollTop || 0;\n    }\n\n    return c;\n  };\n\n  d.findIfFixed = function (a) {\n    if (a.offsetParent) for (; a = a.offsetParent;) if (\"fixed\" == d.getStyle(a, \"position\")) return !0;\n    return !1;\n  };\n\n  d.findIfAuto = function (a) {\n    return a.style && \"auto\" == d.getStyle(a, \"overflow\") ? !0 : a.parentNode ? d.findIfAuto(a.parentNode) : !1;\n  };\n\n  d.findScrollLeft = function (a, b) {\n    a.scrollLeft && (b += a.scrollLeft);\n    return a.parentNode ? d.findScrollLeft(a.parentNode, b) : b;\n  };\n\n  d.findScrollTop = function (a, b) {\n    a.scrollTop && (b += a.scrollTop);\n    return a.parentNode ? d.findScrollTop(a.parentNode, b) : b;\n  };\n\n  d.formatValue = function (a, b, c, e, h, f, g, k) {\n    if (b) {\n      void 0 === h && (h = \"\");\n      var l;\n\n      for (l = 0; l < c.length; l++) {\n        var m = c[l],\n            n = b[m];\n        void 0 !== n && (n = f ? d.addPrefix(n, k, g, e) : d.formatNumber(n, e), a = a.replace(new RegExp(\"\\\\[\\\\[\" + h + \"\" + m + \"\\\\]\\\\]\", \"g\"), n));\n      }\n    }\n\n    return a;\n  };\n\n  d.formatDataContextValue = function (a, b) {\n    if (a) {\n      var c = a.match(/\\[\\[.*?\\]\\]/g),\n          e;\n\n      for (e = 0; e < c.length; e++) {\n        var h = c[e],\n            h = h.substr(2, h.length - 4);\n        void 0 !== b[h] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + h + \"\\\\]\\\\]\", \"g\"), b[h]));\n      }\n    }\n\n    return a;\n  };\n\n  d.massReplace = function (a, b) {\n    for (var c in b) if (b.hasOwnProperty(c)) {\n      var e = b[c];\n      void 0 === e && (e = \"\");\n      a = a.replace(c, e);\n    }\n\n    return a;\n  };\n\n  d.cleanFromEmpty = function (a) {\n    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\");\n  };\n\n  d.addPrefix = function (a, b, c, e, h) {\n    var f = d.formatNumber(a, e),\n        g = \"\",\n        k,\n        l,\n        m;\n    if (0 === a) return \"0\";\n    0 > a && (g = \"-\");\n    a = Math.abs(a);\n    if (1 < a) for (k = b.length - 1; -1 < k; k--) {\n      if (a >= b[k].number && (l = a / b[k].number, m = Number(e.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, {\n        precision: -1,\n        decimalSeparator: e.decimalSeparator,\n        thousandsSeparator: e.thousandsSeparator\n      }), !h || l == c)) {\n        f = g + \"\" + m + \"\" + b[k].prefix;\n        break;\n      }\n    } else for (k = 0; k < c.length; k++) if (a <= c[k].number) {\n      l = a / c[k].number;\n      m = Math.abs(Math.round(Math.log(l) * Math.LOG10E));\n      l = d.roundTo(l, m);\n      f = g + \"\" + l + \"\" + c[k].prefix;\n      break;\n    }\n    return f;\n  };\n\n  d.remove = function (a) {\n    a && a.remove();\n  };\n\n  d.getEffect = function (a) {\n    \">\" == a && (a = \"easeOutSine\");\n    \"<\" == a && (a = \"easeInSine\");\n    \"elastic\" == a && (a = \"easeOutElastic\");\n    return a;\n  };\n\n  d.getObjById = function (a, b) {\n    var c, e;\n\n    for (e = 0; e < a.length; e++) {\n      var h = a[e];\n      h.id == b && (c = h);\n    }\n\n    return c;\n  };\n\n  d.applyTheme = function (a, b, c) {\n    b || (b = d.theme);\n    b && b[c] && d.extend(a, b[c]);\n  };\n\n  d.isString = function (a) {\n    return \"string\" == typeof a ? !0 : !1;\n  };\n\n  d.extend = function (a, b, c) {\n    var e;\n    a || (a = {});\n\n    for (e in b) c ? a.hasOwnProperty(e) || (a[e] = b[e]) : a[e] = b[e];\n\n    return a;\n  };\n\n  d.copyProperties = function (a, b) {\n    for (var c in a) a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c]);\n  };\n\n  d.processObject = function (a, b, c, e) {\n    !1 === a instanceof b && (a = e ? d.extend(new b(c), a) : d.extend(a, new b(c), !0));\n    return a;\n  };\n\n  d.fixNewLines = function (a) {\n    var b = RegExp(\"\\\\n\", \"g\");\n    a && (a = a.replace(b, \"<br />\"));\n    return a;\n  };\n\n  d.fixBrakes = function (a) {\n    if (d.isModern) {\n      var b = RegExp(\"<br>\", \"g\");\n      a && (a = a.replace(b, \"\\n\"));\n    } else a = d.fixNewLines(a);\n\n    return a;\n  };\n\n  d.deleteObject = function (a, b) {\n    if (a) {\n      if (void 0 === b || null === b) b = 20;\n      if (0 !== b) if (\"[object Array]\" === Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) d.deleteObject(a[c], b - 1), a[c] = null;else if (a && !a.tagName) try {\n        for (c in a) a[c] && (\"object\" == typeof a[c] && d.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null));\n      } catch (e) {}\n    }\n  };\n\n  d.bounce = function (a, b, c, e, h) {\n    return (b /= h) < 1 / 2.75 ? 7.5625 * e * b * b + c : b < 2 / 2.75 ? e * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? e * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : e * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c;\n  };\n\n  d.easeInSine = function (a, b, c, e, h) {\n    return -e * Math.cos(b / h * (Math.PI / 2)) + e + c;\n  };\n\n  d.easeOutSine = function (a, b, c, e, h) {\n    return e * Math.sin(b / h * (Math.PI / 2)) + c;\n  };\n\n  d.easeOutElastic = function (a, b, c, e, h) {\n    a = 1.70158;\n    var d = 0,\n        g = e;\n    if (0 === b) return c;\n    if (1 == (b /= h)) return c + e;\n    d || (d = .3 * h);\n    g < Math.abs(e) ? (g = e, a = d / 4) : a = d / (2 * Math.PI) * Math.asin(e / g);\n    return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * h - a) * Math.PI / d) + e + c;\n  };\n\n  d.fixStepE = function (a) {\n    a = a.toExponential(0).split(\"e\");\n    var b = Number(a[1]);\n    9 == Number(a[0]) && b++;\n    return d.generateNumber(1, b);\n  };\n\n  d.generateNumber = function (a, b) {\n    var c = \"\",\n        e;\n    e = 0 > b ? Math.abs(b) - 1 : Math.abs(b);\n    var h;\n\n    for (h = 0; h < e; h++) c += \"0\";\n\n    return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c);\n  };\n\n  d.setCN = function (a, b, c, e) {\n    if (a.addClassNames && b && (b = b.node) && c) {\n      var h = b.getAttribute(\"class\");\n      a = a.classNamePrefix + \"-\";\n      e && (a = \"\");\n      h ? b.setAttribute(\"class\", h + \" \" + a + c) : b.setAttribute(\"class\", a + c);\n    }\n  };\n\n  d.parseDefs = function (a, b) {\n    for (var c in a) {\n      var e = typeof a[c];\n      if (0 < a[c].length && \"object\" == e) for (var h = 0; h < a[c].length; h++) e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c][h], e);else \"object\" == e ? (e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c], e)) : b.setAttribute(c, a[c]);\n    }\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AxisBase = d.Class({\n    construct: function (a) {\n      this.createEvents(\"clickItem\", \"rollOverItem\", \"rollOutItem\");\n      this.viY = this.viX = this.y = this.x = this.dy = this.dx = 0;\n      this.axisThickness = 1;\n      this.axisColor = \"#000000\";\n      this.axisAlpha = 1;\n      this.gridCount = this.tickLength = 5;\n      this.gridAlpha = .15;\n      this.gridThickness = 1;\n      this.gridColor = \"#000000\";\n      this.dashLength = 0;\n      this.labelFrequency = 1;\n      this.showLastLabel = this.showFirstLabel = !0;\n      this.fillColor = \"#FFFFFF\";\n      this.fillAlpha = 0;\n      this.labelsEnabled = !0;\n      this.labelRotation = 0;\n      this.autoGridCount = !0;\n      this.offset = 0;\n      this.guides = [];\n      this.visible = !0;\n      this.counter = 0;\n      this.guides = [];\n      this.ignoreAxisWidth = this.inside = !1;\n      this.minHorizontalGap = 75;\n      this.minVerticalGap = 35;\n      this.titleBold = !0;\n      this.minorGridEnabled = !1;\n      this.minorGridAlpha = .07;\n      this.autoWrap = !1;\n      this.titleAlign = \"middle\";\n      this.labelOffset = 0;\n      this.bcn = \"axis-\";\n      this.periods = [{\n        period: \"ss\",\n        count: 1\n      }, {\n        period: \"ss\",\n        count: 5\n      }, {\n        period: \"ss\",\n        count: 10\n      }, {\n        period: \"ss\",\n        count: 30\n      }, {\n        period: \"mm\",\n        count: 1\n      }, {\n        period: \"mm\",\n        count: 5\n      }, {\n        period: \"mm\",\n        count: 10\n      }, {\n        period: \"mm\",\n        count: 30\n      }, {\n        period: \"hh\",\n        count: 1\n      }, {\n        period: \"hh\",\n        count: 3\n      }, {\n        period: \"hh\",\n        count: 6\n      }, {\n        period: \"hh\",\n        count: 12\n      }, {\n        period: \"DD\",\n        count: 1\n      }, {\n        period: \"DD\",\n        count: 2\n      }, {\n        period: \"DD\",\n        count: 3\n      }, {\n        period: \"DD\",\n        count: 4\n      }, {\n        period: \"DD\",\n        count: 5\n      }, {\n        period: \"WW\",\n        count: 1\n      }, {\n        period: \"MM\",\n        count: 1\n      }, {\n        period: \"MM\",\n        count: 2\n      }, {\n        period: \"MM\",\n        count: 3\n      }, {\n        period: \"MM\",\n        count: 6\n      }, {\n        period: \"YYYY\",\n        count: 1\n      }, {\n        period: \"YYYY\",\n        count: 2\n      }, {\n        period: \"YYYY\",\n        count: 5\n      }, {\n        period: \"YYYY\",\n        count: 10\n      }, {\n        period: \"YYYY\",\n        count: 50\n      }, {\n        period: \"YYYY\",\n        count: 100\n      }];\n      this.dateFormats = [{\n        period: \"fff\",\n        format: \"JJ:NN:SS\"\n      }, {\n        period: \"ss\",\n        format: \"JJ:NN:SS\"\n      }, {\n        period: \"mm\",\n        format: \"JJ:NN\"\n      }, {\n        period: \"hh\",\n        format: \"JJ:NN\"\n      }, {\n        period: \"DD\",\n        format: \"MMM DD\"\n      }, {\n        period: \"WW\",\n        format: \"MMM DD\"\n      }, {\n        period: \"MM\",\n        format: \"MMM\"\n      }, {\n        period: \"YYYY\",\n        format: \"YYYY\"\n      }];\n      this.nextPeriod = {\n        fff: \"ss\",\n        ss: \"mm\",\n        mm: \"hh\",\n        hh: \"DD\",\n        DD: \"MM\",\n        MM: \"YYYY\"\n      };\n      d.applyTheme(this, a, \"AxisBase\");\n    },\n    zoom: function (a, b) {\n      this.start = a;\n      this.end = b;\n      this.dataChanged = !0;\n      this.draw();\n    },\n    fixAxisPosition: function () {\n      var a = this.position;\n      \"H\" == this.orientation ? (\"left\" == a && (a = \"bottom\"), \"right\" == a && (a = \"top\")) : (\"bottom\" == a && (a = \"left\"), \"top\" == a && (a = \"right\"));\n      this.position = a;\n    },\n    draw: function () {\n      var a = this.chart;\n      this.allLabels = [];\n      this.counter = 0;\n      this.destroy();\n      this.fixAxisPosition();\n      this.labels = [];\n      var b = a.container,\n          c = b.set();\n      a.gridSet.push(c);\n      this.set = c;\n      b = b.set();\n      a.axesLabelsSet.push(b);\n      this.labelsSet = b;\n      this.axisLine = new this.axisRenderer(this);\n      this.autoGridCount ? (\"V\" == this.orientation ? (a = this.height / this.minVerticalGap, 3 > a && (a = 3)) : a = this.width / this.minHorizontalGap, this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount;\n      this.axisWidth = this.axisLine.axisWidth;\n      this.addTitle();\n    },\n    setOrientation: function (a) {\n      this.orientation = a ? \"H\" : \"V\";\n    },\n    addTitle: function () {\n      var a = this.title;\n      this.titleLabel = null;\n\n      if (a) {\n        var b = this.chart,\n            c = this.titleColor;\n        void 0 === c && (c = b.color);\n        var e = this.titleFontSize;\n        isNaN(e) && (e = b.fontSize + 1);\n        a = d.text(b.container, a, c, b.fontFamily, e, this.titleAlign, this.titleBold);\n        d.setCN(b, a, this.bcn + \"title\");\n        this.titleLabel = a;\n      }\n    },\n    positionTitle: function () {\n      var a = this.titleLabel;\n\n      if (a) {\n        var b,\n            c,\n            e = this.labelsSet,\n            h = {};\n        0 < e.length() ? h = e.getBBox() : (h.x = 0, h.y = 0, h.width = this.viW, h.height = this.viH, d.VML && (h.y += this.y, h.x += this.x));\n        e.push(a);\n        var e = h.x,\n            f = h.y;\n        d.VML && (this.rotate ? e -= this.x : f -= this.y);\n        var g = h.width,\n            h = h.height,\n            k = this.viW,\n            l = this.viH,\n            m = 0,\n            n = a.getBBox().height / 2,\n            q = this.inside,\n            p = this.titleAlign;\n\n        switch (this.position) {\n          case \"top\":\n            b = \"left\" == p ? -1 : \"right\" == p ? k : k / 2;\n            c = f - 10 - n;\n            break;\n\n          case \"bottom\":\n            b = \"left\" == p ? -1 : \"right\" == p ? k : k / 2;\n            c = f + h + 10 + n;\n            break;\n\n          case \"left\":\n            b = e - 10 - n;\n            q && (b -= 5);\n            c = \"left\" == p ? l + 1 : \"right\" == p ? -1 : l / 2;\n            m = -90;\n            break;\n\n          case \"right\":\n            b = e + g + 10 + n - 3, q && (b += 7), c = \"left\" == p ? l + 2 : \"right\" == p ? -2 : l / 2, m = -90;\n        }\n\n        this.marginsChanged ? (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty);\n        this.marginsChanged = !1;\n        0 !== m && a.rotate(m);\n      }\n    },\n    pushAxisItem: function (a, b) {\n      var c = this,\n          e = a.graphics();\n      0 < e.length() && (b ? c.labelsSet.push(e) : c.set.push(e));\n      if (e = a.getLabel()) this.labelsSet.push(e), e.click(function (b) {\n        c.handleMouse(b, a, \"clickItem\");\n      }).mouseover(function (b) {\n        c.handleMouse(b, a, \"rollOverItem\");\n      }).mouseout(function (b) {\n        c.handleMouse(b, a, \"rollOutItem\");\n      });\n    },\n    handleMouse: function (a, b, c) {\n      this.fire(c, {\n        type: c,\n        value: b.value,\n        serialDataItem: b.serialDataItem,\n        axis: this,\n        target: b.label,\n        chart: this.chart,\n        event: a\n      });\n    },\n    addGuide: function (a) {\n      for (var b = this.guides, c = !1, e = b.length, h = 0; h < b.length; h++) b[h] == a && (c = !0, e = h);\n\n      a = d.processObject(a, d.Guide, this.theme);\n      a.id || (a.id = \"guideAuto\" + e + \"_\" + new Date().getTime());\n      c || b.push(a);\n    },\n    removeGuide: function (a) {\n      var b = this.guides,\n          c;\n\n      for (c = 0; c < b.length; c++) b[c] == a && b.splice(c, 1);\n    },\n    handleGuideOver: function (a) {\n      clearTimeout(this.chart.hoverInt);\n      var b = a.graphics.getBBox(),\n          c = b.x + b.width / 2,\n          b = b.y + b.height / 2,\n          e = a.fillColor;\n      void 0 === e && (e = a.lineColor);\n      this.chart.showBalloon(a.balloonText, e, !0, c, b);\n    },\n    handleGuideOut: function () {\n      this.chart.hideBalloon();\n    },\n    addEventListeners: function (a, b) {\n      var c = this;\n      a.mouseover(function () {\n        c.handleGuideOver(b);\n      });\n      a.touchstart(function () {\n        c.handleGuideOver(b);\n      });\n      a.mouseout(function () {\n        c.handleGuideOut(b);\n      });\n    },\n    getBBox: function () {\n      var a = this.labelsSet.getBBox();\n      d.VML || (a = {\n        x: a.x + this.x,\n        y: a.y + this.y,\n        width: a.width,\n        height: a.height\n      });\n      return a;\n    },\n    destroy: function () {\n      d.remove(this.set);\n      d.remove(this.labelsSet);\n      var a = this.axisLine;\n      a && d.remove(a.set);\n      d.remove(this.grid0);\n    },\n    chooseMinorFrequency: function (a) {\n      for (var b = 10; 0 < b; b--) if (a / b == Math.round(a / b)) return a / b;\n    },\n    parseDatesDraw: function () {\n      var a,\n          b = this.chart,\n          c = this.showFirstLabel,\n          e = this.showLastLabel,\n          h,\n          f = \"\",\n          g = d.extractPeriod(this.minPeriod),\n          k = d.getPeriodDuration(g.period, g.count),\n          l,\n          m,\n          n,\n          q,\n          p,\n          t = this.firstDayOfWeek,\n          r = this.boldPeriodBeginning;\n      a = this.minorGridEnabled;\n      var u,\n          z = this.gridAlpha,\n          y,\n          v = this.choosePeriod(0),\n          w = v.period,\n          v = v.count,\n          A = d.getPeriodDuration(w, v);\n      A < k && (w = g.period, v = g.count, A = k);\n      g = w;\n      \"WW\" == g && (g = \"DD\");\n      this.stepWidth = this.getStepWidth(this.timeDifference);\n      var B = Math.ceil(this.timeDifference / A) + 5,\n          D = l = d.resetDateToMin(new Date(this.startTime - A), w, v, t).getTime();\n      g == w && 1 == v && this.centerLabelOnFullPeriod && (n = A * this.stepWidth);\n      this.cellWidth = k * this.stepWidth;\n      q = Math.round(l / A);\n      k = -1;\n      q / 2 == Math.round(q / 2) && (k = -2, l -= A);\n      q = this.firstTime;\n      var C = 0;\n      a && 1 < v && (u = this.chooseMinorFrequency(v), y = d.getPeriodDuration(w, u));\n      if (0 < this.gridCountR) for (a = k; a <= B; a++) {\n        p = q + A * (a + Math.floor((D - q) / A)) - C;\n        \"DD\" == w && (p += 36E5);\n        p = d.resetDateToMin(new Date(p), w, v, t).getTime();\n        \"MM\" == w && (h = (p - l) / A, 1.5 <= (p - l) / A && (p = p - (h - 1) * A + d.getPeriodDuration(\"DD\", 3), p = d.resetDateToMin(new Date(p), w, 1).getTime(), C += A));\n        h = (p - this.startTime) * this.stepWidth;\n        h = this.rotate ? h + (this.x - this.viX) : \"date\" == this.type ? this.axisWidth - h + (this.y - this.viY) : h + (this.y - this.viY);\n        f = !1;\n        this.nextPeriod[g] && (f = this.checkPeriodChange(this.nextPeriod[g], 1, p, l, g));\n        l = !1;\n        f && this.markPeriodChange ? (f = this.dateFormatsObject[this.nextPeriod[g]], this.twoLineMode && (f = this.dateFormatsObject[g] + \"\\n\" + f, f = d.fixBrakes(f)), l = !0) : f = this.dateFormatsObject[g];\n        r || (l = !1);\n        this.currentDateFormat = f;\n        f = d.formatDate(new Date(p), f, b);\n        if (a == k && !c || a == B && !e) f = \" \";\n        this.labelFunction && (f = this.labelFunction(f, new Date(p), this, w, v, m).toString());\n        this.boldLabels && (l = !0);\n        m = new this.axisItemRenderer(this, h, f, !1, n, 0, !1, l);\n        this.pushAxisItem(m);\n        m = l = p;\n        if (!isNaN(u)) for (h = 1; h < v; h += u) this.gridAlpha = this.minorGridAlpha, f = p + y * h, f = d.resetDateToMin(new Date(f), w, u, t).getTime(), f = new this.axisItemRenderer(this, (f - this.startTime) * this.stepWidth), this.pushAxisItem(f);\n        this.gridAlpha = z;\n      }\n    },\n    choosePeriod: function (a) {\n      var b = d.getPeriodDuration(this.periods[a].period, this.periods[a].count),\n          c = Math.ceil(this.timeDifference / b),\n          e = this.periods;\n      return this.timeDifference < b && 0 < a ? e[a - 1] : c <= this.gridCountR ? e[a] : a + 1 < e.length ? this.choosePeriod(a + 1) : e[a];\n    },\n    getStepWidth: function (a) {\n      var b;\n      this.startOnAxis ? (b = this.axisWidth / (a - 1), 1 == a && (b = this.axisWidth)) : b = this.axisWidth / a;\n      return b;\n    },\n    timeZoom: function (a, b) {\n      this.startTime = a;\n      this.endTime = b;\n    },\n    minDuration: function () {\n      var a = d.extractPeriod(this.minPeriod);\n      return d.getPeriodDuration(a.period, a.count);\n    },\n    checkPeriodChange: function (a, b, c, e, h) {\n      c = new Date(c);\n      var f = new Date(e),\n          g = this.firstDayOfWeek;\n      e = b;\n      \"DD\" == a && (b = 1);\n      c = d.resetDateToMin(c, a, b, g).getTime();\n      b = d.resetDateToMin(f, a, b, g).getTime();\n      return \"DD\" == a && \"hh\" != h && c - b <= d.getPeriodDuration(a, e) ? !1 : c != b ? !0 : !1;\n    },\n    generateDFObject: function () {\n      this.dateFormatsObject = {};\n      var a;\n\n      for (a = 0; a < this.dateFormats.length; a++) {\n        var b = this.dateFormats[a];\n        this.dateFormatsObject[b.period] = b.format;\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ValueAxis = d.Class({\n    inherits: d.AxisBase,\n    construct: function (a) {\n      this.cname = \"ValueAxis\";\n      this.createEvents(\"axisChanged\", \"logarithmicAxisFailed\", \"axisSelfZoomed\", \"axisZoomed\");\n      d.ValueAxis.base.construct.call(this, a);\n      this.dataChanged = !0;\n      this.stackType = \"none\";\n      this.position = \"left\";\n      this.unitPosition = \"right\";\n      this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1;\n      this.durationUnits = {\n        DD: \"d. \",\n        hh: \":\",\n        mm: \":\",\n        ss: \"\"\n      };\n      this.scrollbar = !1;\n      this.baseValue = 0;\n      this.radarCategoriesEnabled = !0;\n      this.gridType = \"polygons\";\n      this.useScientificNotation = !1;\n      this.axisTitleOffset = 10;\n      this.minMaxMultiplier = 1;\n      this.logGridLimit = 2;\n      this.totalTextOffset = this.treatZeroAs = 0;\n      this.minPeriod = \"ss\";\n      d.applyTheme(this, a, this.cname);\n    },\n    updateData: function () {\n      0 >= this.gridCountR && (this.gridCountR = 1);\n      this.totals = [];\n      this.data = this.chart.chartData;\n      var a = this.chart;\n      \"xy\" != a.type && (this.stackGraphs(\"smoothedLine\"), this.stackGraphs(\"line\"), this.stackGraphs(\"column\"), this.stackGraphs(\"step\"));\n      this.recalculateToPercents && this.recalculate();\n      this.synchronizationMultiplier && this.synchronizeWith ? (d.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0)) : (this.foundGraphs = !1, this.getMinMax());\n    },\n    draw: function () {\n      d.ValueAxis.base.draw.call(this);\n      var a = this.chart,\n          b = this.set;\n      d.setCN(a, this.set, \"value-axis value-axis-\" + this.id);\n      d.setCN(a, this.labelsSet, \"value-axis value-axis-\" + this.id);\n      d.setCN(a, this.axisLine.axisSet, \"value-axis value-axis-\" + this.id);\n      var c = this.type;\n      \"duration\" == c && (this.duration = \"ss\");\n      !0 === this.dataChanged && (this.updateData(), this.dataChanged = !1);\n      \"date\" == c && (this.logarithmic = !1, this.min = this.minRR, this.max = this.maxRR, this.minimumDate && (this.min = this.minimumDate.getTime()), this.maximumDate && (this.max = this.maximumDate.getTime()));\n\n      if (this.logarithmic) {\n        var e = this.treatZeroAs,\n            h = this.getMin(0, this.data.length - 1);\n        this.minReal < h && (this.minReal = h);\n        isNaN(this.minReal) && (this.minReal = h);\n        0 < e && 0 === h && (this.minReal = h = e);\n\n        if (0 >= h || 0 >= this.minimum) {\n          this.fire(\"logarithmicAxisFailed\", {\n            type: \"logarithmicAxisFailed\",\n            chart: a\n          });\n          return;\n        }\n      }\n\n      this.grid0 = null;\n      var f,\n          g,\n          k = a.dx,\n          l = a.dy,\n          e = !1,\n          h = this.logarithmic;\n      if (isNaN(this.min) || isNaN(this.max) || !this.foundGraphs || Infinity == this.min || -Infinity == this.max) e = !0;else {\n        var m = this.labelFrequency,\n            n = this.showFirstLabel,\n            q = this.showLastLabel,\n            p = 1;\n        f = 0;\n        this.minCalc = this.min;\n        this.maxCalc = this.max;\n        this.strictMinMax && (isNaN(this.minimum) || (this.min = this.minimum), isNaN(this.maximum) || (this.max = this.maximum));\n        isNaN(this.minZoom) || (this.min = this.minZoom);\n        isNaN(this.maxZoom) || (this.max = this.maxZoom);\n        var t = Math.round((this.maxCalc - this.minCalc) / this.step) + 1,\n            r;\n        !0 === h ? (r = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, this.stepWidth = this.axisWidth / r, r > this.logGridLimit && (t = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, f = Math.round(Math.log(this.minReal) * Math.LOG10E), t > this.gridCountR && (p = Math.ceil(t / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);\n        var u = 0;\n        1 > this.step && -1 < this.step && (u = d.getDecimals(this.step));\n        this.integersOnly && (u = 0);\n        u > this.maxDecCount && (u = this.maxDecCount);\n        var z = this.precision;\n        isNaN(z) || (u = z);\n        this.max = d.roundTo(this.max, this.maxDecCount);\n        this.min = d.roundTo(this.min, this.maxDecCount);\n        g = {};\n        g.precision = u;\n        g.decimalSeparator = a.nf.decimalSeparator;\n        g.thousandsSeparator = a.nf.thousandsSeparator;\n        this.numberFormatter = g;\n        var y,\n            v = this.guides,\n            w = v.length;\n\n        if (0 < w) {\n          var A = this.fillAlpha;\n\n          for (g = this.fillAlpha = 0; g < w; g++) {\n            var B = v[g],\n                D = NaN,\n                C = B.above;\n            isNaN(B.toValue) || (D = this.getCoordinate(B.toValue), y = new this.axisItemRenderer(this, D, \"\", !0, NaN, NaN, B), this.pushAxisItem(y, C));\n            var J = NaN;\n            isNaN(B.value) || (J = this.getCoordinate(B.value), y = new this.axisItemRenderer(this, J, B.label, !0, NaN, (D - J) / 2, B), this.pushAxisItem(y, C));\n            isNaN(D - J) || (y = new this.guideFillRenderer(this, J, D, B), this.pushAxisItem(y, C), y = y.graphics(), B.graphics = y, B.balloonText && this.addEventListeners(y, B));\n          }\n\n          this.fillAlpha = A;\n        }\n\n        this.exponential = !1;\n\n        for (g = f; g < t; g += p) v = d.roundTo(this.step * g + this.min, u), -1 != String(v).indexOf(\"e\") && (this.exponential = !0);\n\n        this.duration && (this.maxInterval = d.getMaxInterval(this.max, this.duration));\n        var u = this.step,\n            H,\n            v = this.minorGridAlpha;\n        this.minorGridEnabled && (H = this.getMinorGridStep(u, this.stepWidth * u));\n        if (\"date\" == c) this.generateDFObject(), this.timeDifference = this.max - this.min, this.maxTime = this.lastTime = this.max, this.startTime = this.firstTime = this.min, this.parseDatesDraw();else for (g = f; g < t; g += p) if (c = u * g + this.minCalc, h && this.max - this.min > 10 * this.min && (c -= this.min), c = d.roundTo(c, this.maxDecCount + 1), !this.integersOnly || Math.round(c) == c) if (isNaN(z) || Number(d.toFixed(c, z)) == c) {\n          !0 === h && (0 === c && (c = this.minReal), r > this.logGridLimit && (c = Math.pow(10, g)));\n          y = this.formatValue(c, !1, g);\n          Math.round(g / m) != g / m && (y = void 0);\n          if (0 === g && !n || g == t - 1 && !q) y = \" \";\n          f = this.getCoordinate(c);\n          y = new this.axisItemRenderer(this, f, y, void 0, void 0, void 0, void 0, this.boldLabels);\n          this.pushAxisItem(y);\n\n          if (c == this.baseValue && \"radar\" != a.type) {\n            var I,\n                T,\n                A = this.viW,\n                B = this.viH;\n            y = this.viX;\n            w = this.viY;\n            \"H\" == this.orientation ? 0 <= f && f <= A + 1 && (I = [f, f, f + k], T = [B, 0, l]) : 0 <= f && f <= B + 1 && (I = [0, A, A + k], T = [f, f, f + l]);\n            I && (f = d.fitToBounds(2 * this.gridAlpha, 0, 1), f = d.line(a.container, I, T, this.gridColor, f, 1, this.dashLength), f.translate(y, w), this.grid0 = f, a.axesSet.push(f), f.toBack(), d.setCN(a, f, this.bcn + \"zero-grid-\" + this.id), d.setCN(a, f, this.bcn + \"zero-grid\"));\n          }\n\n          if (!isNaN(H) && 0 < v && g < t - 1) {\n            f = this.gridAlpha;\n            this.gridAlpha = this.minorGridAlpha;\n\n            for (y = 1; y < u / H; y++) w = this.getCoordinate(c + H * y), w = new this.axisItemRenderer(this, w, \"\", !1, 0, 0, !1, !1, 0, !0), this.pushAxisItem(w);\n\n            this.gridAlpha = f;\n          }\n        }\n        r = this.baseValue;\n        this.min > this.baseValue && this.max > this.baseValue && (r = this.min);\n        this.min < this.baseValue && this.max < this.baseValue && (r = this.max);\n        h && r < this.minReal && (r = this.minReal);\n        this.baseCoord = this.getCoordinate(r);\n        r = {\n          type: \"axisChanged\",\n          target: this,\n          chart: a\n        };\n        r.min = h ? this.minReal : this.min;\n        r.max = this.max;\n        this.fire(\"axisChanged\", r);\n        this.axisCreated = !0;\n      }\n      h = this.axisLine.set;\n      r = this.labelsSet;\n      this.positionTitle();\n      \"radar\" != a.type ? (a = this.viX, H = this.viY, b.translate(a, H), r.translate(a, H)) : h.toFront();\n      !this.visible || e ? (b.hide(), h.hide(), r.hide()) : (b.show(), h.show(), r.show());\n      this.axisY = this.y - this.viY;\n      this.axisX = this.x - this.viX;\n    },\n    formatValue: function (a, b, c) {\n      var e = this.exponential,\n          h = this.logarithmic,\n          f = this.numberFormatter,\n          g = this.chart;\n      !0 === this.logarithmic && (e = -1 != String(a).indexOf(\"e\") ? !0 : !1);\n      this.useScientificNotation && (e = !0);\n      this.usePrefixes && (e = !1);\n      e ? (b = -1 == String(a).indexOf(\"e\") ? a.toExponential(15) : String(a), c = b.split(\"e\"), b = Number(c[0]), c = Number(c[1]), b = d.roundTo(b, 14), 10 == b && (b = 1, c += 1), b = b + \"e\" + c, 0 === a && (b = \"0\"), 1 == a && (b = \"1\")) : (h && (e = String(a).split(\".\"), e[1] ? (f.precision = e[1].length, 0 > c && (f.precision = Math.abs(c)), b && 1 < a && (f.precision = 0)) : f.precision = -1), b = this.usePrefixes ? d.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : d.formatNumber(a, f, f.precision));\n      this.duration && (b = d.formatDuration(a, this.duration, \"\", this.durationUnits, this.maxInterval, f));\n      \"date\" == this.type && (b = d.formatDate(new Date(a), this.currentDateFormat, g));\n      this.recalculateToPercents ? b += \"%\" : (f = this.unit) && (b = \"left\" == this.unitPosition ? f + b : b + f);\n      this.labelFunction && (b = this.labelFunction(a, b, this).toString());\n      return b;\n    },\n    getMinorGridStep: function (a, b) {\n      var c = [5, 4, 2];\n      60 > b && c.shift();\n\n      for (var e = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), h = 0; h < c.length; h++) {\n        var d = a / c[h],\n            g = Math.floor(Math.log(Math.abs(d)) * Math.LOG10E);\n        if (!(0 < Math.abs(e - g))) if (1 > a) {\n          if (g = Math.pow(10, -g) * d, g == Math.round(g)) return d;\n        } else if (d == Math.round(d)) return d;\n      }\n    },\n    stackGraphs: function (a) {\n      var b = this.stackType;\n      \"stacked\" == b && (b = \"regular\");\n      \"line\" == b && (b = \"none\");\n      \"100% stacked\" == b && (b = \"100%\");\n      this.stackType = b;\n      var c = [],\n          e = [],\n          h = [],\n          f = [],\n          g,\n          k = this.chart.graphs,\n          l,\n          m,\n          n,\n          q,\n          p = this.baseValue,\n          t = !1;\n      if (\"line\" == a || \"step\" == a || \"smoothedLine\" == a) t = !0;\n      if (t && (\"regular\" == b || \"100%\" == b)) for (q = 0; q < k.length; q++) n = k[q], n.hidden || (m = n.type, n.chart == this.chart && n.valueAxis == this && a == m && n.stackable && (l && (n.stackGraph = l), l = n));\n\n      for (l = this.start; l <= this.end; l++) {\n        var r = 0;\n\n        for (q = 0; q < k.length; q++) if (n = k[q], n.hidden) n.newStack && (h[l] = NaN, e[l] = NaN);else if (m = n.type, n.chart == this.chart && n.valueAxis == this && a == m && n.stackable) if (m = this.data[l].axes[this.id].graphs[n.id], g = m.values.value, isNaN(g)) n.newStack && (h[l] = NaN, e[l] = NaN);else {\n          var u = d.getDecimals(g);\n          r < u && (r = u);\n          isNaN(f[l]) ? f[l] = Math.abs(g) : f[l] += Math.abs(g);\n          f[l] = d.roundTo(f[l], r);\n          u = n.fillToGraph;\n          t && u && (u = this.data[l].axes[this.id].graphs[u.id]) && (m.values.open = u.values.value);\n          \"regular\" == b && (t && (isNaN(c[l]) ? (c[l] = g, m.values.close = g, m.values.open = this.baseValue) : (isNaN(g) ? m.values.close = c[l] : m.values.close = g + c[l], m.values.open = c[l], c[l] = m.values.close)), \"column\" == a && (n.newStack && (h[l] = NaN, e[l] = NaN), m.values.close = g, 0 > g ? (m.values.close = g, isNaN(e[l]) ? m.values.open = p : (m.values.close += e[l], m.values.open = e[l]), e[l] = m.values.close) : (m.values.close = g, isNaN(h[l]) ? m.values.open = p : (m.values.close += h[l], m.values.open = h[l]), h[l] = m.values.close)));\n        }\n      }\n\n      for (l = this.start; l <= this.end; l++) for (q = 0; q < k.length; q++) (n = k[q], n.hidden) ? n.newStack && (h[l] = NaN, e[l] = NaN) : (m = n.type, n.chart == this.chart && n.valueAxis == this && a == m && n.stackable && (m = this.data[l].axes[this.id].graphs[n.id], g = m.values.value, isNaN(g) || (c = g / f[l] * 100, m.values.percents = c, m.values.total = f[l], n.newStack && (h[l] = NaN, e[l] = NaN), \"100%\" == b && (isNaN(e[l]) && (e[l] = 0), isNaN(h[l]) && (h[l] = 0), 0 > c ? (m.values.close = d.fitToBounds(c + e[l], -100, 100), m.values.open = e[l], e[l] = m.values.close) : (m.values.close = d.fitToBounds(c + h[l], -100, 100), m.values.open = h[l], h[l] = m.values.close)))));\n    },\n    recalculate: function () {\n      var a = this.chart,\n          b = a.graphs,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var e = b[c];\n\n        if (e.valueAxis == this) {\n          var h = \"value\";\n          if (\"candlestick\" == e.type || \"ohlc\" == e.type) h = \"open\";\n          var f,\n              g,\n              k = this.end + 2,\n              k = d.fitToBounds(this.end + 1, 0, this.data.length - 1),\n              l = this.start;\n          0 < l && l--;\n          var m;\n          g = this.start;\n          e.compareFromStart && (g = 0);\n\n          if (!isNaN(a.startTime) && (m = a.categoryAxis)) {\n            var n = m.minDuration(),\n                n = new Date(a.startTime + n / 2),\n                q = d.resetDateToMin(new Date(a.startTime), m.minPeriod).getTime();\n            d.resetDateToMin(new Date(n), m.minPeriod).getTime() > q && g++;\n          }\n\n          if (m = a.recalculateFromDate) m = d.getDate(m, a.dataDateFormat, \"fff\"), g = a.getClosestIndex(a.chartData, \"time\", m.getTime(), !0, 0, a.chartData.length), k = a.chartData.length - 1;\n\n          for (m = g; m <= k && (g = this.data[m].axes[this.id].graphs[e.id], f = g.values[h], isNaN(f)); m++);\n\n          this.recBaseValue = f;\n\n          for (h = l; h <= k; h++) {\n            g = this.data[h].axes[this.id].graphs[e.id];\n            g.percents = {};\n            var l = g.values,\n                p;\n\n            for (p in l) g.percents[p] = \"percents\" != p ? l[p] / f * 100 - 100 : l[p];\n          }\n        }\n      }\n    },\n    getMinMax: function () {\n      var a = !1,\n          b = this.chart,\n          c = b.graphs,\n          e;\n\n      for (e = 0; e < c.length; e++) {\n        var h = c[e].type;\n        (\"line\" == h || \"step\" == h || \"smoothedLine\" == h) && this.expandMinMax && (a = !0);\n      }\n\n      a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++);\n      \"serial\" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++);\n      a = this.minMaxMultiplier;\n      this.min = this.getMin(this.start, this.end);\n      this.max = this.getMax();\n      this.minRR = this.min;\n      this.maxRR = this.max;\n      a = (this.max - this.min) * (a - 1);\n      this.min -= a;\n      this.max += a;\n      a = this.guides.length;\n      if (this.includeGuidesInMinMax && 0 < a) for (b = 0; b < a; b++) c = this.guides[b], c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);\n      isNaN(this.minimum) || (this.min = this.minimum);\n      isNaN(this.maximum) || (this.max = this.maximum);\n      this.minimumDate && (this.min = this.minimumDate.getTime());\n      this.maximumDate && (this.max = this.maximumDate.getTime());\n      this.min > this.max && (a = this.max, this.max = this.min, this.min = a);\n      isNaN(this.minTemp) || (this.min = this.minTemp);\n      isNaN(this.maxTemp) || (this.max = this.maxTemp);\n      this.minReal = this.min;\n      this.maxReal = this.max;\n      0 === this.min && 0 === this.max && (this.max = 9);\n      this.min > this.max && (this.min = this.max - 1);\n      a = this.min;\n      b = this.max;\n      c = this.max - this.min;\n      e = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\n      isNaN(this.maximum) && isNaN(this.maxTemp) && (this.max = Math.ceil(this.max / e) * e + e);\n      isNaN(this.minimum) && isNaN(this.minTemp) && (this.min = Math.floor(this.min / e) * e - e);\n      0 > this.min && 0 <= a && (this.min = 0);\n      0 < this.max && 0 >= b && (this.max = 0);\n      \"100%\" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max = 0 > this.max ? 0 : 100);\n      c = this.max - this.min;\n      e = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\n      this.step = Math.ceil(c / this.gridCountR / e) * e;\n      c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E));\n      c = d.fixStepE(c);\n      e = Math.ceil(this.step / c);\n      5 < e && (e = 10);\n      5 >= e && 2 < e && (e = 5);\n      this.step = Math.ceil(this.step / (c * e)) * c * e;\n      1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), this.maxDecCount = Math.round(this.maxDecCount), this.step = d.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount = 0;\n      this.min = this.step * Math.floor(this.min / this.step);\n      this.max = this.step * Math.ceil(this.max / this.step);\n      0 > this.min && 0 <= a && (this.min = 0);\n      0 < this.max && 0 >= b && (this.max = 0);\n      1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal));\n      c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E));\n      0 === this.min && (this.minReal = c);\n      0 === this.min && 1 < this.minReal && (this.minReal = 1);\n      0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min);\n      this.logarithmic && (2 < Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (b = Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) * Math.LOG10E)) / 10, a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, b < a && (this.minReal = this.min = 10 * a)));\n    },\n    getMin: function (a, b) {\n      var c, e;\n\n      for (e = a; e <= b; e++) {\n        var h = this.data[e].axes[this.id].graphs,\n            d;\n\n        for (d in h) if (h.hasOwnProperty(d)) {\n          var g = this.chart.getGraphById(d);\n\n          if (g.includeInMinMax && (!g.hidden || this.includeHidden)) {\n            isNaN(c) && (c = Infinity);\n            this.foundGraphs = !0;\n            g = h[d].values;\n            this.recalculateToPercents && (g = h[d].percents);\n            var k;\n            if (this.minMaxField) k = g[this.minMaxField], k < c && (c = k);else for (var l in g) g.hasOwnProperty(l) && \"percents\" != l && \"total\" != l && (k = g[l], k < c && (c = k));\n          }\n        }\n      }\n\n      return c;\n    },\n    getMax: function () {\n      var a, b;\n\n      for (b = this.start; b <= this.end; b++) {\n        var c = this.data[b].axes[this.id].graphs,\n            e;\n\n        for (e in c) if (c.hasOwnProperty(e)) {\n          var h = this.chart.getGraphById(e);\n\n          if (h.includeInMinMax && (!h.hidden || this.includeHidden)) {\n            isNaN(a) && (a = -Infinity);\n            this.foundGraphs = !0;\n            h = c[e].values;\n            this.recalculateToPercents && (h = c[e].percents);\n            var d;\n            if (this.minMaxField) d = h[this.minMaxField], d > a && (a = d);else for (var g in h) h.hasOwnProperty(g) && \"percents\" != g && \"total\" != g && (d = h[g], d > a && (a = d));\n          }\n        }\n      }\n\n      return a;\n    },\n    dispatchZoomEvent: function (a, b) {\n      var c = {\n        type: \"axisZoomed\",\n        startValue: a,\n        endValue: b,\n        target: this,\n        chart: this.chart\n      };\n      this.fire(c.type, c);\n    },\n    zoomOut: function () {\n      var a = this.chart;\n      \"xy\" != a.type && (this.maxZoom = this.minZoom = void 0, a.updateAfterValueZoom());\n    },\n    zoomToValues: function (a, b) {\n      var c = this.chart;\n      \"xy\" == c.type ? (b < a && (c = b, b = a, a = c), a < this.min && (a = this.min), b > this.max && (b = this.max), c = {\n        type: \"axisSelfZoomed\"\n      }, c.chart = this.chart, c.valueAxis = this, c.multiplier = this.axisWidth / Math.abs(this.getCoordinate(b) - this.getCoordinate(a)), c.startValue = a, c.endValue = b, c.position = \"V\" == this.orientation ? this.reversed ? this.getCoordinate(a) : this.getCoordinate(b) : this.reversed ? this.getCoordinate(b) : this.getCoordinate(a), this.fire(c.type, c)) : (this.minZoom = a, this.maxZoom = b, c.updateAfterValueZoom());\n    },\n    coordinateToValue: function (a) {\n      if (isNaN(a)) return NaN;\n      var b = this.axisWidth,\n          c = this.stepWidth,\n          e = this.reversed,\n          h = this.rotate,\n          d = this.min,\n          g = this.minReal;\n      return !0 === this.logarithmic ? Math.pow(10, (h ? !0 === e ? (b - a) / c : a / c : !0 === e ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === e ? h ? d - (a - b) / c : a / c + d : h ? a / c + d : d - (a - b) / c;\n    },\n    getCoordinate: function (a) {\n      if (isNaN(a)) return NaN;\n      var b = this.rotate,\n          c = this.reversed,\n          e = this.axisWidth,\n          d = this.stepWidth,\n          f = this.min,\n          g = this.minReal;\n      !0 === this.logarithmic ? (0 === a && (a = this.treatZeroAs), a = Math.log(a) * Math.LOG10E - Math.log(g) * Math.LOG10E, b = b ? !0 === c ? e - d * a : d * a : !0 === c ? d * a : e - d * a) : b = !0 === c ? b ? e - d * (a - f) : d * (a - f) : b ? d * (a - f) : e - d * (a - f);\n      b = this.rotate ? b + (this.x - this.viX) : b + (this.y - this.viY);\n      1E7 < Math.abs(b) && (b = 1E7 * (b / Math.abs(b)));\n      return Math.round(b);\n    },\n    synchronizeWithAxis: function (a) {\n      this.synchronizeWith = a;\n      this.listenTo(this.synchronizeWith, \"axisChanged\", this.handleSynchronization);\n    },\n    handleSynchronization: function () {\n      var a = this.synchronizeWith,\n          b = a.min,\n          c = a.max,\n          a = a.step,\n          e = this.synchronizationMultiplier;\n      e && (this.min = b * e, this.max = c * e, this.step = a * e, b = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)), b = Math.abs(Math.log(Math.abs(b)) * Math.LOG10E), this.maxDecCount = b = Math.round(b), this.draw());\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.RecAxis = d.Class({\n    construct: function (a) {\n      var b = a.chart,\n          c = a.axisThickness,\n          e = a.axisColor,\n          h = a.axisAlpha,\n          f = a.offset,\n          g = a.dx,\n          k = a.dy,\n          l = a.viX,\n          m = a.viY,\n          n = a.viH,\n          q = a.viW,\n          p = b.container;\n      \"H\" == a.orientation ? (e = d.line(p, [0, q], [0, 0], e, h, c), this.axisWidth = a.width, \"bottom\" == a.position ? (k = c / 2 + f + n + m - 1, c = l) : (k = -c / 2 - f + m + k, c = g + l)) : (this.axisWidth = a.height, \"right\" == a.position ? (e = d.line(p, [0, 0, -g], [0, n, n - k], e, h, c), k = m + k, c = c / 2 + f + g + q + l - 1) : (e = d.line(p, [0, 0], [0, n], e, h, c), k = m, c = -c / 2 - f + l));\n      e.translate(c, k);\n      c = b.container.set();\n      c.push(e);\n      b.axesSet.push(c);\n      d.setCN(b, e, a.bcn + \"line\");\n      this.axisSet = c;\n      this.set = e;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.RecItem = d.Class({\n    construct: function (a, b, c, e, h, f, g, k, l, m, n, q) {\n      b = Math.round(b);\n      var p = a.chart;\n      this.value = c;\n      void 0 == c && (c = \"\");\n      l || (l = 0);\n      void 0 == e && (e = !0);\n      var t = p.fontFamily,\n          r = a.fontSize;\n      void 0 == r && (r = p.fontSize);\n      var u = a.color;\n      void 0 == u && (u = p.color);\n      void 0 !== n && (u = n);\n      var z = a.chart.container,\n          y = z.set();\n      this.set = y;\n      var v = a.axisThickness,\n          w = a.axisColor,\n          A = a.axisAlpha,\n          B = a.tickLength,\n          D = a.gridAlpha,\n          C = a.gridThickness,\n          J = a.gridColor,\n          H = a.dashLength,\n          I = a.fillColor,\n          T = a.fillAlpha,\n          da = a.labelsEnabled;\n      n = a.labelRotation;\n      var pa = a.counter,\n          U = a.inside,\n          na = a.labelOffset,\n          qa = a.dx,\n          ja = a.dy,\n          Pa = a.orientation,\n          aa = a.position,\n          Z = a.previousCoord,\n          V = a.viH,\n          sa = a.viW,\n          ba = a.offset,\n          ca,\n          ta;\n      g ? (void 0 !== g.id && (q = p.classNamePrefix + \"-guide-\" + g.id), da = !0, isNaN(g.tickLength) || (B = g.tickLength), void 0 != g.lineColor && (J = g.lineColor), void 0 != g.color && (u = g.color), isNaN(g.lineAlpha) || (D = g.lineAlpha), isNaN(g.dashLength) || (H = g.dashLength), isNaN(g.lineThickness) || (C = g.lineThickness), !0 === g.inside && (U = !0), isNaN(g.labelRotation) || (n = g.labelRotation), isNaN(g.fontSize) || (r = g.fontSize), g.position && (aa = g.position), void 0 !== g.boldLabel && (k = g.boldLabel), isNaN(g.labelOffset) || (na = g.labelOffset)) : \"\" === c && (B = 0);\n      var ia = \"start\";\n      h && (ia = \"middle\");\n      var P = n * Math.PI / 180,\n          W,\n          wa,\n          G = 0,\n          x = 0,\n          ka = 0,\n          ea = W = 0,\n          Qa = 0;\n      \"V\" == Pa && (n = 0);\n      var Y;\n      da && \"\" !== c && (Y = a.autoWrap && 0 === n ? d.wrappedText(z, c, u, t, r, ia, k, h, 0) : d.text(z, c, u, t, r, ia, k), ia = Y.getBBox(), ea = ia.width, Qa = ia.height);\n\n      if (\"H\" == Pa) {\n        if (0 <= b && b <= sa + 1 && (0 < B && 0 < A && b + l <= sa + 1 && (ca = d.line(z, [b + l, b + l], [0, B], w, A, C), y.push(ca)), 0 < D && (ta = d.line(z, [b, b + qa, b + qa], [V, V + ja, ja], J, D, C, H), y.push(ta))), x = 0, G = b, g && 90 == n && U && (G -= r), !1 === e ? (ia = \"start\", x = \"bottom\" == aa ? U ? x + B : x - B : U ? x - B : x + B, G += 3, h && (G += h / 2 - 3, ia = \"middle\"), 0 < n && (ia = \"middle\")) : ia = \"middle\", 1 == pa && 0 < T && !g && !m && Z < sa && (e = d.fitToBounds(b, 0, sa), Z = d.fitToBounds(Z, 0, sa), W = e - Z, 0 < W && (wa = d.rect(z, W, a.height, I, T), wa.translate(e - W + qa, ja), y.push(wa))), \"bottom\" == aa ? (x += V + r / 2 + ba, U ? (0 < n ? (x = V - ea / 2 * Math.sin(P) - B - 3, G += ea / 2 * Math.cos(P) - 4 + 2) : 0 > n ? (x = V + ea * Math.sin(P) - B - 3 + 2, G += -ea * Math.cos(P) - Qa * Math.sin(P) - 4) : x -= B + r + 3 + 3, x -= na) : (0 < n ? (x = V + ea / 2 * Math.sin(P) + B + 3, G -= ea / 2 * Math.cos(P)) : 0 > n ? (x = V + B + 3 - ea / 2 * Math.sin(P) + 2, G += ea / 2 * Math.cos(P)) : x += B + v + 3 + 3, x += na)) : (x += ja + r / 2 - ba, G += qa, U ? (0 < n ? (x = ea / 2 * Math.sin(P) + B + 3, G -= ea / 2 * Math.cos(P)) : x += B + 3, x += na) : (0 < n ? (x = -(ea / 2) * Math.sin(P) - B - 6, G += ea / 2 * Math.cos(P)) : x -= B + r + 3 + v + 3, x -= na)), \"bottom\" == aa ? W = (U ? V - B - 1 : V + v - 1) + ba : (ka = qa, W = (U ? ja : ja - B - v + 1) - ba), f && (G += f), f = G, 0 < n && (f += ea / 2 * Math.cos(P)), Y && (r = 0, U && (r = ea / 2 * Math.cos(P)), f + r > sa + 2 || 0 > f)) Y.remove(), Y = null;\n      } else {\n        0 <= b && b <= V + 1 && (0 < B && 0 < A && b + l <= V + 1 && (ca = d.line(z, [0, B], [b + l, b + l], w, A, C), y.push(ca)), 0 < D && (ta = d.line(z, [0, qa, sa + qa], [b, b + ja, b + ja], J, D, C, H), y.push(ta)));\n        ia = \"end\";\n        if (!0 === U && \"left\" == aa || !1 === U && \"right\" == aa) ia = \"start\";\n        x = b - r / 2;\n        1 == pa && 0 < T && !g && !m && (e = d.fitToBounds(b, 0, V), Z = d.fitToBounds(Z, 0, V), P = e - Z, wa = d.polygon(z, [0, a.width, a.width, 0], [0, 0, P, P], I, T), wa.translate(qa, e - P + ja), y.push(wa));\n        x += r / 2;\n        \"right\" == aa ? (G += qa + sa + ba, x += ja, U ? (f || (x -= r / 2 + 3), G = G - (B + 4) - na) : (G += B + 4 + v, x -= 2, G += na)) : U ? (G += B + 4 - ba, f || (x -= r / 2 + 3), g && (G += qa, x += ja), G += na) : (G += -B - v - 4 - 2 - ba, x -= 2, G -= na);\n        ca && (\"right\" == aa ? (ka += qa + ba + sa, W += ja, ka = U ? ka - v : ka + v) : (ka -= ba, U || (ka -= B + v)));\n        f && (x += f);\n        U = -3;\n        \"right\" == aa && (U += ja);\n        Y && (x > V + 1 || x < U) && (Y.remove(), Y = null);\n      }\n\n      ca && (ca.translate(ka, W), d.setCN(p, ca, a.bcn + \"tick\"), d.setCN(p, ca, q, !0), g && d.setCN(p, ca, \"guide\"));\n      !1 === a.visible && (ca && ca.remove(), Y && (Y.remove(), Y = null));\n      Y && (Y.attr({\n        \"text-anchor\": ia\n      }), Y.translate(G, x), 0 !== n && Y.rotate(-n, a.chart.backgroundColor), a.allLabels.push(Y), this.label = Y, d.setCN(p, Y, a.bcn + \"label\"), d.setCN(p, Y, q, !0), g && d.setCN(p, Y, \"guide\"));\n      ta && (d.setCN(p, ta, a.bcn + \"grid\"), d.setCN(p, ta, q, !0), g && d.setCN(p, ta, \"guide\"));\n      wa && (d.setCN(p, wa, a.bcn + \"fill\"), d.setCN(p, wa, q, !0));\n      m ? ta && d.setCN(p, ta, a.bcn + \"grid-minor\") : (a.counter = 0 === pa ? 1 : 0, a.previousCoord = b);\n      0 === this.set.node.childNodes.length && this.set.remove();\n    },\n    graphics: function () {\n      return this.set;\n    },\n    getLabel: function () {\n      return this.label;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.RecFill = d.Class({\n    construct: function (a, b, c, e) {\n      var h = a.dx,\n          f = a.dy,\n          g = a.orientation,\n          k = 0;\n\n      if (c < b) {\n        var l = b;\n        b = c;\n        c = l;\n      }\n\n      var m = e.fillAlpha;\n      isNaN(m) && (m = 0);\n      var l = a.chart.container,\n          n = e.fillColor;\n      \"V\" == g ? (b = d.fitToBounds(b, 0, a.viH), c = d.fitToBounds(c, 0, a.viH)) : (b = d.fitToBounds(b, 0, a.viW), c = d.fitToBounds(c, 0, a.viW));\n      c -= b;\n      isNaN(c) && (c = 4, k = 2, m = 0);\n      0 > c && \"object\" == typeof n && (n = n.join(\",\").split(\",\").reverse());\n      \"V\" == g ? (g = d.rect(l, a.viW, c, n, m), g.translate(h, b - k + f)) : (g = d.rect(l, c, a.viH, n, m), g.translate(b - k + h, f));\n      d.setCN(a.chart, g, \"guide-fill\");\n      e.id && d.setCN(a.chart, g, \"guide-fill-\" + e.id);\n      this.set = l.set([g]);\n    },\n    graphics: function () {\n      return this.set;\n    },\n    getLabel: function () {}\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmChart = d.Class({\n    construct: function (a) {\n      this.theme = a;\n      this.classNamePrefix = \"amcharts\";\n      this.addClassNames = !1;\n      this.version = \"3.14.1C\";\n      d.addChart(this);\n      this.createEvents(\"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\", \"resized\");\n      this.height = this.width = \"100%\";\n      this.dataChanged = !0;\n      this.chartCreated = !1;\n      this.previousWidth = this.previousHeight = 0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.borderAlpha = this.backgroundAlpha = 0;\n      this.color = this.borderColor = \"#000000\";\n      this.fontFamily = \"Verdana\";\n      this.fontSize = 11;\n      this.usePrefixes = !1;\n      this.precision = -1;\n      this.percentPrecision = 2;\n      this.decimalSeparator = \".\";\n      this.thousandsSeparator = \",\";\n      this.labels = [];\n      this.allLabels = [];\n      this.titles = [];\n      this.marginRight = this.marginLeft = this.autoMarginOffset = 0;\n      this.timeOuts = [];\n      this.creditsPosition = \"top-left\";\n      var b = document.createElement(\"div\"),\n          c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.chartDiv = b;\n      b = document.createElement(\"div\");\n      c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.legendDiv = b;\n      this.titleHeight = 0;\n      this.hideBalloonTime = 150;\n      this.handDrawScatter = 2;\n      this.handDrawThickness = 1;\n      this.prefixesOfBigNumbers = [{\n        number: 1E3,\n        prefix: \"k\"\n      }, {\n        number: 1E6,\n        prefix: \"M\"\n      }, {\n        number: 1E9,\n        prefix: \"G\"\n      }, {\n        number: 1E12,\n        prefix: \"T\"\n      }, {\n        number: 1E15,\n        prefix: \"P\"\n      }, {\n        number: 1E18,\n        prefix: \"E\"\n      }, {\n        number: 1E21,\n        prefix: \"Z\"\n      }, {\n        number: 1E24,\n        prefix: \"Y\"\n      }];\n      this.prefixesOfSmallNumbers = [{\n        number: 1E-24,\n        prefix: \"y\"\n      }, {\n        number: 1E-21,\n        prefix: \"z\"\n      }, {\n        number: 1E-18,\n        prefix: \"a\"\n      }, {\n        number: 1E-15,\n        prefix: \"f\"\n      }, {\n        number: 1E-12,\n        prefix: \"p\"\n      }, {\n        number: 1E-9,\n        prefix: \"n\"\n      }, {\n        number: 1E-6,\n        prefix: \"\\u03bc\"\n      }, {\n        number: .001,\n        prefix: \"m\"\n      }];\n      this.panEventsEnabled = !0;\n      this.product = \"amcharts\";\n      this.animations = [];\n      this.balloon = new d.AmBalloon(this.theme);\n      this.balloon.chart = this;\n      d.applyTheme(this, a, \"AmChart\");\n    },\n    drawChart: function () {\n      this.drawBackground();\n      this.redrawLabels();\n      this.drawTitles();\n      this.brr();\n    },\n    drawBackground: function () {\n      d.remove(this.background);\n      var a = this.container,\n          b = this.backgroundColor,\n          c = this.backgroundAlpha,\n          e = this.set;\n      d.isModern || 0 !== c || (c = .001);\n      var h = this.updateWidth();\n      this.realWidth = h;\n      var f = this.updateHeight();\n      this.realHeight = f;\n      b = d.polygon(a, [0, h - 1, h - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this, b, \"bg\");\n      this.background = b;\n      e.push(b);\n      if (b = this.backgroundImage) this.path && (b = this.path + b), a = a.image(b, 0, 0, h, f), d.setCN(this, b, \"bg-image\"), this.bgImg = a, e.push(a);\n    },\n    drawTitles: function () {\n      var a = this.titles;\n\n      if (d.ifArray(a)) {\n        var b = 20,\n            c;\n\n        for (c = 0; c < a.length; c++) {\n          var e = a[c],\n              e = d.processObject(e, d.Title, this.theme);\n\n          if (!1 !== e.enabled) {\n            var h = e.color;\n            void 0 === h && (h = this.color);\n            var f = e.size;\n            isNaN(f) && (f = this.fontSize + 2);\n            isNaN(e.alpha);\n            var g = this.marginLeft,\n                h = d.text(this.container, e.text, h, this.fontFamily, f);\n            h.translate(g + (this.realWidth - this.marginRight - g) / 2, b);\n            h.node.style.pointerEvents = \"none\";\n            d.setCN(this, h, \"title\");\n            e.id && d.setCN(this, h, \"title-\" + e.id);\n            g = !0;\n            void 0 !== e.bold && (g = e.bold);\n            g && h.attr({\n              \"font-weight\": \"bold\"\n            });\n            h.attr({\n              opacity: e.alpha\n            });\n            b += f + 6;\n            this.freeLabelsSet.push(h);\n          }\n        }\n      }\n    },\n    write: function (a) {\n      if (a = \"object\" != typeof a ? document.getElementById(a) : a) {\n        for (; a.firstChild;) a.removeChild(a.firstChild);\n\n        this.div = a;\n        a.style.overflow = \"hidden\";\n        a.style.textAlign = \"left\";\n        var b = this.chartDiv,\n            c = this.legendDiv,\n            e = this.legend,\n            h = c.style,\n            f = b.style;\n        this.measure();\n        this.previousHeight = this.divRealHeight;\n        this.previousWidth = this.divRealWidth;\n        var g,\n            k = document.createElement(\"div\");\n        g = k.style;\n        g.position = \"relative\";\n        this.containerDiv = k;\n        k.className = this.classNamePrefix + \"-main-div\";\n        b.className = this.classNamePrefix + \"-chart-div\";\n        a.appendChild(k);\n        var l = this.exportConfig;\n        l && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this, l));\n        this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));\n        this.AmExport && this.AmExport.init && this.AmExport.init();\n        if (e) {\n          if (e = this.addLegend(e, e.divId), e.enabled) switch (e.position) {\n            case \"bottom\":\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"top\":\n              k.appendChild(c);\n              k.appendChild(b);\n              break;\n\n            case \"absolute\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              h.position = \"absolute\";\n              f.position = \"absolute\";\n              void 0 !== e.left && (h.left = e.left + \"px\");\n              void 0 !== e.right && (h.right = e.right + \"px\");\n              void 0 !== e.top && (h.top = e.top + \"px\");\n              void 0 !== e.bottom && (h.bottom = e.bottom + \"px\");\n              e.marginLeft = 0;\n              e.marginRight = 0;\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"right\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              h.position = \"relative\";\n              f.position = \"absolute\";\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"left\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              h.position = \"absolute\";\n              f.position = \"relative\";\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"outside\":\n              k.appendChild(b);\n          } else k.appendChild(b);\n        } else k.appendChild(b);\n        this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\n        this.initChart();\n      }\n    },\n    createLabelsSet: function () {\n      d.remove(this.labelsSet);\n      this.labelsSet = this.container.set();\n      this.freeLabelsSet.push(this.labelsSet);\n    },\n    initChart: function () {\n      this.initHC || (d.callInitHandler(this), this.initHC = !0);\n      this.renderFix();\n      d.applyLang(this.language, this);\n      var a = this.numberFormatter;\n      a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));\n      (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);\n      this.nf = {\n        precision: this.precision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.pf = {\n        precision: this.percentPrecision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.divIsFixed = d.findIfFixed(this.chartDiv);\n      this.destroy();\n      a = 0;\n      document.attachEvent && !window.opera && (a = 1);\n      this.dmouseX = this.dmouseY = 0;\n      var b = document.getElementsByTagName(\"html\")[0];\n      b && window.getComputedStyle && (b = window.getComputedStyle(b, null)) && (this.dmouseY = d.removePx(b.getPropertyValue(\"margin-top\")), this.dmouseX = d.removePx(b.getPropertyValue(\"margin-left\")));\n      this.mouseMode = a;\n      (a = this.container) ? (a.container.innerHTML = \"\", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);\n      a.chart = this;\n      d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, this.container = a, this.set && this.set.remove(), this.set = a.set(), this.gridSet && this.gridSet.remove(), this.gridSet = a.set(), this.cursorLineSet && this.cursorLineSet.remove(), this.cursorLineSet = a.set(), this.graphsBehindSet && this.graphsBehindSet.remove(), this.graphsBehindSet = a.set(), this.bulletBehindSet && this.bulletBehindSet.remove(), this.bulletBehindSet = a.set(), this.columnSet && this.columnSet.remove(), this.columnSet = a.set(), this.graphsSet && this.graphsSet.remove(), this.graphsSet = a.set(), this.trendLinesSet && this.trendLinesSet.remove(), this.trendLinesSet = a.set(), this.axesSet && this.axesSet.remove(), this.axesSet = a.set(), this.cursorSet && this.cursorSet.remove(), this.cursorSet = a.set(), this.scrollbarsSet && this.scrollbarsSet.remove(), this.scrollbarsSet = a.set(), this.bulletSet && this.bulletSet.remove(), this.bulletSet = a.set(), this.freeLabelsSet && this.freeLabelsSet.remove(), this.axesLabelsSet && this.axesLabelsSet.remove(), this.axesLabelsSet = a.set(), this.freeLabelsSet = a.set(), this.balloonsSet && this.balloonsSet.remove(), this.balloonsSet = a.set(), this.zoomButtonSet && this.zoomButtonSet.remove(), this.zoomButtonSet = a.set(), this.linkSet && this.linkSet.remove(), this.linkSet = a.set()) : this.fire(\"failed\", {\n        type: \"failed\",\n        chart: this\n      });\n    },\n    premeasure: function () {\n      var a = this.div;\n\n      if (a) {\n        var b = a.offsetWidth,\n            c = a.offsetHeight;\n        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\n        if (b != this.mw || c != this.mh) this.mw = b, this.mh = c, this.measure();\n      }\n    },\n    measure: function () {\n      var a = this.div;\n\n      if (a) {\n        var b = this.chartDiv,\n            c = a.offsetWidth,\n            e = a.offsetHeight,\n            h = this.container;\n        a.clientHeight && (c = a.clientWidth, e = a.clientHeight);\n        var f = d.removePx(d.getStyle(a, \"padding-left\")),\n            g = d.removePx(d.getStyle(a, \"padding-right\")),\n            k = d.removePx(d.getStyle(a, \"padding-top\")),\n            l = d.removePx(d.getStyle(a, \"padding-bottom\"));\n        isNaN(f) || (c -= f);\n        isNaN(g) || (c -= g);\n        isNaN(k) || (e -= k);\n        isNaN(l) || (e -= l);\n        f = a.style;\n        a = f.width;\n        f = f.height;\n        -1 != a.indexOf(\"px\") && (c = d.removePx(a));\n        -1 != f.indexOf(\"px\") && (e = d.removePx(f));\n        e = Math.round(e);\n        c = Math.round(c);\n        a = Math.round(d.toCoordinate(this.width, c));\n        f = Math.round(d.toCoordinate(this.height, e));\n        (c != this.previousWidth || e != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + \"px\", b.style.height = f + \"px\", h && h.setSize(a, f), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme), this.balloon.setBounds(2, 2, a - 2, f));\n        this.balloon.chart = this;\n        this.realWidth = a;\n        this.realHeight = f;\n        this.divRealWidth = c;\n        this.divRealHeight = e;\n      }\n    },\n    destroy: function () {\n      this.chartDiv.innerHTML = \"\";\n      this.clearTimeOuts();\n      this.legend && this.legend.destroy();\n    },\n    clearTimeOuts: function () {\n      var a = this.timeOuts;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) clearTimeout(a[b]);\n      }\n\n      this.timeOuts = [];\n    },\n    clear: function (a) {\n      d.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);\n      this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;\n      this.clearTimeOuts();\n      this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));\n      a || d.removeChart(this);\n      if (a = this.div) for (; a.firstChild;) a.removeChild(a.firstChild);\n      this.legend && this.legend.destroy();\n    },\n    setMouseCursor: function (a) {\n      \"auto\" == a && d.isNN && (a = \"default\");\n      this.chartDiv.style.cursor = a;\n      this.legendDiv.style.cursor = a;\n    },\n    redrawLabels: function () {\n      this.labels = [];\n      var a = this.allLabels;\n      this.createLabelsSet();\n      var b;\n\n      for (b = 0; b < a.length; b++) this.drawLabel(a[b]);\n    },\n    drawLabel: function (a) {\n      if (this.container && !1 !== a.enabled) {\n        a = d.processObject(a, d.Label, this.theme);\n        var b = a.y,\n            c = a.text,\n            e = a.align,\n            h = a.size,\n            f = a.color,\n            g = a.rotation,\n            k = a.alpha,\n            l = a.bold,\n            m = d.toCoordinate(a.x, this.realWidth),\n            b = d.toCoordinate(b, this.realHeight);\n        m || (m = 0);\n        b || (b = 0);\n        void 0 === f && (f = this.color);\n        isNaN(h) && (h = this.fontSize);\n        e || (e = \"start\");\n        \"left\" == e && (e = \"start\");\n        \"right\" == e && (e = \"end\");\n        \"center\" == e && (e = \"middle\", g ? b = this.realHeight - b + b / 2 : m = this.realWidth / 2 - m);\n        void 0 === k && (k = 1);\n        void 0 === g && (g = 0);\n        b += h / 2;\n        c = d.text(this.container, c, f, this.fontFamily, h, e, l, k);\n        c.translate(m, b);\n        d.setCN(this, c, \"label\");\n        a.id && d.setCN(this, c, \"label-\" + a.id);\n        0 !== g && c.rotate(g);\n        a.url ? (c.setAttr(\"cursor\", \"pointer\"), c.click(function () {\n          d.getURL(a.url);\n        })) : c.node.style.pointerEvents = \"none\";\n        this.labelsSet.push(c);\n        this.labels.push(c);\n      }\n    },\n    addLabel: function (a, b, c, e, d, f, g, k, l, m) {\n      a = {\n        x: a,\n        y: b,\n        text: c,\n        align: e,\n        size: d,\n        color: f,\n        alpha: k,\n        rotation: g,\n        bold: l,\n        url: m,\n        enabled: !0\n      };\n      this.container && this.drawLabel(a);\n      this.allLabels.push(a);\n    },\n    clearLabels: function () {\n      var a = this.labels,\n          b;\n\n      for (b = a.length - 1; 0 <= b; b--) a[b].remove();\n\n      this.labels = [];\n      this.allLabels = [];\n    },\n    updateHeight: function () {\n      var a = this.divRealHeight,\n          b = this.legend;\n\n      if (b) {\n        var c = this.legendDiv.offsetHeight,\n            b = b.position;\n\n        if (\"top\" == b || \"bottom\" == b) {\n          a -= c;\n          if (0 > a || isNaN(a)) a = 0;\n          this.chartDiv.style.height = a + \"px\";\n        }\n      }\n\n      return a;\n    },\n    updateWidth: function () {\n      var a = this.divRealWidth,\n          b = this.divRealHeight,\n          c = this.legend;\n\n      if (c) {\n        var e = this.legendDiv,\n            d = e.offsetWidth;\n        isNaN(c.width) || (d = c.width);\n        c.ieW && (d = c.ieW);\n        var f = e.offsetHeight,\n            e = e.style,\n            g = this.chartDiv.style,\n            c = c.position;\n\n        if (\"right\" == c || \"left\" == c) {\n          a -= d;\n          if (0 > a || isNaN(a)) a = 0;\n          g.width = a + \"px\";\n          \"left\" == c ? (g.left = d + \"px\", e.left = \"0px\") : (g.left = \"0px\", e.left = a + \"px\");\n          b > f && (e.top = (b - f) / 2 + \"px\");\n        }\n      }\n\n      return a;\n    },\n    getTitleHeight: function () {\n      var a = 0,\n          b = this.titles,\n          c = !0;\n\n      if (0 < b.length) {\n        var a = 20,\n            e;\n\n        for (e = 0; e < b.length; e++) {\n          var d = b[e];\n          !1 !== d.enabled && (c = !1, d = d.size, isNaN(d) && (d = this.fontSize + 2), a += d + 6);\n        }\n\n        c && (a = 0);\n      }\n\n      return a;\n    },\n    addTitle: function (a, b, c, e, d) {\n      isNaN(b) && (b = this.fontSize + 2);\n      a = {\n        text: a,\n        size: b,\n        color: c,\n        alpha: e,\n        bold: d,\n        enabled: !0\n      };\n      this.titles.push(a);\n      return a;\n    },\n    handleWheel: function (a) {\n      var b = 0;\n      a || (a = window.event);\n      a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);\n      b && this.handleWheelReal(b, a.shiftKey);\n      a.preventDefault && a.preventDefault();\n    },\n    handleWheelReal: function () {},\n    addListeners: function () {\n      var a = this,\n          b = a.chartDiv;\n      document.addEventListener ? (a.panEventsEnabled && (b.style.msTouchAction = \"none\"), \"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function (b) {\n        a.handleTouchMove.call(a, b);\n        a.handleTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"touchmove\", function (b) {\n        a.handleTouchMove.call(a, b);\n      }, !0), b.addEventListener(\"touchend\", function (b) {\n        a.handleTouchEnd.call(a, b);\n      }, !0)), b.addEventListener(\"mousedown\", function (b) {\n        a.mouseIsOver = !0;\n        a.handleMouseMove.call(a, b);\n        a.handleMouseDown.call(a, b);\n      }, !0), b.addEventListener(\"mouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }, !0), b.addEventListener(\"mouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }, !0)) : (b.attachEvent(\"onmousedown\", function (b) {\n        a.handleMouseDown.call(a, b);\n      }), b.attachEvent(\"onmouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }), b.attachEvent(\"onmouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }));\n    },\n    dispDUpd: function () {\n      if (!this.skipEvents) {\n        var a;\n        this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, a = \"dataUpdated\", this.fire(a, {\n          type: a,\n          chart: this\n        }));\n        this.chartCreated || (a = \"init\", this.fire(a, {\n          type: a,\n          chart: this\n        }));\n        this.chartRendered || (a = \"rendered\", this.fire(a, {\n          type: a,\n          chart: this\n        }), this.chartRendered = !0);\n        a = \"drawn\";\n        this.fire(a, {\n          type: a,\n          chart: this\n        });\n      }\n\n      this.skipEvents = !1;\n    },\n    validateSize: function () {\n      var a = this;\n      a.premeasure();\n\n      if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {\n        var b = a.legend;\n\n        if (0 < a.realWidth && 0 < a.realHeight) {\n          a.sizeChanged = !0;\n\n          if (b) {\n            clearTimeout(a.legendInitTO);\n            var c = setTimeout(function () {\n              b.invalidateSize();\n            }, 100);\n            a.timeOuts.push(c);\n            a.legendInitTO = c;\n          }\n\n          \"xy\" != a.type ? a.marginsUpdated = !1 : (a.marginsUpdated = !0, a.selfZoom = !0);\n          clearTimeout(a.initTO);\n          c = setTimeout(function () {\n            a.initChart();\n          }, 10);\n          a.timeOuts.push(c);\n          a.initTO = c;\n        }\n\n        a.fire(\"resized\", {\n          type: \"resized\",\n          chart: a\n        });\n        a.renderFix();\n        b && b.renderFix && b.renderFix();\n        a.previousHeight = a.divRealHeight;\n        a.previousWidth = a.divRealWidth;\n      }\n    },\n    invalidateSize: function () {\n      this.previousHeight = this.previousWidth = NaN;\n      this.invalidateSizeReal();\n    },\n    invalidateSizeReal: function () {\n      var a = this;\n      a.marginsUpdated = !1;\n      clearTimeout(a.validateTO);\n      var b = setTimeout(function () {\n        a.validateSize();\n      }, 5);\n      a.timeOuts.push(b);\n      a.validateTO = b;\n    },\n    validateData: function (a) {\n      this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = \"xy\" != this.type ? !1 : !0, this.initChart(a));\n    },\n    validateNow: function (a, b) {\n      this.initTO && clearTimeout(this.initTO);\n      a && (this.dataChanged = !0);\n      this.skipEvents = b;\n      this.chartRendered = !1;\n      this.write(this.div);\n    },\n    showItem: function (a) {\n      a.hidden = !1;\n      this.initChart();\n    },\n    hideItem: function (a) {\n      a.hidden = !0;\n      this.initChart();\n    },\n    hideBalloon: function () {\n      var a = this;\n      clearTimeout(a.hoverInt);\n      clearTimeout(a.balloonTO);\n      a.hoverInt = setTimeout(function () {\n        a.hideBalloonReal.call(a);\n      }, a.hideBalloonTime);\n    },\n    cleanChart: function () {},\n    hideBalloonReal: function () {\n      var a = this.balloon;\n      a && a.hide();\n    },\n    showBalloon: function (a, b, c, e, d) {\n      var f = this;\n      clearTimeout(f.balloonTO);\n      clearTimeout(f.hoverInt);\n      f.balloonTO = setTimeout(function () {\n        f.showBalloonReal.call(f, a, b, c, e, d);\n      }, 1);\n    },\n    showBalloonReal: function (a, b, c, e, d) {\n      this.handleMouseMove();\n      var f = this.balloon;\n      f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(e, d), f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a));\n    },\n    handleTouchMove: function (a) {\n      this.hideBalloon();\n      var b = this.chartDiv;\n      a.touches && (a = a.touches.item(0), this.mouseX = a.pageX - d.findPosX(b), this.mouseY = a.pageY - d.findPosY(b));\n    },\n    handleMouseOver: function () {\n      this.outTO && clearTimeout(this.outTO);\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n    },\n    handleMouseOut: function () {\n      var a = this;\n      a.outTO && clearTimeout(a.outTO);\n      a.outTO = setTimeout(function () {\n        a.handleMouseOutReal();\n      }, 10);\n    },\n    handleMouseOutReal: function () {\n      d.resetMouseOver();\n      this.mouseIsOver = !1;\n    },\n    handleMouseMove: function (a) {\n      if (this.mouseIsOver) {\n        var b = this.chartDiv;\n        a || (a = window.event);\n        var c, e;\n\n        if (a) {\n          this.posX = d.findPosX(b);\n          this.posY = d.findPosY(b);\n\n          switch (this.mouseMode) {\n            case 1:\n              c = a.clientX - this.posX;\n              e = a.clientY - this.posY;\n\n              if (!this.divIsFixed) {\n                var b = document.body,\n                    h,\n                    f,\n                    g,\n                    k;\n                b && (h = b.scrollLeft, g = b.scrollTop);\n                if (b = document.documentElement) f = b.scrollLeft, k = b.scrollTop;\n                h = Math.max(h, f);\n                g = Math.max(g, k);\n                c += h;\n                e += g;\n              }\n\n              break;\n\n            case 0:\n              this.divIsFixed ? (c = a.clientX - this.posX, e = a.clientY - this.posY) : (c = a.pageX - this.posX, e = a.pageY - this.posY);\n          }\n\n          a.touches && (a = a.touches.item(0), c = a.pageX - this.posX, e = a.pageY - this.posY);\n          this.mouseX = c - this.dmouseX;\n          this.mouseY = e - this.dmouseY;\n        }\n      }\n    },\n    handleTouchStart: function (a) {\n      this.handleMouseDown(a);\n    },\n    handleTouchEnd: function (a) {\n      d.resetMouseOver();\n      this.handleReleaseOutside(a);\n    },\n    handleReleaseOutside: function () {},\n    handleMouseDown: function (a) {\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n      a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault());\n    },\n    addLegend: function (a, b) {\n      a = d.processObject(a, d.AmLegend, this.theme);\n      a.divId = b;\n      var c;\n      c = \"object\" != typeof b && b ? document.getElementById(b) : b;\n      this.legend = a;\n      a.chart = this;\n      c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;\n      c = this.handleLegendEvent;\n      this.listenTo(a, \"showItem\", c);\n      this.listenTo(a, \"hideItem\", c);\n      this.listenTo(a, \"clickMarker\", c);\n      this.listenTo(a, \"rollOverItem\", c);\n      this.listenTo(a, \"rollOutItem\", c);\n      this.listenTo(a, \"rollOverMarker\", c);\n      this.listenTo(a, \"rollOutMarker\", c);\n      this.listenTo(a, \"clickLabel\", c);\n      return a;\n    },\n    removeLegend: function () {\n      this.legend = void 0;\n      this.legendDiv.innerHTML = \"\";\n    },\n    handleResize: function () {\n      (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal();\n      this.renderFix();\n    },\n    renderFix: function () {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    getSVG: function () {\n      if (d.hasSVG) return this.container;\n    },\n    animate: function (a, b, c, e, h, f, g) {\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: c,\n        to: e,\n        time: h,\n        effect: f,\n        suffix: g\n      };\n      a[\"an_\" + b] = c;\n      this.animations.push(c);\n      return c;\n    },\n    setLegendData: function (a) {\n      var b = this.legend;\n      b && b.setData(a);\n    },\n    stopAnim: function (a) {\n      d.removeFromArray(this.animations, a);\n    },\n    updateAnimations: function () {\n      var a;\n      this.container && this.container.update();\n      if (this.animations) for (a = this.animations.length - 1; 0 <= a; a--) {\n        var b = this.animations[a],\n            c = 1E3 * b.time / d.updateRate,\n            e = b.frame + 1,\n            h = b.obj,\n            f = b.attribute;\n\n        if (e <= c) {\n          b.frame++;\n          var g = Number(b.from),\n              k = Number(b.to) - g,\n              c = d[b.effect](0, e, g, k, c);\n          0 === k ? (this.animations.splice(a, 1), h.node.style[f] = Number(b.to) + b.suffix) : h.node.style[f] = c + b.suffix;\n        } else h.node.style[f] = Number(b.to) + b.suffix, this.animations.splice(a, 1);\n      }\n    },\n    update: function () {\n      this.updateAnimations();\n    },\n    inIframe: function () {\n      try {\n        return window.self !== window.top;\n      } catch (a) {\n        return !0;\n      }\n    },\n    brr: function () {\n      var a = window.location.hostname.split(\".\"),\n          b;\n      2 <= a.length && (b = a[a.length - 2] + \".\" + a[a.length - 1]);\n      this.amLink && (a = this.amLink.parentNode) && a.removeChild(this.amLink);\n      a = this.creditsPosition;\n\n      if (\"amcharts.com\" != b || !0 === this.inIframe()) {\n        var c = b = 0,\n            e = this.realWidth,\n            d = this.realHeight,\n            f = this.type;\n        if (\"serial\" == f || \"xy\" == f || \"gantt\" == f) b = this.marginLeftReal, c = this.marginTopReal, e = b + this.plotAreaWidth, d = c + this.plotAreaHeight;\n        var g = \"http://www.amcharts.com/javascript-charts/\",\n            k = \"JavaScript charts\",\n            l = \"JS chart by amCharts\";\n        \"ammap\" == this.product && (g = \"http://www.ammap.com/javascript-maps/\", k = \"Interactive JavaScript maps\", l = \"JS map by amCharts\");\n        f = document.createElement(\"a\");\n        l = document.createTextNode(l);\n        f.setAttribute(\"href\", g);\n        f.setAttribute(\"title\", k);\n        f.appendChild(l);\n        this.chartDiv.appendChild(f);\n        this.amLink = f;\n        g = f.style;\n        g.position = \"absolute\";\n        g.textDecoration = \"none\";\n        g.color = this.color;\n        g.fontFamily = this.fontFamily;\n        g.fontSize = this.fontSize + \"px\";\n        g.opacity = .7;\n        g.display = \"block\";\n        var k = f.offsetWidth,\n            f = f.offsetHeight,\n            l = 5 + b,\n            m = c + 5;\n        \"bottom-left\" == a && (l = 5 + b, m = d - f - 3);\n        \"bottom-right\" == a && (l = e - k - 5, m = d - f - 3);\n        \"top-right\" == a && (l = e - k - 5, m = c + 5);\n        g.left = l + \"px\";\n        g.top = m + \"px\";\n      }\n    }\n  });\n  d.Slice = d.Class({\n    construct: function () {}\n  });\n  d.SerialDataItem = d.Class({\n    construct: function () {}\n  });\n  d.GraphDataItem = d.Class({\n    construct: function () {}\n  });\n  d.Guide = d.Class({\n    construct: function (a) {\n      this.cname = \"Guide\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Title = d.Class({\n    construct: function (a) {\n      this.cname = \"Title\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Label = d.Class({\n    construct: function (a) {\n      this.cname = \"Label\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmGraph = d.Class({\n    construct: function (a) {\n      this.cname = \"AmGraph\";\n      this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");\n      this.type = \"line\";\n      this.stackable = !0;\n      this.columnCount = 1;\n      this.columnIndex = 0;\n      this.centerCustomBullets = this.showBalloon = !0;\n      this.maxBulletSize = 50;\n      this.minBulletSize = 4;\n      this.balloonText = \"[[value]]\";\n      this.hidden = this.scrollbar = this.animationPlayed = !1;\n      this.pointPosition = \"middle\";\n      this.depthCount = 1;\n      this.includeInMinMax = !0;\n      this.negativeBase = 0;\n      this.visibleInLegend = !0;\n      this.showAllValueLabels = !1;\n      this.showBulletsAt = this.showBalloonAt = \"close\";\n      this.lineThickness = 1;\n      this.dashLength = 0;\n      this.connect = !0;\n      this.lineAlpha = 1;\n      this.bullet = \"none\";\n      this.bulletBorderThickness = 2;\n      this.bulletBorderAlpha = 0;\n      this.bulletAlpha = 1;\n      this.bulletSize = 8;\n      this.cornerRadiusTop = this.hideBulletsCount = this.bulletOffset = 0;\n      this.cursorBulletAlpha = 1;\n      this.gradientOrientation = \"vertical\";\n      this.dy = this.dx = 0;\n      this.periodValue = \"\";\n      this.clustered = !0;\n      this.periodSpan = 1;\n      this.y = this.x = 0;\n      this.switchable = !0;\n      this.tcc = this.minDistance = 1;\n      this.labelRotation = 0;\n      this.labelAnchor = \"auto\";\n      this.labelOffset = 3;\n      this.bcn = \"graph-\";\n      this.dateFormat = \"MMM DD, YYYY\";\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      var a = this.chart,\n          b = a.type;\n      isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = {\n        precision: this.precision,\n        decimalSeparator: a.decimalSeparator,\n        thousandsSeparator: a.thousandsSeparator\n      });\n      var c = a.container;\n      this.container = c;\n      this.destroy();\n      var e = c.set(),\n          h = c.set();\n      this.behindColumns ? (a.graphsBehindSet.push(e), a.bulletBehindSet.push(h)) : (a.graphsSet.push(e), a.bulletSet.push(h));\n      var f = this.bulletAxis;\n      d.isString(f) && (this.bulletAxis = a.getValueAxisById(f));\n      this.bulletSet = h;\n\n      if (!this.scrollbar) {\n        var f = a.marginLeftReal,\n            g = a.marginTopReal;\n        e.translate(f, g);\n        h.translate(f, g);\n      }\n\n      c = c.set();\n      d.remove(this.columnsSet);\n      e.push(c);\n      this.set = e;\n      d.setCN(a, e, \"graph-\" + this.type);\n      d.setCN(a, e, \"graph-\" + this.id);\n      d.setCN(a, h, \"graph-\" + this.type);\n      d.setCN(a, h, \"graph-\" + this.id);\n      this.columnsSet = c;\n      this.columnsArray = [];\n      this.ownColumns = [];\n      this.allBullets = [];\n      this.animationArray = [];\n      e = this.labelPosition;\n      e || (h = this.valueAxis.stackType, e = \"top\", \"column\" == this.type && (a.rotate && (e = \"right\"), \"100%\" == h || \"regular\" == h) && (e = \"middle\"), this.labelPosition = e);\n      d.ifArray(this.data) && (a = !1, \"xy\" == b ? this.xAxis.axisCreated && this.yAxis.axisCreated && (a = !0) : this.valueAxis.axisCreated && (a = !0), !this.hidden && a && this.createGraph());\n    },\n    createGraph: function () {\n      var a = this,\n          b = a.chart;\n      a.startAlpha = b.startAlpha;\n      a.seqAn = b.sequencedAnimation;\n      a.baseCoord = a.valueAxis.baseCoord;\n      void 0 === a.fillAlphas && (a.fillAlphas = 0);\n      a.bulletColorR = a.bulletColor;\n      void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, a.bulletColorNegative = a.negativeLineColor);\n      void 0 === a.bulletAlpha && (a.bulletAlpha = a.lineAlpha);\n      b = b.type;\n      \"gantt\" == b && (b = \"serial\");\n      clearTimeout(a.playedTO);\n\n      if (!isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {\n        switch (b) {\n          case \"serial\":\n            a.categoryAxis && (a.createSerialGraph(), \"candlestick\" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));\n            break;\n\n          case \"radar\":\n            a.createRadarGraph();\n            break;\n\n          case \"xy\":\n            a.createXYGraph(), a.positiveClip(a.set);\n        }\n\n        a.playedTO = setTimeout(function () {\n          a.setAnimationPlayed.call(a);\n        }, 500 * a.chart.startDuration);\n      }\n    },\n    setAnimationPlayed: function () {\n      this.animationPlayed = !0;\n    },\n    createXYGraph: function () {\n      var a = [],\n          b = [],\n          c = this.xAxis,\n          e = this.yAxis;\n      this.pmh = e.viH + 1;\n      this.pmw = c.viW + 1;\n      this.pmy = this.pmx = 0;\n      var d;\n\n      for (d = this.start; d <= this.end; d++) {\n        var f = this.data[d].axes[c.id].graphs[this.id],\n            g = f.values,\n            k = g.x,\n            l = g.y,\n            g = c.getCoordinate(k),\n            m = e.getCoordinate(l);\n        !isNaN(k) && !isNaN(l) && (a.push(g), b.push(m), f.x = g, f.y = m, k = this.createBullet(f, g, m, d), l = this.labelText) && (f = this.createLabel(f, g, m, l), this.positionLabel(g, m, f, k), this.allBullets.push(f));\n      }\n\n      this.drawLineGraph(a, b);\n      this.launchAnimation();\n    },\n    createRadarGraph: function () {\n      var a = this.valueAxis.stackType,\n          b = [],\n          c = [],\n          e,\n          d,\n          f;\n\n      for (f = this.start; f <= this.end; f++) {\n        var g = this.data[f].axes[this.valueAxis.id].graphs[this.id],\n            k;\n        k = \"none\" == a || \"3d\" == a ? g.values.value : g.values.close;\n        if (isNaN(k)) this.drawLineGraph(b, c), b = [], c = [];else {\n          var l = this.y - (this.valueAxis.getCoordinate(k) - this.height),\n              m = 180 - 360 / (this.end - this.start + 1) * f;\n          k = l * Math.sin(m / 180 * Math.PI);\n          l *= Math.cos(m / 180 * Math.PI);\n          b.push(k);\n          c.push(l);\n          var m = this.createBullet(g, k, l, f),\n              n = this.labelText;\n          n && (g = this.createLabel(g, k, l, n), this.positionLabel(k, l, g, m), this.allBullets.push(g));\n          isNaN(e) && (e = k);\n          isNaN(d) && (d = l);\n        }\n      }\n\n      b.push(e);\n      c.push(d);\n      this.drawLineGraph(b, c);\n      this.launchAnimation();\n    },\n    positionLabel: function (a, b, c, e) {\n      var d = \"middle\",\n          f = !1,\n          g = this.labelPosition,\n          k = c.getBBox();\n\n      if (e) {\n        var l = e.graphDataItem,\n            m = this.chart.rotate,\n            n = l.isNegative,\n            q = this.chart;\n        b -= k.height / 4 / 2;\n\n        switch (g) {\n          case \"top\":\n            g = m ? \"top\" : n ? \"bottom\" : \"top\";\n            break;\n\n          case \"right\":\n            g = m ? n ? \"left\" : \"right\" : \"right\";\n            break;\n\n          case \"bottom\":\n            g = m ? \"bottom\" : n ? \"top\" : \"bottom\";\n            break;\n\n          case \"left\":\n            g = m ? n ? \"right\" : \"left\" : \"left\";\n        }\n\n        var p = l.columnGraphics,\n            t = 0,\n            r = 0;\n        p && (t = p.x, r = p.y);\n        var u = this.labelOffset;\n\n        switch (g) {\n          case \"top\":\n            b -= e.size / 2 + k.height / 2 + u;\n            break;\n\n          case \"right\":\n            d = \"start\";\n            a += e.size / 2 + u;\n            break;\n\n          case \"bottom\":\n            b += e.size / 2 + k.height / 2 + u;\n            break;\n\n          case \"left\":\n            d = \"end\";\n            a -= e.size / 2 + u;\n            break;\n\n          case \"inside\":\n            \"column\" == this.type && (f = !0, m ? n ? (d = \"end\", a = t - 3 - u) : (d = \"start\", a = t + 3 + u) : b = n ? r + 7 + u : r - 10 - u);\n            break;\n\n          case \"middle\":\n            \"column\" == this.type && (f = !0, m ? a -= (a - t) / 2 + u - 3 : b -= (b - r) / 2 + u - 3);\n        }\n\n        \"auto\" != this.labelAnchor && (d = this.labelAnchor);\n        c.attr({\n          \"text-anchor\": d\n        });\n        this.labelRotation && c.rotate(this.labelRotation);\n        c.translate(a, b);\n        k = c.getBBox();\n        !this.showAllValueLabels && p && f && (k.height > l.columnHeight || k.width > l.columnWidth) && (c.remove(), c = !1);\n        if (c && (\"serial\" == q.type || \"gantt\" == q.type)) if (m) {\n          if (0 > b || b > this.height) c.remove(), c = !1;\n        } else if (0 > a || a > this.width) c.remove(), c = !1;\n        return c;\n      }\n    },\n    getGradRotation: function () {\n      var a = 270;\n      \"horizontal\" == this.gradientOrientation && (a = 0);\n      return this.gradientRotation = a;\n    },\n    createSerialGraph: function () {\n      this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;\n      var a = this.chart,\n          b = this.id,\n          c = this.index,\n          e = this.data,\n          h = this.chart.container,\n          f = this.valueAxis,\n          g = this.type,\n          k = this.columnWidthReal,\n          l = this.showBulletsAt;\n      isNaN(this.columnWidth) || (k = this.columnWidth);\n      isNaN(k) && (k = .8);\n      var m = this.useNegativeColorIfDown,\n          n = this.width,\n          q = this.height,\n          p = this.y,\n          t = this.rotate,\n          r = this.columnCount,\n          u = d.toCoordinate(this.cornerRadiusTop, k / 2),\n          z = this.connect,\n          y = [],\n          v = [],\n          w,\n          A,\n          B,\n          D,\n          C = this.chart.graphs.length,\n          J,\n          H = this.dx / this.tcc,\n          I = this.dy / this.tcc,\n          T = f.stackType,\n          da = this.start,\n          pa = this.end,\n          U = this.scrollbar,\n          na = \"graph-column-\";\n      U && (na = \"scrollbar-graph-column-\");\n      var qa = this.categoryAxis,\n          ja = this.baseCoord,\n          Pa = this.negativeBase,\n          aa = this.columnIndex,\n          Z = this.lineThickness,\n          V = this.lineAlpha,\n          sa = this.lineColorR,\n          ba = this.dashLength,\n          ca = this.set,\n          ta,\n          ia = this.getGradRotation(),\n          P = this.chart.columnSpacing,\n          W = qa.cellWidth,\n          wa = (W * k - r) / r;\n      P > wa && (P = wa);\n      var G,\n          x,\n          ka,\n          ea = q + 1,\n          Qa = n + 1,\n          Y = 0,\n          qb = 0,\n          rb,\n          sb,\n          eb,\n          fb,\n          tb = this.fillColorsR,\n          Ja = this.negativeFillColors,\n          Ca = this.negativeLineColor,\n          Wa = this.fillAlphas,\n          Xa = this.negativeFillAlphas;\n      \"object\" == typeof Wa && (Wa = Wa[0]);\n      \"object\" == typeof Xa && (Xa = Xa[0]);\n      var gb = f.getCoordinate(f.min);\n      f.logarithmic && (gb = f.getCoordinate(f.minReal));\n      this.minCoord = gb;\n      this.resetBullet && (this.bullet = \"none\");\n\n      if (!(U || \"line\" != g && \"smoothedLine\" != g && \"step\" != g || (1 == e.length && \"step\" != g && \"none\" == this.bullet && (this.bullet = \"round\", this.resetBullet = !0), !Ja && void 0 == Ca || m))) {\n        var Ra = Pa;\n        Ra > f.max && (Ra = f.max);\n        Ra < f.min && (Ra = f.min);\n        f.logarithmic && (Ra = f.minReal);\n        var Ga = f.getCoordinate(Ra),\n            Ib = f.getCoordinate(f.max);\n        t ? (ea = q, Qa = Math.abs(Ib - Ga) + 1, rb = q, sb = Math.abs(gb - Ga) + 1, fb = qb = 0, f.reversed ? (Y = 0, eb = Ga) : (Y = Ga, eb = 0)) : (Qa = n, ea = Math.abs(Ib - Ga) + 1, sb = n, rb = Math.abs(gb - Ga) + 1, eb = Y = 0, f.reversed ? (fb = p, qb = Ga) : fb = Ga + 1);\n      }\n\n      var Ha = Math.round;\n      this.pmx = Ha(Y);\n      this.pmy = Ha(qb);\n      this.pmh = Ha(ea);\n      this.pmw = Ha(Qa);\n      this.nmx = Ha(eb);\n      this.nmy = Ha(fb);\n      this.nmh = Ha(rb);\n      this.nmw = Ha(sb);\n      d.isModern || (this.nmy = this.nmx = 0, this.nmh = this.height);\n      this.clustered || (r = 1);\n      k = \"column\" == g ? (W * k - P * (r - 1)) / r : W * k;\n      1 > k && (k = 1);\n      var Jb = this.fixedColumnWidth;\n      isNaN(Jb) || (k = Jb);\n      var K;\n\n      if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) {\n        if (0 < da) {\n          for (K = da - 1; -1 < K; K--) if (G = e[K], x = G.axes[f.id].graphs[b], ka = x.values.value, !isNaN(ka)) {\n            da = K;\n            break;\n          }\n\n          if (this.lineColorField) for (K = da; -1 < K; K--) if (G = e[K], x = G.axes[f.id].graphs[b], x.lineColor) {\n            this.bulletColorSwitched = this.lineColorSwitched = x.lineColor;\n            break;\n          }\n          if (this.fillColorsField) for (K = da; -1 < K; K--) if (G = e[K], x = G.axes[f.id].graphs[b], x.fillColors) {\n            this.fillColorsSwitched = x.fillColors;\n            break;\n          }\n          if (this.dashLengthField) for (K = da; -1 < K; K--) if (G = e[K], x = G.axes[f.id].graphs[b], !isNaN(x.dashLength)) {\n            this.dashLengthSwitched = x.dashLength;\n            break;\n          }\n        }\n\n        if (pa < e.length - 1) for (K = pa + 1; K < e.length; K++) if (G = e[K], x = G.axes[f.id].graphs[b], ka = x.values.value, !isNaN(ka)) {\n          pa = K;\n          break;\n        }\n      }\n\n      pa < e.length - 1 && pa++;\n      var Q = [],\n          R = [],\n          Ka = !1;\n      if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) if (this.stackable && \"regular\" == T || \"100%\" == T || this.fillToGraph) Ka = !0;\n      var Kb = this.noStepRisers,\n          hb = -1E3,\n          ib = -1E3,\n          jb = this.minDistance,\n          La = !0,\n          Ya = !1;\n\n      for (K = da; K <= pa; K++) {\n        G = e[K];\n        x = G.axes[f.id].graphs[b];\n        x.index = K;\n        var Za,\n            Ma = NaN;\n        if (m && void 0 == this.openField) for (var ub = K + 1; ub < e.length && (!e[ub] || !(Za = e[K + 1].axes[f.id].graphs[b]) || !Za.values || (Ma = Za.values.value, isNaN(Ma))); ub++);\n        var S,\n            O,\n            M,\n            fa,\n            la = NaN,\n            F = NaN,\n            E = NaN,\n            N = NaN,\n            L = NaN,\n            Na = NaN,\n            Da = NaN,\n            Oa = NaN,\n            Ea = NaN,\n            ya = NaN,\n            za = NaN,\n            ga = NaN,\n            ha = NaN,\n            X = NaN,\n            vb = NaN,\n            wb = NaN,\n            ma = NaN,\n            oa = void 0,\n            Ia = tb,\n            Sa = Wa,\n            Aa = sa,\n            ua,\n            xa,\n            xb = this.proCandlesticks,\n            kb = this.topRadius,\n            $a = this.pattern;\n        void 0 != x.pattern && ($a = x.pattern);\n        isNaN(x.alpha) || (Sa = x.alpha);\n        isNaN(x.dashLength) || (ba = x.dashLength);\n        var Ba = x.values;\n        f.recalculateToPercents && (Ba = x.percents);\n\n        if (Ba) {\n          X = this.stackable && \"none\" != T && \"3d\" != T ? Ba.close : Ba.value;\n          if (\"candlestick\" == g || \"ohlc\" == g) X = Ba.close, wb = Ba.low, Da = f.getCoordinate(wb), vb = Ba.high, Ea = f.getCoordinate(vb);\n          ma = Ba.open;\n          E = f.getCoordinate(X);\n          isNaN(ma) || (L = f.getCoordinate(ma), m && (Ma = ma, ma = L = NaN));\n          m && (void 0 == this.openField ? Za && (Za.isNegative = Ma < X ? !0 : !1, isNaN(Ma) && (x.isNegative = !La)) : x.isNegative = Ma > X ? !0 : !1);\n          if (!U) switch (this.showBalloonAt) {\n            case \"close\":\n              x.y = E;\n              break;\n\n            case \"open\":\n              x.y = L;\n              break;\n\n            case \"high\":\n              x.y = Ea;\n              break;\n\n            case \"low\":\n              x.y = Da;\n          }\n          var la = G.x[qa.id],\n              Ta = this.periodSpan - 1,\n              ra = Math.floor(W / 2) + Math.floor(Ta * W / 2),\n              Fa = ra,\n              lb = 0;\n          \"left\" == this.stepDirection && (lb = (2 * W + Ta * W) / 2, la -= lb);\n          \"center\" == this.stepDirection && (lb = W / 2, la -= lb);\n          \"start\" == this.pointPosition && (la -= W / 2 + Math.floor(Ta * W / 2), ra = 0, Fa = Math.floor(W) + Math.floor(Ta * W));\n          \"end\" == this.pointPosition && (la += W / 2 + Math.floor(Ta * W / 2), ra = Math.floor(W) + Math.floor(Ta * W), Fa = 0);\n\n          if (Kb) {\n            var yb = this.columnWidth;\n            isNaN(yb) || (ra *= yb, Fa *= yb);\n          }\n\n          U || (x.x = la);\n          -1E5 > la && (la = -1E5);\n          la > n + 1E5 && (la = n + 1E5);\n          t ? (F = E, N = L, L = E = la, isNaN(ma) && !this.fillToGraph && (N = ja), Na = Da, Oa = Ea) : (N = F = la, isNaN(ma) && !this.fillToGraph && (L = ja));\n          if (!xb && X < ma || xb && X < ta) x.isNegative = !0, Ja && (Ia = Ja), Xa && (Sa = Xa), void 0 != Ca && (Aa = Ca);\n          Ya = !1;\n          isNaN(X) || (m ? X > Ma ? (La && (Ya = !0), La = !1) : (La || (Ya = !0), La = !0) : x.isNegative = X < Pa ? !0 : !1, ta = X);\n          void 0 != x.color && (Ia = x.color);\n          x.fillColors && (Ia = x.fillColors);\n\n          switch (g) {\n            case \"line\":\n              if (isNaN(X)) z || (this.drawLineGraph(y, v, Q, R), y = [], v = [], Q = [], R = []);else {\n                if (Math.abs(F - hb) >= jb || Math.abs(E - ib) >= jb) y.push(F), v.push(E), hb = F, ib = E;\n                ya = F;\n                za = E;\n                ga = F;\n                ha = E;\n                !Ka || isNaN(L) || isNaN(N) || (Q.push(N), R.push(L));\n                if (Ya || void 0 != x.lineColor || void 0 != x.fillColors || !isNaN(x.dashLength)) this.drawLineGraph(y, v, Q, R), y = [F], v = [E], Q = [], R = [], !Ka || isNaN(L) || isNaN(N) || (Q.push(N), R.push(L)), m ? La ? (this.lineColorSwitched = sa, this.fillColorsSwitched = tb) : (this.lineColorSwitched = Ca, this.fillColorsSwitched = Ja) : (this.lineColorSwitched = x.lineColor, this.fillColorsSwitched = x.fillColors), this.dashLengthSwitched = x.dashLength;\n                x.gap && (this.drawLineGraph(y, v, Q, R), y = [], v = [], Q = [], R = []);\n              }\n              break;\n\n            case \"smoothedLine\":\n              if (isNaN(X)) z || (this.drawSmoothedGraph(y, v, Q, R), y = [], v = [], Q = [], R = []);else {\n                if (Math.abs(F - hb) >= jb || Math.abs(E - ib) >= jb) y.push(F), v.push(E), hb = F, ib = E;\n                ya = F;\n                za = E;\n                ga = F;\n                ha = E;\n                !Ka || isNaN(L) || isNaN(N) || (Q.push(N), R.push(L));\n                void 0 == x.lineColor && void 0 == x.fillColors && isNaN(x.dashLength) || (this.drawSmoothedGraph(y, v, Q, R), y = [F], v = [E], Q = [], R = [], !Ka || isNaN(L) || isNaN(N) || (Q.push(N), R.push(L)), this.lineColorSwitched = x.lineColor, this.fillColorsSwitched = x.fillColors, this.dashLengthSwitched = x.dashLength);\n                x.gap && (this.drawSmoothedGraph(y, v, Q, R), y = [], v = [], Q = [], R = []);\n              }\n              break;\n\n            case \"step\":\n              if (!isNaN(X)) {\n                t ? (isNaN(w) || (y.push(w), v.push(E - ra)), v.push(E - ra), y.push(F), v.push(E + Fa), y.push(F), !Ka || isNaN(L) || isNaN(N) || (isNaN(B) || (Q.push(B), R.push(L - ra)), Q.push(N), R.push(L - ra), Q.push(N), R.push(L + Fa))) : (isNaN(A) || (v.push(A), y.push(w), v.push(A), y.push(F - ra)), y.push(F - ra), v.push(E), y.push(F + Fa), v.push(E), !Ka || isNaN(L) || isNaN(N) || (isNaN(D) || (Q.push(N - ra), R.push(D)), Q.push(N - ra), R.push(L), Q.push(N + Fa), R.push(L)));\n                w = F;\n                A = E;\n                B = N;\n                D = L;\n                ya = F;\n                za = E;\n                ga = F;\n                ha = E;\n\n                if (Ya || void 0 != x.lineColor || void 0 != x.fillColors || !isNaN(x.dashLength)) {\n                  var Yb = y[y.length - 2],\n                      Zb = v[v.length - 2];\n                  y.pop();\n                  v.pop();\n                  this.drawLineGraph(y, v, Q, R);\n                  y = [Yb];\n                  v = [Zb];\n                  Q = [];\n                  R = [];\n                  this.lineColorSwitched = x.lineColor;\n                  this.fillColorsSwitched = x.fillColors;\n                  this.dashLengthSwitched = x.dashLength;\n                  m && (La ? (this.lineColorSwitched = sa, this.fillColorsSwitched = tb) : (this.lineColorSwitched = Ca, this.fillColorsSwitched = Ja));\n                }\n\n                if (Kb || x.gap) w = A = NaN, this.drawLineGraph(y, v, Q, R), y = [], v = [], Q = [], R = [];\n              } else if (!z) {\n                if (1 >= this.periodSpan || 1 < this.periodSpan && F - w > ra + Fa) w = A = NaN;\n                this.drawLineGraph(y, v, Q, R);\n                y = [];\n                v = [];\n                Q = [];\n                R = [];\n              }\n\n              break;\n\n            case \"column\":\n              ua = Aa;\n              void 0 != x.lineColor && (ua = x.lineColor);\n\n              if (!isNaN(X)) {\n                m || (x.isNegative = X < Pa ? !0 : !1);\n                x.isNegative && (Ja && (Ia = Ja), void 0 != Ca && (ua = Ca));\n                var Lb = f.min,\n                    Mb = f.max;\n\n                if (!(X < Lb && ma < Lb || X > Mb && ma > Mb)) {\n                  var va;\n\n                  if (t) {\n                    \"3d\" == T ? (O = E - (r / 2 - this.depthCount + 1) * (k + P) + P / 2 + I * aa, S = N + H * aa, va = aa) : (O = Math.floor(E - (r / 2 - aa) * (k + P) + P / 2), S = N, va = 0);\n                    M = k;\n                    ya = F;\n                    za = O + k / 2;\n                    isNaN(N) || N > F && !x.isNegative && (ya = N);\n                    ga = F;\n                    ha = O + k / 2;\n                    O + M > q + va * I && (M = q - O + va * I);\n                    O < va * I && (M += O, O = va * I);\n                    fa = F - N;\n                    var $b = S;\n                    S = d.fitToBounds(S, 0, n);\n                    fa += $b - S;\n                    fa = d.fitToBounds(fa, -S, n - S + H * aa);\n                    O < q && 0 < M && (oa = new d.Cuboid(h, fa, M, H - a.d3x, I - a.d3y, Ia, Sa, Z, ua, V, ia, u, t, ba, $a, kb, na), x.columnWidth = Math.abs(fa), x.columnHeight = Math.abs(M));\n                  } else {\n                    \"3d\" == T ? (S = F - (r / 2 - this.depthCount + 1) * (k + P) + P / 2 + H * aa, O = L + I * aa, va = aa) : (S = F - (r / 2 - aa) * (k + P) + P / 2, O = L, va = 0);\n                    M = k;\n                    ya = S + k / 2;\n                    za = E;\n                    isNaN(L) || L < E && !x.isNegative && (za = L);\n                    ga = S + k / 2;\n                    ha = E;\n                    S + M > n + va * H && (M = n - S + va * H);\n                    S < va * H && (M += S - va * H, S = va * H);\n                    fa = E - L;\n                    var ac = O;\n                    O = d.fitToBounds(O, this.dy, q);\n                    fa += ac - O;\n                    fa = d.fitToBounds(fa, -O + I * aa, q - O);\n                    S < n + aa * H && 0 < M && (this.showOnAxis && (O -= I / 2), oa = new d.Cuboid(h, M, fa, H - a.d3x, I - a.d3y, Ia, Sa, Z, ua, this.lineAlpha, ia, u, t, ba, $a, kb, na), x.columnHeight = Math.abs(fa), x.columnWidth = Math.abs(M));\n                  }\n                }\n\n                if (oa && (xa = oa.set, d.setCN(a, oa.set, \"graph-\" + this.type), d.setCN(a, oa.set, \"graph-\" + this.id), x.className && d.setCN(a, oa.set, x.className, !0), x.columnGraphics = xa, xa.translate(S, O), this.columnsSet.push(xa), (x.url || this.showHandOnHover) && xa.setAttr(\"cursor\", \"pointer\"), !U)) {\n                  \"none\" == T && (J = t ? (this.end + 1 - K) * C - c : C * K + c);\n                  \"3d\" == T && (t ? (J = (this.end + 1 - K) * C - c - 1E3 * this.depthCount, ya += H * this.columnIndex, ga += H * this.columnIndex, x.y += H * this.columnIndex) : (J = (C - c) * (K + 1) + 1E3 * this.depthCount, za += I * this.columnIndex, ha += I * this.columnIndex, x.y += I * this.columnIndex));\n                  if (\"regular\" == T || \"100%\" == T) J = t ? 0 < Ba.value ? (this.end + 1 - K) * C + c : (this.end + 1 - K) * C - c : 0 < Ba.value ? C * K + c : C * K - c;\n                  this.columnsArray.push({\n                    column: oa,\n                    depth: J\n                  });\n                  x.x = t ? O + M / 2 : S + M / 2;\n                  this.ownColumns.push(oa);\n                  this.animateColumns(oa, K, F, N, E, L);\n                  this.addListeners(xa, x);\n                }\n              }\n\n              break;\n\n            case \"candlestick\":\n              if (!isNaN(ma) && !isNaN(X)) {\n                var Ua, ab;\n                ua = Aa;\n                void 0 != x.lineColor && (ua = x.lineColor);\n\n                if (t) {\n                  if (O = E - k / 2, S = N, M = k, O + M > q && (M = q - O), 0 > O && (M += O, O = 0), O < q && 0 < M) {\n                    var zb, Ab;\n                    X > ma ? (zb = [F, Oa], Ab = [N, Na]) : (zb = [N, Oa], Ab = [F, Na]);\n                    !isNaN(Oa) && !isNaN(Na) && E < q && 0 < E && (Ua = d.line(h, zb, [E, E], ua, V, Z), ab = d.line(h, Ab, [E, E], ua, V, Z));\n                    fa = F - N;\n                    oa = new d.Cuboid(h, fa, M, H, I, Ia, Wa, Z, ua, V, ia, u, t, ba, $a, kb, na);\n                  }\n                } else if (S = F - k / 2, O = L + Z / 2, M = k, S + M > n && (M = n - S), 0 > S && (M += S, S = 0), fa = E - L, S < n && 0 < M) {\n                  xb && X >= ma && (Sa = 0);\n                  var oa = new d.Cuboid(h, M, fa, H, I, Ia, Sa, Z, ua, V, ia, u, t, ba, $a, kb, na),\n                      Bb,\n                      Cb;\n                  X > ma ? (Bb = [E, Ea], Cb = [L, Da]) : (Bb = [L, Ea], Cb = [E, Da]);\n                  !isNaN(Ea) && !isNaN(Da) && F < n && 0 < F && (Ua = d.line(h, [F, F], Bb, ua, V, Z), ab = d.line(h, [F, F], Cb, ua, V, Z), d.setCN(a, Ua, this.bcn + \"line-high\"), x.className && d.setCN(a, Ua, x.className, !0), d.setCN(a, ab, this.bcn + \"line-low\"), x.className && d.setCN(a, ab, x.className, !0));\n                }\n\n                oa && (xa = oa.set, x.columnGraphics = xa, ca.push(xa), xa.translate(S, O - Z / 2), (x.url || this.showHandOnHover) && xa.setAttr(\"cursor\", \"pointer\"), Ua && (ca.push(Ua), ca.push(ab)), ya = F, za = E, t ? (ha = E, ga = F, \"open\" == l && (ga = N), \"high\" == l && (ga = Oa), \"low\" == l && (ga = Na)) : (ha = E, \"open\" == l && (ha = L), \"high\" == l && (ha = Ea), \"low\" == l && (ha = Da), ga = F), U || (x.x = t ? O + M / 2 : S + M / 2, this.animateColumns(oa, K, F, N, E, L), this.addListeners(xa, x)));\n              }\n\n              break;\n\n            case \"ohlc\":\n              if (!(isNaN(ma) || isNaN(vb) || isNaN(wb) || isNaN(X))) {\n                var Nb = h.set();\n                ca.push(Nb);\n                X < ma && (x.isNegative = !0, void 0 != Ca && (Aa = Ca));\n                var mb, nb, ob;\n\n                if (t) {\n                  var Db = E - k / 2,\n                      Db = d.fitToBounds(Db, 0, q),\n                      Ob = d.fitToBounds(E, 0, q),\n                      Eb = E + k / 2,\n                      Eb = d.fitToBounds(Eb, 0, q);\n                  nb = d.line(h, [N, N], [Db, Ob], Aa, V, Z, ba);\n                  0 < E && E < q && (mb = d.line(h, [Na, Oa], [E, E], Aa, V, Z, ba));\n                  ob = d.line(h, [F, F], [Ob, Eb], Aa, V, Z, ba);\n                  ha = E;\n                  ga = F;\n                  \"open\" == l && (ga = N);\n                  \"high\" == l && (ga = Oa);\n                  \"low\" == l && (ga = Na);\n                } else {\n                  var Fb = F - k / 2,\n                      Fb = d.fitToBounds(Fb, 0, n),\n                      Pb = d.fitToBounds(F, 0, n),\n                      Gb = F + k / 2,\n                      Gb = d.fitToBounds(Gb, 0, n);\n                  nb = d.line(h, [Fb, Pb], [L, L], Aa, V, Z, ba);\n                  0 < F && F < n && (mb = d.line(h, [F, F], [Da, Ea], Aa, V, Z, ba));\n                  ob = d.line(h, [Pb, Gb], [E, E], Aa, V, Z, ba);\n                  ha = E;\n                  \"open\" == l && (ha = L);\n                  \"high\" == l && (ha = Ea);\n                  \"low\" == l && (ha = Da);\n                  ga = F;\n                }\n\n                ca.push(nb);\n                ca.push(mb);\n                ca.push(ob);\n                d.setCN(a, nb, this.bcn + \"stroke-open\");\n                d.setCN(a, ob, this.bcn + \"stroke-close\");\n                d.setCN(a, mb, this.bcn + \"stroke\");\n                x.className && d.setCN(a, Nb, x.className, !0);\n                ya = F;\n                za = E;\n              }\n\n          }\n\n          if (!U && !isNaN(X)) {\n            var Qb = this.hideBulletsCount;\n\n            if (this.end - this.start <= Qb || 0 === Qb) {\n              var Rb = this.createBullet(x, ga, ha, K),\n                  Sb = this.labelText;\n\n              if (Sb && Rb) {\n                var Hb = this.createLabel(x, ga, ha, Sb);\n                (Hb = this.positionLabel(ya, za, Hb, Rb, M, fa)) && this.allBullets.push(Hb);\n              }\n\n              if (\"regular\" == T || \"100%\" == T) {\n                var Tb = f.totalText;\n\n                if (Tb) {\n                  var Va = this.createLabel(x, 0, 0, Tb, f.totalTextColor);\n                  this.allBullets.push(Va);\n                  var Ub = Va.getBBox(),\n                      Vb = Ub.width,\n                      Wb = Ub.height,\n                      bb,\n                      cb,\n                      pb = f.totalTextOffset,\n                      Xb = f.totals[K];\n                  Xb && Xb.remove();\n                  var db = 0;\n                  \"column\" != g && (db = this.bulletSize);\n                  t ? (cb = E, bb = 0 > X ? F - Vb / 2 - 2 - db - pb : F + Vb / 2 + 3 + db + pb) : (bb = F, cb = 0 > X ? E + Wb / 2 + db + pb : E - Wb / 2 - 3 - db - pb);\n                  Va.translate(bb, cb);\n                  f.totals[K] = Va;\n                  t ? (0 > cb || cb > q) && Va.remove() : (0 > bb || bb > n) && Va.remove();\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) \"smoothedLine\" == g ? this.drawSmoothedGraph(y, v, Q, R) : this.drawLineGraph(y, v, Q, R), U || this.launchAnimation();\n      this.bulletsHidden && this.hideBullets();\n      this.customBulletsHidden && this.hideCustomBullets();\n    },\n    animateColumns: function (a, b) {\n      var c = this,\n          e = c.chart.startDuration;\n      0 < e && !c.animationPlayed && (c.seqAn ? (a.set.hide(), c.animationArray.push(a), e = setTimeout(function () {\n        c.animate.call(c);\n      }, e / (c.end - c.start + 1) * (b - c.start) * 1E3), c.timeOuts.push(e)) : c.animate(a));\n    },\n    createLabel: function (a, b, c, e, h) {\n      var f = this.chart,\n          g = a.labelColor;\n      g || (g = this.color);\n      g || (g = f.color);\n      h && (g = h);\n      h = this.fontSize;\n      void 0 === h && (this.fontSize = h = f.fontSize);\n      var k = this.labelFunction;\n      e = f.formatString(e, a);\n      e = d.cleanFromEmpty(e);\n      k && (e = k(a, e));\n      a = d.text(this.container, e, g, f.fontFamily, h);\n      a.node.style.pointerEvents = \"none\";\n      a.translate(b, c);\n      this.bulletSet.push(a);\n      return a;\n    },\n    positiveClip: function (a) {\n      a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh);\n    },\n    negativeClip: function (a) {\n      a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh);\n    },\n    drawLineGraph: function (a, b, c, e) {\n      var h = this;\n\n      if (1 < a.length) {\n        var f = h.set,\n            g = h.chart,\n            k = h.container,\n            l = k.set(),\n            m = k.set();\n        f.push(m);\n        f.push(l);\n        var n = h.lineAlpha,\n            q = h.lineThickness,\n            f = h.fillAlphas,\n            p = h.lineColorR,\n            t = h.negativeLineAlpha;\n        isNaN(t) && (t = n);\n        var r = h.lineColorSwitched;\n        r && (p = r);\n        var r = h.fillColorsR,\n            u = h.fillColorsSwitched;\n        u && (r = u);\n        var z = h.dashLength;\n        (u = h.dashLengthSwitched) && (z = u);\n        var u = h.negativeLineColor,\n            y = h.negativeFillColors,\n            v = h.negativeFillAlphas,\n            w = h.baseCoord;\n        0 !== h.negativeBase && (w = h.valueAxis.getCoordinate(h.negativeBase));\n        n = d.line(k, a, b, p, n, q, z, !1, !0);\n        d.setCN(g, n, h.bcn + \"stroke\");\n        l.push(n);\n        l.click(function (a) {\n          h.handleGraphEvent(a, \"clickGraph\");\n        }).mouseover(function (a) {\n          h.handleGraphEvent(a, \"rollOverGraph\");\n        }).mouseout(function (a) {\n          h.handleGraphEvent(a, \"rollOutGraph\");\n        });\n        void 0 === u || h.useNegativeColorIfDown || (q = d.line(k, a, b, u, t, q, z, !1, !0), d.setCN(g, q, h.bcn + \"stroke\"), d.setCN(g, q, h.bcn + \"stroke-negative\"), m.push(q));\n        if (0 < f || 0 < v) if (q = a.join(\";\").split(\";\"), t = b.join(\";\").split(\";\"), n = g.type, \"serial\" == n ? 0 < c.length ? (c.reverse(), e.reverse(), q = a.concat(c), t = b.concat(e)) : h.rotate ? (t.push(t[t.length - 1]), q.push(w), t.push(t[0]), q.push(w), t.push(t[0]), q.push(q[0])) : (q.push(q[q.length - 1]), t.push(w), q.push(q[0]), t.push(w), q.push(a[0]), t.push(t[0])) : \"xy\" == n && (b = h.fillToAxis) && (d.isString(b) && (b = g.getValueAxisById(b)), \"H\" == b.orientation ? (w = \"top\" == b.position ? 0 : b.viH, q.push(q[q.length - 1]), t.push(w), q.push(q[0]), t.push(w), q.push(a[0]), t.push(t[0])) : (w = \"left\" == b.position ? 0 : b.viW, t.push(t[t.length - 1]), q.push(w), t.push(t[0]), q.push(w), t.push(t[0]), q.push(q[0]))), a = h.gradientRotation, 0 < f && (b = d.polygon(k, q, t, r, f, 1, \"#000\", 0, a), b.pattern(h.pattern), d.setCN(g, b, h.bcn + \"fill\"), l.push(b)), y || void 0 !== u) isNaN(v) && (v = f), y || (y = u), k = d.polygon(k, q, t, y, v, 1, \"#000\", 0, a), d.setCN(g, k, h.bcn + \"fill\"), d.setCN(g, k, h.bcn + \"fill-negative\"), k.pattern(h.pattern), m.push(k), m.click(function (a) {\n          h.handleGraphEvent(a, \"clickGraph\");\n        }).mouseover(function (a) {\n          h.handleGraphEvent(a, \"rollOverGraph\");\n        }).mouseout(function (a) {\n          h.handleGraphEvent(a, \"rollOutGraph\");\n        });\n        h.applyMask(m, l);\n      }\n    },\n    applyMask: function (a, b) {\n      var c = a.length();\n      \"serial\" != this.chart.type || this.scrollbar || (this.positiveClip(b), 0 < c && this.negativeClip(a));\n    },\n    drawSmoothedGraph: function (a, b, c, e) {\n      if (1 < a.length) {\n        var h = this.set,\n            f = this.chart,\n            g = this.container,\n            k = g.set(),\n            l = g.set();\n        h.push(l);\n        h.push(k);\n        var m = this.lineAlpha,\n            n = this.lineThickness,\n            h = this.dashLength,\n            q = this.fillAlphas,\n            p = this.lineColorR,\n            t = this.fillColorsR,\n            r = this.negativeLineColor,\n            u = this.negativeFillColors,\n            z = this.negativeFillAlphas,\n            y = this.baseCoord,\n            v = this.lineColorSwitched;\n        v && (p = v);\n        (v = this.fillColorsSwitched) && (t = v);\n        v = this.negativeLineAlpha;\n        isNaN(v) && (v = m);\n        m = new d.Bezier(g, a, b, p, m, n, t, 0, h);\n        d.setCN(f, m, this.bcn + \"stroke\");\n        k.push(m.path);\n        void 0 !== r && (n = new d.Bezier(g, a, b, r, v, n, t, 0, h), d.setCN(f, n, this.bcn + \"stroke\"), d.setCN(f, n, this.bcn + \"stroke-negative\"), l.push(n.path));\n        0 < q && (m = a.join(\";\").split(\";\"), p = b.join(\";\").split(\";\"), n = \"\", 0 < c.length ? (c.push(\"M\"), e.push(\"M\"), c.reverse(), e.reverse(), m = a.concat(c), p = b.concat(e)) : (this.rotate ? (n += \" L\" + y + \",\" + b[b.length - 1], n += \" L\" + y + \",\" + b[0]) : (n += \" L\" + a[a.length - 1] + \",\" + y, n += \" L\" + a[0] + \",\" + y), n += \" L\" + a[0] + \",\" + b[0]), c = new d.Bezier(g, m, p, NaN, 0, 0, t, q, h, n), d.setCN(f, c, this.bcn + \"fill\"), c.path.pattern(this.pattern), k.push(c.path), u || void 0 !== r) && (z || (z = q), u || (u = r), a = new d.Bezier(g, a, b, NaN, 0, 0, u, z, h, n), a.path.pattern(this.pattern), d.setCN(f, a, this.bcn + \"fill\"), d.setCN(f, a, this.bcn + \"fill-negative\"), l.push(a.path));\n        this.applyMask(l, k);\n      }\n    },\n    launchAnimation: function () {\n      var a = this,\n          b = a.chart.startDuration;\n\n      if (0 < b && !a.animationPlayed) {\n        var c = a.set,\n            e = a.bulletSet;\n        d.VML || (c.attr({\n          opacity: a.startAlpha\n        }), e.attr({\n          opacity: a.startAlpha\n        }));\n        c.hide();\n        e.hide();\n        a.seqAn ? (b = setTimeout(function () {\n          a.animateGraphs.call(a);\n        }, a.index * b * 1E3), a.timeOuts.push(b)) : a.animateGraphs();\n      }\n    },\n    animateGraphs: function () {\n      var a = this.chart,\n          b = this.set,\n          c = this.bulletSet,\n          e = this.x,\n          d = this.y;\n      b.show();\n      c.show();\n      var f = a.startDuration,\n          a = a.startEffect;\n      b && (this.rotate ? (b.translate(-1E3, d), c.translate(-1E3, d)) : (b.translate(e, -1E3), c.translate(e, -1E3)), b.animate({\n        opacity: 1,\n        translate: e + \",\" + d\n      }, f, a), c.animate({\n        opacity: 1,\n        translate: e + \",\" + d\n      }, f, a));\n    },\n    animate: function (a) {\n      var b = this.chart,\n          c = this.animationArray;\n      !a && 0 < c.length && (a = c[0], c.shift());\n      c = d[d.getEffect(b.startEffect)];\n      b = b.startDuration;\n      a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), a.set.show());\n    },\n    legendKeyColor: function () {\n      var a = this.legendColor,\n          b = this.lineAlpha;\n      void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = \"object\" == typeof b ? b[0] : b));\n      return a;\n    },\n    legendKeyAlpha: function () {\n      var a = this.legendAlpha;\n      void 0 === a && (a = this.lineAlpha, this.fillAlphas > a && (a = this.fillAlphas), 0 === a && (a = this.bulletAlpha), 0 === a && (a = 1));\n      return a;\n    },\n    createBullet: function (a, b, c) {\n      if (!isNaN(b) && !isNaN(c)) {\n        var e = this.chart,\n            h = this.container,\n            f = this.bulletOffset,\n            g = this.bulletSize;\n        isNaN(a.bulletSize) || (g = a.bulletSize);\n        var k = a.values.value,\n            l = this.maxValue,\n            m = this.minValue,\n            n = this.maxBulletSize,\n            q = this.minBulletSize;\n        isNaN(l) || (isNaN(k) || (g = (k - m) / (l - m) * (n - q) + q), m == l && (g = n));\n        l = g;\n        this.bulletAxis && (g = a.values.error, isNaN(g) || (k = g), g = this.bulletAxis.stepWidth * k);\n        g < this.minBulletSize && (g = this.minBulletSize);\n        this.rotate ? b = a.isNegative ? b - f : b + f : c = a.isNegative ? c + f : c - f;\n        var p,\n            q = this.bulletColorR;\n        a.lineColor && (this.bulletColorSwitched = a.lineColor);\n        this.bulletColorSwitched && (q = this.bulletColorSwitched);\n        a.isNegative && void 0 !== this.bulletColorNegative && (q = this.bulletColorNegative);\n        void 0 !== a.color && (q = a.color);\n        var t;\n        \"xy\" == e.type && this.valueField && (t = this.pattern, a.pattern && (t = a.pattern));\n        f = this.bullet;\n        a.bullet && (f = a.bullet);\n        var k = this.bulletBorderThickness,\n            m = this.bulletBorderColorR,\n            n = this.bulletBorderAlpha,\n            r = this.bulletAlpha;\n        m || (m = q);\n        this.useLineColorForBulletBorder && (m = this.lineColorR);\n        var u = a.alpha;\n        isNaN(u) || (r = u);\n        if (\"none\" != this.bullet || a.bullet) p = d.bullet(h, f, g, q, r, k, m, n, l, 0, t);\n        if (this.customBullet || a.customBullet) t = this.customBullet, a.customBullet && (t = a.customBullet), t && (p && p.remove(), \"function\" == typeof t ? (p = new t(), p.chart = e, a.bulletConfig && (p.availableSpace = c, p.graph = this, p.graphDataItem = a, p.bulletY = c, a.bulletConfig.minCoord = this.minCoord - c, p.bulletConfig = a.bulletConfig), p.write(h), p = p.set) : (e.path && (t = e.path + t), p = h.set(), h = h.image(t, 0, 0, g, g), p.push(h), this.centerCustomBullets && h.translate(-g / 2, -g / 2)));\n\n        if (p) {\n          (a.url || this.showHandOnHover) && p.setAttr(\"cursor\", \"pointer\");\n          if (\"serial\" == e.type || \"gantt\" == e.type) if (-.5 > b - 0 || b - 0 > this.width || c < -g / 2 || c - 0 > this.height) p.remove(), p = null;\n          p && (this.bulletSet.push(p), p.translate(b, c), this.addListeners(p, a), this.allBullets.push(p));\n          a.bx = b;\n          a.by = c;\n          d.setCN(e, p, this.bcn + \"bullet\");\n          a.className && d.setCN(e, p, a.className, !0);\n        }\n\n        p ? (p.size = g || 0, a.bulletGraphics = p) : p = {\n          size: 0\n        };\n        p.graphDataItem = a;\n        return p;\n      }\n    },\n    showBullets: function () {\n      var a = this.allBullets,\n          b;\n      this.bulletsHidden = !1;\n\n      for (b = 0; b < a.length; b++) a[b].show();\n    },\n    hideBullets: function () {\n      var a = this.allBullets,\n          b;\n      this.bulletsHidden = !0;\n\n      for (b = 0; b < a.length; b++) a[b].hide();\n    },\n    showCustomBullets: function () {\n      var a = this.allBullets,\n          b;\n      this.customBulletsHidden = !1;\n\n      for (b = 0; b < a.length; b++) a[b].graphDataItem.customBullet && a[b].show();\n    },\n    hideCustomBullets: function () {\n      var a = this.allBullets,\n          b;\n      this.customBulletsHidden = !0;\n\n      for (b = 0; b < a.length; b++) a[b].graphDataItem.customBullet && a[b].hide();\n    },\n    addListeners: function (a, b) {\n      var c = this;\n      a.mouseover(function (a) {\n        c.handleRollOver(b, a);\n      }).mouseout(function (a) {\n        c.handleRollOut(b, a);\n      }).touchend(function (a) {\n        c.handleRollOver(b, a);\n        c.chart.panEventsEnabled && c.handleClick(b, a);\n      }).touchstart(function (a) {\n        c.handleRollOver(b, a);\n      }).click(function (a) {\n        c.handleClick(b, a);\n      }).dblclick(function (a) {\n        c.handleDoubleClick(b, a);\n      }).contextmenu(function (a) {\n        c.handleRightClick(b, a);\n      });\n    },\n    handleRollOver: function (a, b) {\n      if (a) {\n        var c = this.chart,\n            e = {\n          type: \"rollOverGraphItem\",\n          item: a,\n          index: a.index,\n          graph: this,\n          target: this,\n          chart: this.chart,\n          event: b\n        };\n        this.fire(\"rollOverGraphItem\", e);\n        c.fire(\"rollOverGraphItem\", e);\n        clearTimeout(c.hoverInt);\n        e = this.showBalloon;\n        !c.chartCursor || \"serial\" != c.type && \"gantt\" != c.type || (e = !1, !c.chartCursor.valueBalloonsEnabled && this.showBalloon && (e = !0));\n\n        if (e) {\n          var e = c.formatString(this.balloonText, a, !0),\n              h = this.balloonFunction;\n          h && (e = h(a, a.graph));\n          e = d.cleanFromEmpty(e);\n          h = c.getBalloonColor(this, a);\n          c.balloon.showBullet = !1;\n          c.balloon.pointerOrientation = \"V\";\n          var f = a.x,\n              g = a.y;\n          c.rotate && (f = a.y, g = a.x);\n          \"\" !== e ? c.showBalloon(e, h, !0, f + c.marginLeftReal, g + c.marginTopReal) : this.chart.hideBalloonReal();\n        } else this.chart.hideBalloonReal();\n      }\n\n      this.handleGraphEvent(b, \"rollOverGraph\");\n    },\n    handleRollOut: function (a, b) {\n      this.chart.hideBalloon();\n\n      if (a) {\n        var c = {\n          type: \"rollOutGraphItem\",\n          item: a,\n          index: a.index,\n          graph: this,\n          target: this,\n          chart: this.chart,\n          event: b\n        };\n        this.fire(\"rollOutGraphItem\", c);\n        this.chart.fire(\"rollOutGraphItem\", c);\n      }\n\n      this.handleGraphEvent(b, \"rollOutGraph\");\n    },\n    handleClick: function (a, b) {\n      if (a) {\n        var c = {\n          type: \"clickGraphItem\",\n          item: a,\n          index: a.index,\n          graph: this,\n          target: this,\n          chart: this.chart,\n          event: b\n        };\n        this.fire(\"clickGraphItem\", c);\n        this.chart.fire(\"clickGraphItem\", c);\n        d.getURL(a.url, this.urlTarget);\n      }\n\n      this.handleGraphEvent(b, \"clickGraph\");\n    },\n    handleGraphEvent: function (a, b) {\n      var c = {\n        type: b,\n        graph: this,\n        target: this,\n        chart: this.chart,\n        event: a\n      };\n      this.fire(b, c);\n      this.chart.fire(b, c);\n    },\n    handleRightClick: function (a, b) {\n      if (a) {\n        var c = {\n          type: \"rightClickGraphItem\",\n          item: a,\n          index: a.index,\n          graph: this,\n          target: this,\n          chart: this.chart,\n          event: b\n        };\n        this.fire(\"rightClickGraphItem\", c);\n        this.chart.fire(\"rightClickGraphItem\", c);\n      }\n    },\n    handleDoubleClick: function (a, b) {\n      if (a) {\n        var c = {\n          type: \"doubleClickGraphItem\",\n          item: a,\n          index: a.index,\n          graph: this,\n          target: this,\n          chart: this.chart,\n          event: b\n        };\n        this.fire(\"doubleClickGraphItem\", c);\n        this.chart.fire(\"doubleClickGraphItem\", c);\n      }\n    },\n    zoom: function (a, b) {\n      this.start = a;\n      this.end = b;\n      this.draw();\n    },\n    changeOpacity: function (a) {\n      var b = this.set;\n      b && b.setAttr(\"opacity\", a);\n\n      if (b = this.ownColumns) {\n        var c;\n\n        for (c = 0; c < b.length; c++) {\n          var e = b[c].set;\n          e && e.setAttr(\"opacity\", a);\n        }\n      }\n\n      (b = this.bulletSet) && b.setAttr(\"opacity\", a);\n    },\n    destroy: function () {\n      d.remove(this.set);\n      d.remove(this.bulletSet);\n      var a = this.timeOuts;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) clearTimeout(a[b]);\n      }\n\n      this.timeOuts = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ChartCursor = d.Class({\n    construct: function (a) {\n      this.cname = \"ChartCursor\";\n      this.createEvents(\"changed\", \"zoomed\", \"onHideCursor\", \"draw\", \"selected\", \"moved\");\n      this.enabled = !0;\n      this.cursorAlpha = 1;\n      this.selectionAlpha = .2;\n      this.cursorColor = \"#CC0000\";\n      this.categoryBalloonAlpha = 1;\n      this.color = \"#FFFFFF\";\n      this.type = \"cursor\";\n      this.zoomed = !1;\n      this.zoomable = !0;\n      this.pan = !1;\n      this.categoryBalloonDateFormat = \"MMM DD, YYYY\";\n      this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0;\n      this.rolledOver = !1;\n      this.cursorPosition = \"middle\";\n      this.bulletsEnabled = this.skipZoomDispatch = !1;\n      this.bulletSize = 8;\n      this.selectWithoutZooming = this.oneBalloonOnly = !1;\n      this.graphBulletSize = 1.7;\n      this.animationDuration = .3;\n      this.zooming = !1;\n      this.adjustment = 0;\n      this.avoidBalloonOverlapping = !0;\n      this.leaveCursor = !1;\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      this.destroy();\n      var a = this.chart,\n          b = a.container;\n      this.rotate = a.rotate;\n      this.container = b;\n      b = b.set();\n      b.translate(this.x, this.y);\n      this.set = b;\n      a.cursorSet.push(b);\n      b = new d.AmBalloon();\n      b.className = \"category\";\n      b.chart = a;\n      this.categoryBalloon = b;\n      d.copyProperties(a.balloon, b);\n      b.cornerRadius = 0;\n      b.shadowAlpha = 0;\n      b.borderThickness = 1;\n      b.borderAlpha = 1;\n      b.showBullet = !1;\n      var c = this.categoryBalloonColor;\n      void 0 === c && (c = this.cursorColor);\n      b.fillColor = c;\n      b.balloonColor = c;\n      b.fillAlpha = this.categoryBalloonAlpha;\n      b.borderColor = c;\n      b.color = this.color;\n      c = this.valueLineAxis;\n      d.isString(c) && (c = a.getValueAxisById(c));\n      c || (c = a.valueAxes[0]);\n      this.valueLineAxis = c;\n      this.valueLineBalloonEnabled && (this.vaBalloon = c = new d.AmBalloon(), d.copyProperties(b, c), c.animationDuration = 0, this.rotate || (c.pointerOrientation = \"H\"));\n      this.rotate && (b.pointerOrientation = \"H\");\n      this.extraWidth = 0;\n      this.prevX = [];\n      this.prevY = [];\n      this.prevTX = [];\n      this.prevTY = [];\n      if (this.valueBalloonsEnabled) for (b = 0; b < a.graphs.length; b++) c = new d.AmBalloon(), c.className = a.graphs[b].id, c.chart = a, d.copyProperties(a.balloon, c), a.graphs[b].valueBalloon = c;\n      \"cursor\" == this.type ? this.createCursor() : this.createCrosshair();\n    },\n    updateData: function () {\n      var a = this.chart;\n      this.data = a.chartData;\n      this.firstTime = a.firstTime;\n      this.lastTime = a.lastTime;\n    },\n    createCursor: function () {\n      var a = this.chart,\n          b = this.cursorAlpha,\n          c = a.categoryAxis,\n          e = this.categoryBalloon,\n          h,\n          f,\n          g,\n          k;\n      g = a.dx;\n      k = a.dy;\n      var l = this.width,\n          m = this.height,\n          n = a.rotate;\n      e.pointerWidth = c.tickLength;\n      n ? (h = [0, l, l + g], f = [0, 0, k], g = [g, 0, 0], k = [k, 0, m]) : (h = [g, 0, 0], f = [k, 0, m], g = [0, l, l + g], k = [0, 0, k]);\n      h = d.line(this.container, h, f, this.cursorColor, b, 1);\n      d.setCN(a, h, \"cursor-line\");\n      this.line = h;\n      (f = this.fullRectSet) ? (f.push(h), f.translate(this.x, this.y)) : this.set.push(h);\n      this.valueLineEnabled && (h = this.valueLineAlpha, isNaN(h) || (b = h), b = d.line(this.container, g, k, this.cursorColor, b, 1), d.setCN(a, b, \"cursor-value-line\"), this.vLine = b, this.set.push(b));\n      this.setBalloonBounds(e, c, n);\n      (a = this.vaBalloon) && this.setBalloonBounds(a, this.valueLineAxis, !n);\n      this.hideCursor();\n    },\n    createCrosshair: function () {\n      var a = this.cursorAlpha,\n          b = this.container,\n          c = d.line(b, [0, 0], [0, this.height], this.cursorColor, a, 1),\n          a = d.line(b, [0, this.width], [0, 0], this.cursorColor, a, 1);\n      d.setCN(this.chart, c, \"cursor-line\");\n      d.setCN(this.chart, a, \"cursor-line\");\n      this.set.push(c);\n      this.set.push(a);\n      this.vLine = c;\n      this.hLine = a;\n      this.hideCursor();\n    },\n    update: function () {\n      var a = this.chart;\n\n      if (a.mouseIsOver) {\n        var b = a.mouseX - this.x,\n            c = a.mouseY - this.y;\n        -.5 < b && b < this.width + 1 && 0 < c && c < this.height ? (this.drawing ? this.rolledOver || a.setMouseCursor(\"crosshair\") : this.pan && (this.rolledOver || a.setMouseCursor(\"move\")), this.rolledOver = !0, (this.valueLineEnabled || this.valueLineBalloonEnabled) && this.updateVLine(b, c), this.setPosition()) : this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1);\n      } else this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1);\n    },\n    updateVLine: function (a, b) {\n      var c = this.vLine,\n          e = this.vaBalloon;\n\n      if ((c || e) && !this.panning && !this.drawing) {\n        c && c.show();\n        var d = this.valueLineAxis,\n            f,\n            g = this.rotate;\n        g ? (c && c.translate(a, 0), d && (f = d.coordinateToValue(a)), c = a) : (c && c.translate(0, b), d && (f = d.coordinateToValue(b)), c = b - 1);\n\n        if (e && !isNaN(f) && this.prevLineValue != f) {\n          var k = d.formatValue(f, !0);\n          this.setBalloonPosition(e, d, c, !g);\n          e.showBalloon(k);\n        }\n\n        this.prevLineValue = f;\n      }\n    },\n    getMousePosition: function () {\n      var a,\n          b = this.width,\n          c = this.height;\n      a = this.chart;\n      this.rotate ? (a = a.mouseY - this.y, 0 > a && (a = 0), a > c && (a = c)) : (a = a.mouseX - this.x - 1, 0 > a && (a = 0), a > b && (a = b));\n      return a;\n    },\n    updateCrosshair: function () {\n      var a = this.chart,\n          b = a.mouseX - this.x,\n          c = a.mouseY - this.y,\n          e = this.vLine,\n          h = this.hLine,\n          b = d.fitToBounds(b, 0, this.width),\n          c = d.fitToBounds(c, 0, this.height);\n      0 < this.cursorAlpha && (e.show(), h.show(), e.translate(b, 0), h.translate(0, c));\n      this.zooming && (a.hideXScrollbar && (b = NaN), a.hideYScrollbar && (c = NaN), this.updateSelectionSize(b, c));\n      this.fireMoved();\n      a.mouseIsOver || this.zooming || this.hideCursor();\n    },\n    fireMoved: function () {\n      var a = this.chart,\n          b = {\n        type: \"moved\",\n        target: this\n      };\n      b.chart = a;\n      b.zooming = this.zooming;\n      b.x = a.mouseX - this.x;\n      b.y = a.mouseY - this.y;\n      this.fire(\"moved\", b);\n    },\n    updateSelectionSize: function (a, b) {\n      d.remove(this.selection);\n      var c = this.selectionPosX,\n          e = this.selectionPosY,\n          h = 0,\n          f = 0,\n          g = this.width,\n          k = this.height;\n      isNaN(a) || (c > a && (h = a, g = c - a), c < a && (h = c, g = a - c), c == a && (h = a, g = 0), g += this.extraWidth, h -= this.extraWidth / 2);\n      isNaN(b) || (e > b && (f = b, k = e - b), e < b && (f = e, k = b - e), e == b && (f = b, k = 0), k += this.extraWidth, f -= this.extraWidth / 2);\n      0 < g && 0 < k && (c = d.rect(this.container, g, k, this.cursorColor, this.selectionAlpha), d.setCN(this.chart, c, \"cursor-selection\"), c.translate(h + this.x, f + this.y), this.selection = c);\n    },\n    arrangeBalloons: function () {\n      var a = this.valueBalloons,\n          b = this.x,\n          c = this.y,\n          e = this.height + c;\n      a.sort(this.compareY);\n      var d;\n\n      for (d = 0; d < a.length; d++) {\n        var f = a[d].balloon;\n        f.setBounds(b, c, b + this.width, e);\n        f.prevX = this.prevX[d];\n        f.prevY = this.prevY[d];\n        f.prevTX = this.prevTX[d];\n        f.prevTY = this.prevTY[d];\n        f.draw();\n        e = f.yPos - 3;\n      }\n\n      this.arrangeBalloons2();\n    },\n    compareY: function (a, b) {\n      return a.yy < b.yy ? 1 : -1;\n    },\n    arrangeBalloons2: function () {\n      var a = this.valueBalloons;\n      a.reverse();\n      var b,\n          c = this.x,\n          e,\n          d,\n          f = a.length;\n\n      for (d = 0; d < f; d++) {\n        var g = a[d].balloon;\n        b = g.bottom;\n        var k = g.bottom - g.yPos,\n            l = f - d - 1;\n        0 < d && b - k < e + 3 && (g.setBounds(c, e + 3, c + this.width, e + k + 3), g.prevX = this.prevX[l], g.prevY = this.prevY[l], g.prevTX = this.prevTX[l], g.prevTY = this.prevTY[l], g.draw());\n        g.set && g.set.show();\n        this.prevX[l] = g.prevX;\n        this.prevY[l] = g.prevY;\n        this.prevTX[l] = g.prevTX;\n        this.prevTY[l] = g.prevTY;\n        e = g.bottom;\n      }\n    },\n    showBullets: function () {\n      d.remove(this.allBullets);\n      var a = this.container,\n          b = a.set();\n      this.set.push(b);\n      this.set.show();\n      this.allBullets = b;\n      var b = this.chart.graphs,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var e = b[c];\n\n        if (!e.hidden && e.balloonText) {\n          var h = this.data[this.index].axes[e.valueAxis.id].graphs[e.id],\n              f = h.y;\n\n          if (!isNaN(f)) {\n            var g, k;\n            g = h.x;\n            this.rotate ? (k = f, f = g) : k = g;\n            e = d.circle(a, this.bulletSize / 2, this.chart.getBalloonColor(e, h, !0), e.cursorBulletAlpha);\n            e.translate(k, f);\n            this.allBullets.push(e);\n          }\n        }\n      }\n    },\n    destroy: function () {\n      this.clear();\n      d.remove(this.selection);\n      this.selection = null;\n      var a = this.categoryBalloon;\n      a && a.destroy();\n      (a = this.vaBalloon) && a.destroy();\n      this.destroyValueBalloons();\n      d.remove(this.set);\n    },\n    clear: function () {},\n    destroyValueBalloons: function () {\n      var a = this.valueBalloons;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) a[b].balloon.hide();\n      }\n    },\n    zoom: function (a, b, c, e) {\n      var h = this.chart;\n      this.destroyValueBalloons();\n      this.zooming = !1;\n      var f;\n      this.rotate ? this.selectionPosY = f = h.mouseY : this.selectionPosX = f = h.mouseX;\n      this.start = a;\n      this.end = b;\n      this.startTime = c;\n      this.endTime = e;\n      this.zoomed = !0;\n      e = h.categoryAxis;\n      f = this.rotate;\n      b = this.width;\n      c = this.height;\n      a = e.stepWidth;\n\n      if (this.fullWidth) {\n        var g = 1;\n        e.parseDates && !e.equalSpacing && (g = e.minDuration());\n        f ? this.extraWidth = c = a * g : (this.extraWidth = b = a * g, this.categoryBalloon.minWidth = b);\n        this.line && this.line.remove();\n        this.line = d.rect(this.container, b, c, this.cursorColor, this.cursorAlpha, 0);\n        d.setCN(h, this.line, \"cursor-fill\");\n        this.fullRectSet && this.fullRectSet.push(this.line);\n      }\n\n      this.stepWidth = a;\n      this.tempVal = this.valueBalloonsEnabled;\n      this.valueBalloonsEnabled = !1;\n      this.setPosition();\n      this.valueBalloonsEnabled = this.tempVal;\n      this.hideCursor();\n    },\n    hideObj: function (a) {\n      a && a.hide();\n    },\n    hideCursor: function (a) {\n      void 0 === a && (a = !0);\n      this.leaveCursor || (this.hideObj(this.set), this.hideObj(this.categoryBalloon), this.hideObj(this.line), this.hideObj(this.vLine), this.hideObj(this.hLine), this.hideObj(this.vaBalloon), this.hideObj(this.allBullets), this.destroyValueBalloons(), this.selectWithoutZooming || d.remove(this.selection), this.previousIndex = NaN, a && this.fire(\"onHideCursor\", {\n        type: \"onHideCursor\",\n        chart: this.chart,\n        target: this\n      }), this.drawing || this.chart.setMouseCursor(\"auto\"), this.normalizeBulletSize());\n    },\n    setPosition: function (a, b, c) {\n      void 0 === b && (b = !0);\n\n      if (\"cursor\" == this.type) {\n        if (this.tempPosition = NaN, d.ifArray(this.data)) isNaN(a) && (a = this.getMousePosition()), (a != this.previousMousePosition || !0 === this.zoomed || this.oneBalloonOnly) && !isNaN(a) && (\"mouse\" == this.cursorPosition && (this.tempPosition = a), isNaN(c) && (c = this.chart.categoryAxis.xToIndex(a)), c != this.previousIndex || this.zoomed || \"mouse\" == this.cursorPosition || this.oneBalloonOnly) && (this.updateCursor(c, b), this.zoomed = !1), this.previousMousePosition = a;\n      } else this.updateCrosshair();\n    },\n    normalizeBulletSize: function () {\n      var a = this.resizedBullets;\n      if (a) for (var b = 0; b < a.length; b++) {\n        var c = a[b],\n            e = c.bulletGraphics;\n        e && (e.translate(c.bx, c.by, 1), c = c.graph, isNaN(this.graphBulletAlpha) || (e.setAttr(\"fill-opacity\", c.bulletAlpha), e.setAttr(\"stroke-opacity\", c.bulletBorderAlpha)));\n      }\n    },\n    updateCursor: function (a, b) {\n      var c = this.chart,\n          e = this.fullWidth,\n          h = c.mouseX - this.x,\n          f = c.mouseY - this.y;\n      this.drawingNow && (d.remove(this.drawingLine), this.drawingLine = d.line(this.container, [this.x + this.drawStartX, this.x + h], [this.y + this.drawStartY, this.y + f], this.cursorColor, 1, 1));\n\n      if (this.enabled) {\n        void 0 === b && (b = !0);\n        this.index = a += this.adjustment;\n        var g = c.categoryAxis,\n            k = c.dx,\n            l = c.dy,\n            m = this.x + 1,\n            n = this.y + 1,\n            q = this.width,\n            p = this.height,\n            t = this.data[a];\n        this.fireMoved();\n\n        if (t) {\n          var r = t.x[g.id],\n              u = c.rotate,\n              z = this.stepWidth,\n              y = this.categoryBalloon,\n              v = this.firstTime,\n              w = this.lastTime,\n              A = this.cursorPosition,\n              B = this.zooming,\n              D = this.panning,\n              C = c.graphs;\n          if (c.mouseIsOver || B || D || this.forceShow) if (this.forceShow = !1, D) {\n            var k = this.panClickPos,\n                c = this.panClickEndTime,\n                B = this.panClickStartTime,\n                J = this.panClickEnd,\n                m = this.panClickStart,\n                h = (u ? k - f : k - h) / z;\n            if (!g.parseDates || g.equalSpacing) h = Math.round(h);\n            0 !== h && (k = {\n              type: \"zoomed\",\n              target: this\n            }, k.chart = this.chart, g.parseDates && !g.equalSpacing ? (c + h > w && (h = w - c), B + h < v && (h = v - B), k.start = Math.round(B + h), k.end = Math.round(c + h), this.fire(k.type, k)) : J + h >= this.data.length || 0 > m + h || (k.start = m + h, k.end = J + h, this.fire(k.type, k)));\n          } else {\n            \"start\" == A ? r -= g.cellWidth / 2 : \"mouse\" == A && (c.mouseIsOver ? r = u ? f - 2 : h - 2 : isNaN(this.tempPosition) || (r = this.tempPosition - 2));\n\n            if (u) {\n              if (0 > r) if (B) r = 0;else {\n                this.hideCursor();\n                return;\n              }\n              if (r > p + 1) if (B) r = p + 1;else {\n                this.hideCursor();\n                return;\n              }\n            } else {\n              if (0 > r) if (B) r = 0;else {\n                this.hideCursor();\n                return;\n              }\n              if (r > q) if (B) r = q;else {\n                this.hideCursor();\n                return;\n              }\n            }\n\n            v = this.line;\n            0 < this.cursorAlpha && (u ? (w = 0, z = r + l, e && (z -= g.cellWidth / 2)) : (w = r, z = 0, e && (w -= g.cellWidth / 2)), A = this.animationDuration, 0 < A && !this.zooming ? isNaN(this.previousX) ? v.translate(w, z) : (v.translate(this.previousX, this.previousY), v.animate({\n              translate: w + \",\" + z\n            }, A, \"easeOutSine\")) : v.translate(w, z), this.previousX = w, this.previousY = z, v.show());\n            this.linePos = u ? r + l : r;\n            B && (e && v.hide(), u ? this.updateSelectionSize(NaN, r) : this.updateSelectionSize(r, NaN));\n            z = !0;\n            B && (z = !1);\n            this.categoryBalloonEnabled && z ? (this.setBalloonPosition(y, g, r, u), (v = this.categoryBalloonFunction) ? y.showBalloon(v(t.category)) : g.parseDates ? (g = d.formatDate(t.category, this.categoryBalloonDateFormat, c), -1 != g.indexOf(\"fff\") && (g = d.formatMilliseconds(g, t.category)), y.showBalloon(g)) : y.showBalloon(d.fixNewLines(t.category))) : y.hide();\n            C && this.bulletsEnabled && this.showBullets();\n\n            if (this.oneBalloonOnly) {\n              r = Infinity;\n\n              for (g = 0; g < C.length; g++) y = C[g], y.showBalloon && !y.hidden && y.balloonText && (v = t.axes[y.valueAxis.id].graphs[y.id], w = v.y, isNaN(w) || (u ? Math.abs(h - w) < r && (r = Math.abs(h - w), J = y) : Math.abs(f - w) < r && (r = Math.abs(f - w), J = y)));\n\n              this.mostCloseGraph && (J = this.mostCloseGraph);\n            }\n\n            if (a != this.previousIndex || J != this.previousMostCloseGraph) if (this.normalizeBulletSize(), this.destroyValueBalloons(), this.resizedBullets = [], C && this.valueBalloonsEnabled && z && c.balloon.enabled) {\n              this.valueBalloons = r = [];\n\n              for (g = 0; g < C.length; g++) if (y = C[g], w = NaN, (!this.oneBalloonOnly || y == J) && y.showBalloon && !y.hidden && y.balloonText && (\"step\" == y.type && \"left\" == y.stepDirection && (t = this.data[a + 1]), t)) {\n                if (v = t.axes[y.valueAxis.id].graphs[y.id]) w = v.y;\n                if (this.showNextAvailable && isNaN(w) && a + 1 < this.data.length) for (z = a + 1; z < this.data.length; z++) if (e = this.data[z]) if (v = e.axes[y.valueAxis.id].graphs[y.id], w = v.y, !isNaN(w)) break;\n\n                if (!isNaN(w)) {\n                  e = v.x;\n                  l = !0;\n\n                  if (u) {\n                    if (z = w, 0 > e || e > p) l = !1;\n                  } else if (z = e, e = w, 0 > z || z > q + k + 1) l = !1;\n\n                  l && (l = this.graphBulletSize, A = this.graphBulletAlpha, 1 == l && isNaN(A) || !d.isModern || !(D = v.bulletGraphics) || (D.translate(v.bx, v.by, l), this.resizedBullets.push(v), isNaN(A) || (D.setAttr(\"fill-opacity\", A), D.setAttr(\"stroke-opacity\", A))), l = y.valueBalloon, A = c.getBalloonColor(y, v), l.setBounds(m, n, m + q, n + p), l.pointerOrientation = \"H\", D = this.balloonPointerOrientation, \"vertical\" == D && (l.pointerOrientation = \"V\"), \"horizontal\" == D && (l.pointerOrientation = \"H\"), l.changeColor(A), void 0 !== y.balloonAlpha && (l.fillAlpha = y.balloonAlpha), void 0 !== y.balloonTextColor && (l.color = y.balloonTextColor), l.setPosition(z + m, e + n), z = c.formatString(y.balloonText, v, !0), (e = y.balloonFunction) && (z = e(v, y).toString()), \"\" !== z && (u ? l.showBalloon(z) : (l.text = z, l.show = !0), r.push({\n                    yy: w,\n                    balloon: l\n                  })), !u && l.set && (l.set.hide(), y = l.textDiv) && (y.style.visibility = \"hidden\"));\n                }\n              }\n\n              this.avoidBalloonOverlapping && this.arrangeBalloons();\n            }\n            b ? (k = {\n              type: \"changed\"\n            }, k.index = a, k.chart = this.chart, k.zooming = B, k.mostCloseGraph = J, k.position = u ? f : h, k.target = this, c.fire(\"changed\", k), this.fire(\"changed\", k), this.skipZoomDispatch = !1) : (this.skipZoomDispatch = !0, c.updateLegendValues(a));\n            this.previousIndex = a;\n            this.previousMostCloseGraph = J;\n          }\n        }\n      } else this.hideCursor();\n    },\n    setBalloonPosition: function (a, b, c, e) {\n      var d = b.position,\n          f = b.inside;\n      b = b.axisThickness;\n      var g = this.chart,\n          k = g.dx,\n          g = g.dy,\n          l = this.x,\n          m = this.y,\n          n = this.width,\n          q = this.height;\n      e ? (f && (\"right\" == d ? a.setBounds(l, m + g, l + n + k, m + c + g) : a.setBounds(l, m + g, l + n + k, m + c)), \"right\" == d ? f ? a.setPosition(l + n + k, m + c + g) : a.setPosition(l + n + k + b, m + c + g) : f ? a.setPosition(l, m + c) : a.setPosition(l - b, m + c)) : \"top\" == d ? f ? a.setPosition(l + c + k, m + g) : a.setPosition(l + c + k, m + g - b + 1) : f ? a.setPosition(l + c, m + q) : a.setPosition(l + c, m + q + b - 1);\n    },\n    setBalloonBounds: function (a, b, c) {\n      var e = b.position,\n          d = b.inside,\n          f = b.axisThickness,\n          g = b.tickLength,\n          k = this.chart,\n          l = k.dx,\n          k = k.dy,\n          m = this.x,\n          n = this.y,\n          q = this.width,\n          p = this.height;\n      c ? (d && (a.pointerWidth = 0), \"right\" == e ? d ? a.setBounds(m, n + k, m + q + l, n + p + k) : a.setBounds(m + q + l + f, n + k, m + q + 1E3, n + p + k) : d ? a.setBounds(m, n, q + m, p + n) : a.setBounds(-1E3, -1E3, m - g - f, n + p + 15)) : (a.maxWidth = q, b.parseDates && (g = 0, a.pointerWidth = 0), \"top\" == e ? d ? a.setBounds(m + l, n + k, q + l + m, p + n) : a.setBounds(m + l, -1E3, q + l + m, n + k - g - f) : d ? a.setBounds(m, n, q + m, p + n - g) : a.setBounds(m, n + p + g + f - 1, m + q, n + p + g + f));\n    },\n    enableDrawing: function (a) {\n      this.enabled = !a;\n      this.hideCursor();\n      this.rolledOver = !1;\n      this.drawing = a;\n    },\n    isZooming: function (a) {\n      a && a != this.zooming && this.handleMouseDown(\"fake\");\n      a || a == this.zooming || this.handleMouseUp();\n    },\n    handleMouseOut: function () {\n      if (this.enabled) if (this.zooming) this.setPosition();else {\n        this.index = void 0;\n        var a = {\n          type: \"changed\",\n          index: void 0,\n          target: this\n        };\n        a.chart = this.chart;\n        this.fire(\"changed\", a);\n        this.hideCursor();\n      }\n    },\n    handleReleaseOutside: function () {\n      this.handleMouseUp();\n    },\n    handleMouseUp: function () {\n      var a = this.chart,\n          b = this.data,\n          c;\n\n      if (a) {\n        var e = a.mouseX - this.x,\n            h = a.mouseY - this.y;\n\n        if (this.drawingNow) {\n          this.drawingNow = !1;\n          d.remove(this.drawingLine);\n          c = this.drawStartX;\n          var f = this.drawStartY;\n          if (2 < Math.abs(c - e) || 2 < Math.abs(f - h)) c = {\n            type: \"draw\",\n            target: this,\n            chart: a,\n            initialX: c,\n            initialY: f,\n            finalX: e,\n            finalY: h\n          }, this.fire(c.type, c);\n        }\n\n        if (this.enabled && 0 < b.length) {\n          if (this.pan) this.rolledOver = !1;else if (this.zoomable && this.zooming) {\n            c = this.selectWithoutZooming ? {\n              type: \"selected\"\n            } : {\n              type: \"zoomed\"\n            };\n            c.target = this;\n            c.chart = a;\n            if (\"cursor\" == this.type) this.rotate ? this.selectionPosY = h : this.selectionPosX = h = e, 4 > Math.abs(h - this.initialMouse) && this.fromIndex == this.index || (this.index < this.fromIndex ? (c.end = this.fromIndex, c.start = this.index) : (c.end = this.index, c.start = this.fromIndex), h = a.categoryAxis, h.parseDates && !h.equalSpacing && (b[c.start] && (c.start = b[c.start].time), b[c.end] && (c.end = a.getEndTime(b[c.end].time))), this.skipZoomDispatch || this.fire(c.type, c));else {\n              var g = this.initialMouseX,\n                  k = this.initialMouseY;\n              3 > Math.abs(e - g) && 3 > Math.abs(h - k) || (b = Math.min(g, e), f = Math.min(k, h), e = Math.abs(g - e), h = Math.abs(k - h), a.hideXScrollbar && (b = 0, e = this.width), a.hideYScrollbar && (f = 0, h = this.height), c.selectionHeight = h, c.selectionWidth = e, c.selectionY = f, c.selectionX = b, this.skipZoomDispatch || this.fire(c.type, c));\n            }\n            this.selectWithoutZooming || d.remove(this.selection);\n          }\n          this.skipZoomDispatch = !1;\n        }\n      }\n\n      this.panning = this.zooming = !1;\n    },\n    showCursorAt: function (a) {\n      var b = this.chart.categoryAxis;\n      a = b.parseDates ? b.dateToCoordinate(a) : b.categoryToCoordinate(a);\n      this.previousMousePosition = NaN;\n      this.forceShow = !0;\n      this.setPosition(a, !1);\n    },\n    clearSelection: function () {\n      d.remove(this.selection);\n    },\n    handleMouseDown: function (a) {\n      if (this.zoomable || this.pan || this.drawing) {\n        var b = this.rotate,\n            c = this.chart,\n            e = c.mouseX - this.x,\n            h = c.mouseY - this.y;\n        if (0 < e && e < this.width && 0 < h && h < this.height || \"fake\" == a) this.setPosition(), this.selectWithoutZooming && d.remove(this.selection), this.drawing ? (this.drawStartY = h, this.drawStartX = e, this.drawingNow = !0) : this.pan ? (this.zoomable = !1, c.setMouseCursor(\"move\"), this.panning = !0, this.panClickPos = b ? h : e, this.panClickStart = this.start, this.panClickEnd = this.end, this.panClickStartTime = this.startTime, this.panClickEndTime = this.endTime) : this.zoomable && (\"cursor\" == this.type ? (this.fromIndex = this.index, b ? (this.initialMouse = h, this.selectionPosY = this.linePos) : (this.initialMouse = e, this.selectionPosX = this.linePos)) : (this.initialMouseX = e, this.initialMouseY = h, this.selectionPosX = e, this.selectionPosY = h), this.zooming = !0);\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SimpleChartScrollbar = d.Class({\n    construct: function (a) {\n      this.createEvents(\"zoomed\");\n      this.backgroundColor = \"#D4D4D4\";\n      this.backgroundAlpha = 1;\n      this.selectedBackgroundColor = \"#EFEFEF\";\n      this.scrollDuration = this.selectedBackgroundAlpha = 1;\n      this.resizeEnabled = !0;\n      this.hideResizeGrips = !1;\n      this.scrollbarHeight = 20;\n      this.updateOnReleaseOnly = !1;\n      9 > document.documentMode && (this.updateOnReleaseOnly = !0);\n      this.dragIconHeight = this.dragIconWidth = 35;\n      this.dragIcon = \"dragIconRoundBig\";\n      d.applyTheme(this, a, \"SimpleChartScrollbar\");\n    },\n    draw: function () {\n      var a = this;\n      a.destroy();\n\n      if (a.enabled) {\n        var b = a.chart.container,\n            c = a.rotate,\n            e = a.chart,\n            h = b.set();\n        a.set = h;\n        e.scrollbarsSet.push(h);\n        var f, g;\n        c ? (f = a.scrollbarHeight, g = e.plotAreaHeight) : (g = a.scrollbarHeight, f = e.plotAreaWidth);\n        a.width = f;\n\n        if ((a.height = g) && f) {\n          var k = d.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);\n          d.setCN(e, k, \"scrollbar-bg\");\n          a.bg = k;\n          h.push(k);\n          k = d.rect(b, f, g, \"#000\", .005);\n          h.push(k);\n          a.invisibleBg = k;\n          k.click(function () {\n            a.handleBgClick();\n          }).mouseover(function () {\n            a.handleMouseOver();\n          }).mouseout(function () {\n            a.handleMouseOut();\n          }).touchend(function () {\n            a.handleBgClick();\n          });\n          k = d.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha);\n          d.setCN(e, k, \"scrollbar-bg-selected\");\n          a.selectedBG = k;\n          h.push(k);\n          f = d.rect(b, f, g, \"#000\", .005);\n          a.dragger = f;\n          h.push(f);\n          f.mousedown(function (b) {\n            a.handleDragStart(b);\n          }).mouseup(function () {\n            a.handleDragStop();\n          }).mouseover(function () {\n            a.handleDraggerOver();\n          }).mouseout(function () {\n            a.handleMouseOut();\n          }).touchstart(function (b) {\n            a.handleDragStart(b);\n          }).touchend(function () {\n            a.handleDragStop();\n          });\n          f = e.pathToImages;\n          c ? (k = f + a.dragIcon + \"H.png\", f = a.dragIconWidth, c = a.dragIconHeight) : (k = f + a.dragIcon + \".png\", c = a.dragIconWidth, f = a.dragIconHeight);\n          g = b.image(k, 0, 0, c, f);\n          d.setCN(e, g, \"scrollbar-grip-left\");\n          k = b.image(k, 0, 0, c, f);\n          d.setCN(e, k, \"scrollbar-grip-right\");\n          var l = 10,\n              m = 20;\n          e.panEventsEnabled && (l = 25, m = a.scrollbarHeight);\n          var n = d.rect(b, l, m, \"#000\", .005),\n              q = d.rect(b, l, m, \"#000\", .005);\n          q.translate(-(l - c) / 2, -(m - f) / 2);\n          n.translate(-(l - c) / 2, -(m - f) / 2);\n          c = b.set([g, q]);\n          b = b.set([k, n]);\n          a.iconLeft = c;\n          h.push(a.iconLeft);\n          a.iconRight = b;\n          h.push(b);\n          c.mousedown(function () {\n            a.leftDragStart();\n          }).mouseup(function () {\n            a.leftDragStop();\n          }).mouseover(function () {\n            a.iconRollOver();\n          }).mouseout(function () {\n            a.iconRollOut();\n          }).touchstart(function () {\n            a.leftDragStart();\n          }).touchend(function () {\n            a.leftDragStop();\n          });\n          b.mousedown(function () {\n            a.rightDragStart();\n          }).mouseup(function () {\n            a.rightDragStop();\n          }).mouseover(function () {\n            a.iconRollOver();\n          }).mouseout(function () {\n            a.iconRollOut();\n          }).touchstart(function () {\n            a.rightDragStart();\n          }).touchend(function () {\n            a.rightDragStop();\n          });\n          d.ifArray(e.chartData) ? h.show() : h.hide();\n          a.hideDragIcons();\n          a.clipDragger(!1);\n        }\n\n        h.translate(a.x, a.y);\n        h.node.style.msTouchAction = \"none\";\n      }\n    },\n    updateScrollbarSize: function (a, b) {\n      a = Math.round(a);\n      b = Math.round(b);\n      var c = this.dragger,\n          e,\n          d,\n          f,\n          g;\n      this.rotate ? (e = 0, d = a, f = this.width + 1, g = b - a, c.setAttr(\"height\", b - a), c.setAttr(\"y\", d)) : (e = a, d = 0, f = b - a, g = this.height + 1, c.setAttr(\"width\", b - a), c.setAttr(\"x\", e));\n      this.clipAndUpdate(e, d, f, g);\n    },\n    update: function () {\n      var a,\n          b = !1,\n          c,\n          e,\n          d = this.x,\n          f = this.y,\n          g = this.dragger,\n          k = this.getDBox();\n\n      if (k) {\n        c = k.x + d;\n        e = k.y + f;\n        var l = k.width,\n            k = k.height,\n            m = this.rotate,\n            n = this.chart,\n            q = this.width,\n            p = this.height,\n            t = n.mouseX,\n            r = n.mouseY;\n        a = this.initialMouse;\n        this.forceClip && this.clipDragger(!0);\n        n.mouseIsOver && (this.dragging && (n = this.initialCoord, m ? (a = n + (r - a), 0 > a && (a = 0), n = p - k, a > n && (a = n), g.setAttr(\"y\", a)) : (a = n + (t - a), 0 > a && (a = 0), n = q - l, a > n && (a = n), g.setAttr(\"x\", a)), this.clipDragger(!0)), this.resizingRight && (m ? (a = r - e, a + e > p + f && (a = p - e + f), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"height\", a))) : (a = t - c, a + c > q + d && (a = q - c + d), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"width\", a))), this.clipDragger(!0)), this.resizingLeft && (m ? (c = e, e = r, e < f && (e = f), e > p + f && (e = p + f), a = !0 === b ? c - e : k + c - e, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"y\", c + k - f)) : (0 === a && (a = .1), g.setAttr(\"y\", e - f), g.setAttr(\"height\", a))) : (e = t, e < d && (e = d), e > q + d && (e = q + d), a = !0 === b ? c - e : l + c - e, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"x\", c + l - d)) : (0 === a && (a = .1), g.setAttr(\"x\", e - d), g.setAttr(\"width\", a))), this.clipDragger(!0)));\n      }\n    },\n    stopForceClip: function () {\n      this.forceClip = !1;\n    },\n    clipDragger: function (a) {\n      var b = this.getDBox();\n\n      if (b) {\n        var c = b.x,\n            e = b.y,\n            d = b.width,\n            b = b.height,\n            f = !1;\n\n        if (this.rotate) {\n          if (c = 0, d = this.width + 1, this.clipY != e || this.clipH != b) f = !0;\n        } else if (e = 0, b = this.height + 1, this.clipX != c || this.clipW != d) f = !0;\n\n        f && (this.clipAndUpdate(c, e, d, b), a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()));\n      }\n    },\n    maskGraphs: function () {},\n    clipAndUpdate: function (a, b, c, e) {\n      this.clipX = a;\n      this.clipY = b;\n      this.clipW = c;\n      this.clipH = e;\n      this.selectedBG.clipRect(a, b, c, e);\n      this.updateDragIconPositions();\n      this.maskGraphs(a, b, c, e);\n    },\n    dispatchScrollbarEvent: function () {\n      if (this.skipEvent) this.skipEvent = !1;else {\n        var a = this.chart;\n        a.hideBalloon();\n        var b = this.getDBox(),\n            c = b.x,\n            e = b.y,\n            d = b.width,\n            b = b.height;\n        this.rotate ? (c = e, d = this.height / b) : d = this.width / d;\n        a = {\n          type: \"zoomed\",\n          position: c,\n          chart: a,\n          target: this,\n          multiplier: d\n        };\n        this.fire(a.type, a);\n      }\n    },\n    updateDragIconPositions: function () {\n      var a = this.getDBox(),\n          b = a.x,\n          c = a.y,\n          e = this.iconLeft,\n          d = this.iconRight,\n          f,\n          g,\n          k = this.scrollbarHeight;\n      this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, e.translate((k - g) / 2, c - f / 2), d.translate((k - g) / 2, c + a.height - f / 2)) : (f = this.dragIconHeight, g = this.dragIconWidth, e.translate(b - g / 2, (k - f) / 2), d.translate(b - g / 2 + a.width, (k - f) / 2));\n    },\n    showDragIcons: function () {\n      this.resizeEnabled && (this.iconLeft.show(), this.iconRight.show());\n    },\n    hideDragIcons: function () {\n      if (!this.resizingLeft && !this.resizingRight && !this.dragging) {\n        if (this.hideResizeGrips || !this.resizeEnabled) this.iconLeft.hide(), this.iconRight.hide();\n        this.removeCursors();\n      }\n    },\n    removeCursors: function () {\n      this.chart.setMouseCursor(\"auto\");\n    },\n    relativeZoom: function (a, b) {\n      this.enabled && (this.dragger.stop(), this.multiplier = a, this.position = b, this.updateScrollbarSize(b, this.rotate ? b + this.height / a : b + this.width / a), this.clipDragger());\n    },\n    destroy: function () {\n      this.clear();\n      d.remove(this.set);\n      d.remove(this.iconRight);\n      d.remove(this.iconLeft);\n    },\n    clear: function () {},\n    handleDragStart: function () {\n      if (this.enabled) {\n        var a = this.chart;\n        this.dragger.stop();\n        this.removeCursors();\n        this.dragging = !0;\n        var b = this.getDBox();\n        this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, this.initialMouse = a.mouseX);\n      }\n    },\n    handleDragStop: function () {\n      this.updateOnReleaseOnly && (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent());\n      this.dragging = !1;\n      this.mouseIsOver && this.removeCursors();\n      this.update();\n    },\n    handleDraggerOver: function () {\n      this.handleMouseOver();\n    },\n    leftDragStart: function () {\n      this.dragger.stop();\n      this.resizingLeft = !0;\n    },\n    leftDragStop: function () {\n      this.resizingLeft = !1;\n      this.mouseIsOver || this.removeCursors();\n      this.updateOnRelease();\n    },\n    rightDragStart: function () {\n      this.dragger.stop();\n      this.resizingRight = !0;\n    },\n    rightDragStop: function () {\n      this.resizingRight = !1;\n      this.mouseIsOver || this.removeCursors();\n      this.updateOnRelease();\n    },\n    iconRollOut: function () {\n      this.removeCursors();\n    },\n    iconRollOver: function () {\n      this.rotate ? this.chart.setMouseCursor(\"n-resize\") : this.chart.setMouseCursor(\"e-resize\");\n      this.handleMouseOver();\n    },\n    getDBox: function () {\n      if (this.dragger) return this.dragger.getBBox();\n    },\n    handleBgClick: function () {\n      var a = this;\n\n      if (!a.resizingRight && !a.resizingLeft) {\n        a.zooming = !0;\n        var b,\n            c,\n            e = a.scrollDuration,\n            h = a.dragger;\n        b = a.getDBox();\n        var f = b.height,\n            g = b.width;\n        c = a.chart;\n        var k = a.y,\n            l = a.x,\n            m = a.rotate;\n        m ? (b = \"y\", c = c.mouseY - f / 2 - k, c = d.fitToBounds(c, 0, a.height - f)) : (b = \"x\", c = c.mouseX - g / 2 - l, c = d.fitToBounds(c, 0, a.width - g));\n        a.updateOnReleaseOnly ? (a.skipEvent = !1, h.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (c = Math.round(c), m ? h.animate({\n          y: c\n        }, e, \">\") : h.animate({\n          x: c\n        }, e, \">\"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function () {\n          a.stopForceClip.call(a);\n        }, 5E3 * e));\n      }\n    },\n    updateOnRelease: function () {\n      this.updateOnReleaseOnly && (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent());\n    },\n    handleReleaseOutside: function () {\n      if (this.set) {\n        if (this.resizingLeft || this.resizingRight || this.dragging) this.updateOnRelease(), this.removeCursors();\n        this.mouseIsOver = this.dragging = this.resizingRight = this.resizingLeft = !1;\n        this.hideDragIcons();\n        this.update();\n      }\n    },\n    handleMouseOver: function () {\n      this.mouseIsOver = !0;\n      this.showDragIcons();\n    },\n    handleMouseOut: function () {\n      this.mouseIsOver = !1;\n      this.hideDragIcons();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ChartScrollbar = d.Class({\n    inherits: d.SimpleChartScrollbar,\n    construct: function (a) {\n      this.cname = \"ChartScrollbar\";\n      d.ChartScrollbar.base.construct.call(this, a);\n      this.enabled = !0;\n      this.graphLineColor = \"#BBBBBB\";\n      this.graphLineAlpha = 0;\n      this.graphFillColor = \"#BBBBBB\";\n      this.graphFillAlpha = 1;\n      this.selectedGraphLineColor = \"#888888\";\n      this.selectedGraphLineAlpha = 0;\n      this.selectedGraphFillColor = \"#888888\";\n      this.selectedGraphFillAlpha = 1;\n      this.gridCount = 0;\n      this.gridColor = \"#FFFFFF\";\n      this.gridAlpha = .7;\n      this.skipEvent = this.autoGridCount = !1;\n      this.color = \"#FFFFFF\";\n      this.scrollbarCreated = !1;\n      this.offset = 0;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function () {\n      var a = this.categoryAxis,\n          b = this.chart;\n      a || (this.categoryAxis = a = new d.CategoryAxis());\n      a.chart = b;\n      a.id = \"scrollbar\";\n      a.dateFormats = b.categoryAxis.dateFormats;\n      a.markPeriodChange = b.categoryAxis.markPeriodChange;\n      a.boldPeriodBeginning = b.categoryAxis.boldPeriodBeginning;\n      a.axisItemRenderer = d.RecItem;\n      a.axisRenderer = d.RecAxis;\n      a.guideFillRenderer = d.RecFill;\n      a.inside = !0;\n      a.fontSize = this.fontSize;\n      a.tickLength = 0;\n      a.axisAlpha = 0;\n      d.isString(this.graph) && (this.graph = d.getObjById(b.graphs, this.graph));\n\n      if (a = this.graph) {\n        var c = this.valueAxis;\n        c || (this.valueAxis = c = new d.ValueAxis(), c.visible = !1, c.scrollbar = !0, c.axisItemRenderer = d.RecItem, c.axisRenderer = d.RecAxis, c.guideFillRenderer = d.RecFill, c.labelsEnabled = !1, c.chart = b);\n        b = this.unselectedGraph;\n        b || (b = new d.AmGraph(), b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers);\n        b = this.selectedGraph;\n        b || (b = new d.AmGraph(), b.scrollbar = !0, this.selectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers);\n      }\n\n      this.scrollbarCreated = !0;\n    },\n    draw: function () {\n      var a = this;\n      d.ChartScrollbar.base.draw.call(a);\n\n      if (a.enabled) {\n        a.scrollbarCreated || a.init();\n        var b = a.chart,\n            c = b.chartData,\n            e = a.categoryAxis,\n            h = a.rotate,\n            f = a.x,\n            g = a.y,\n            k = a.width,\n            l = a.height,\n            m = b.categoryAxis,\n            n = a.set;\n        e.setOrientation(!h);\n        e.parseDates = m.parseDates;\n        e.rotate = h;\n        e.equalSpacing = m.equalSpacing;\n        e.minPeriod = m.minPeriod;\n        e.startOnAxis = m.startOnAxis;\n        e.viW = k;\n        e.viH = l;\n        e.width = k;\n        e.height = l;\n        e.gridCount = a.gridCount;\n        e.gridColor = a.gridColor;\n        e.gridAlpha = a.gridAlpha;\n        e.color = a.color;\n        e.tickLength = 0;\n        e.axisAlpha = 0;\n        e.autoGridCount = a.autoGridCount;\n        e.parseDates && !e.equalSpacing && e.timeZoom(b.firstTime, b.lastTime);\n        e.zoom(0, c.length - 1);\n\n        if (m = a.graph) {\n          var q = a.valueAxis,\n              p = m.valueAxis;\n          q.id = p.id;\n          q.rotate = h;\n          q.setOrientation(h);\n          q.width = k;\n          q.height = l;\n          q.viW = k;\n          q.viH = l;\n          q.dataProvider = c;\n          q.reversed = p.reversed;\n          q.logarithmic = p.logarithmic;\n          q.gridAlpha = 0;\n          q.axisAlpha = 0;\n          n.push(q.set);\n          h ? (q.y = g, q.x = 0) : (q.x = f, q.y = 0);\n          var f = Infinity,\n              g = -Infinity,\n              t;\n\n          for (t = 0; t < c.length; t++) {\n            var r = c[t].axes[p.id].graphs[m.id].values,\n                u;\n\n            for (u in r) if (r.hasOwnProperty(u) && \"percents\" != u && \"total\" != u) {\n              var z = r[u];\n              z < f && (f = z);\n              z > g && (g = z);\n            }\n          }\n\n          Infinity != f && (q.minimum = f);\n          -Infinity != g && (q.maximum = g + .1 * (g - f));\n          f == g && (--q.minimum, q.maximum += 1);\n          void 0 !== a.minimum && (q.minimum = a.minimum);\n          void 0 !== a.maximum && (q.maximum = a.maximum);\n          q.zoom(0, c.length - 1);\n          u = a.unselectedGraph;\n          u.id = m.id;\n          u.bcn = \"scrollbar-graph-\";\n          u.rotate = h;\n          u.chart = b;\n          u.data = c;\n          u.valueAxis = q;\n          u.chart = m.chart;\n          u.categoryAxis = a.categoryAxis;\n          u.periodSpan = m.periodSpan;\n          u.valueField = m.valueField;\n          u.openField = m.openField;\n          u.closeField = m.closeField;\n          u.highField = m.highField;\n          u.lowField = m.lowField;\n          u.lineAlpha = a.graphLineAlpha;\n          u.lineColorR = a.graphLineColor;\n          u.fillAlphas = a.graphFillAlpha;\n          u.fillColorsR = a.graphFillColor;\n          u.connect = m.connect;\n          u.hidden = m.hidden;\n          u.width = k;\n          u.height = l;\n          u.pointPosition = m.pointPosition;\n          u.stepDirection = m.stepDirection;\n          u.periodSpan = m.periodSpan;\n          p = a.selectedGraph;\n          p.id = m.id;\n          p.bcn = u.bcn + \"selected-\";\n          p.rotate = h;\n          p.chart = b;\n          p.data = c;\n          p.valueAxis = q;\n          p.chart = m.chart;\n          p.categoryAxis = e;\n          p.periodSpan = m.periodSpan;\n          p.valueField = m.valueField;\n          p.openField = m.openField;\n          p.closeField = m.closeField;\n          p.highField = m.highField;\n          p.lowField = m.lowField;\n          p.lineAlpha = a.selectedGraphLineAlpha;\n          p.lineColorR = a.selectedGraphLineColor;\n          p.fillAlphas = a.selectedGraphFillAlpha;\n          p.fillColorsR = a.selectedGraphFillColor;\n          p.connect = m.connect;\n          p.hidden = m.hidden;\n          p.width = k;\n          p.height = l;\n          p.pointPosition = m.pointPosition;\n          p.stepDirection = m.stepDirection;\n          p.periodSpan = m.periodSpan;\n          b = a.graphType;\n          b || (b = m.type);\n          u.type = b;\n          p.type = b;\n          c = c.length - 1;\n          u.zoom(0, c);\n          p.zoom(0, c);\n          p.set.click(function () {\n            a.handleBackgroundClick();\n          }).mouseover(function () {\n            a.handleMouseOver();\n          }).mouseout(function () {\n            a.handleMouseOut();\n          });\n          u.set.click(function () {\n            a.handleBackgroundClick();\n          }).mouseover(function () {\n            a.handleMouseOver();\n          }).mouseout(function () {\n            a.handleMouseOut();\n          });\n          n.push(u.set);\n          n.push(p.set);\n        }\n\n        n.push(e.set);\n        n.push(e.labelsSet);\n        a.bg.toBack();\n        a.invisibleBg.toFront();\n        a.dragger.toFront();\n        a.iconLeft.toFront();\n        a.iconRight.toFront();\n      }\n    },\n    timeZoom: function (a, b, c) {\n      this.startTime = a;\n      this.endTime = b;\n      this.timeDifference = b - a;\n      this.skipEvent = !d.toBoolean(c);\n      this.zoomScrollbar();\n      this.skipEvent || this.dispatchScrollbarEvent();\n    },\n    zoom: function (a, b) {\n      this.start = a;\n      this.end = b;\n      this.skipEvent = !0;\n      this.zoomScrollbar();\n    },\n    dispatchScrollbarEvent: function () {\n      if (this.skipEvent) this.skipEvent = !1;else {\n        var a = this.chart.chartData,\n            b,\n            c,\n            e = this.dragger.getBBox();\n        b = e.x;\n        var d = e.y,\n            f = e.width,\n            e = e.height,\n            g = this.chart;\n        this.rotate ? (b = d, c = e) : c = f;\n        f = {\n          type: \"zoomed\",\n          target: this\n        };\n        f.chart = g;\n        var k = this.categoryAxis,\n            l = this.stepWidth,\n            d = g.minSelectedTime,\n            e = !1;\n\n        if (k.parseDates && !k.equalSpacing) {\n          if (a = g.lastTime, g = g.firstTime, k = Math.round(b / l) + g, b = this.dragging ? k + this.timeDifference : Math.round((b + c) / l) + g, k > b && (k = b), 0 < d && b - k < d && (b = Math.round(k + (b - k) / 2), e = Math.round(d / 2), k = b - e, b += e, e = !0), b > a && (b = a), b - d < k && (k = b - d), k < g && (k = g), k + d > b && (b = k + d), k != this.startTime || b != this.endTime) this.startTime = k, this.endTime = b, f.start = k, f.end = b, f.startDate = new Date(k), f.endDate = new Date(b), this.fire(f.type, f);\n        } else if (k.startOnAxis || (b += l / 2), c -= this.stepWidth / 2, d = k.xToIndex(b), b = k.xToIndex(b + c), d != this.start || this.end != b) k.startOnAxis && (this.resizingRight && d == b && b++, this.resizingLeft && d == b && (0 < d ? d-- : b = 1)), this.start = d, this.end = this.dragging ? this.start + this.difference : b, f.start = this.start, f.end = this.end, k.parseDates && (a[this.start] && (f.startDate = new Date(a[this.start].time)), a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f.type, f);\n\n        e && this.zoomScrollbar();\n      }\n    },\n    zoomScrollbar: function () {\n      var a, b;\n      a = this.chart;\n      var c = a.chartData,\n          e = this.categoryAxis;\n      e.parseDates && !e.equalSpacing ? (c = e.stepWidth, e = a.firstTime, a = c * (this.startTime - e), b = c * (this.endTime - e)) : (a = c[this.start].x[e.id], b = c[this.end].x[e.id], c = e.stepWidth, e.startOnAxis || (e = c / 2, a -= e, b += e));\n      this.stepWidth = c;\n      this.updateScrollbarSize(a, b);\n    },\n    maskGraphs: function (a, b, c, e) {\n      var d = this.selectedGraph;\n      d && d.set.clipRect(a, b, c, e);\n    },\n    handleDragStart: function () {\n      d.ChartScrollbar.base.handleDragStart.call(this);\n      this.difference = this.end - this.start;\n      this.timeDifference = this.endTime - this.startTime;\n      0 > this.timeDifference && (this.timeDifference = 0);\n    },\n    handleBackgroundClick: function () {\n      d.ChartScrollbar.base.handleBackgroundClick.call(this);\n      this.dragging || (this.difference = this.end - this.start, this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0));\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmBalloon = d.Class({\n    construct: function (a) {\n      this.cname = \"AmBalloon\";\n      this.enabled = !0;\n      this.fillColor = \"#FFFFFF\";\n      this.fillAlpha = .8;\n      this.borderThickness = 2;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = 1;\n      this.cornerRadius = 0;\n      this.maxWidth = 220;\n      this.horizontalPadding = 8;\n      this.verticalPadding = 4;\n      this.pointerWidth = 6;\n      this.pointerOrientation = \"V\";\n      this.color = \"#000000\";\n      this.adjustBorderColor = !0;\n      this.show = this.follow = this.showBullet = !1;\n      this.bulletSize = 3;\n      this.shadowAlpha = .4;\n      this.shadowColor = \"#000000\";\n      this.fadeOutDuration = this.animationDuration = .3;\n      this.fixedPosition = !1;\n      this.offsetY = 6;\n      this.offsetX = 1;\n      this.textAlign = \"center\";\n      d.isModern || (this.offsetY *= 1.5);\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      var a = this.pointToX,\n          b = this.pointToY;\n      this.deltaSignX = this.deltaSignY = 1;\n      var c = this.chart;\n      d.VML && (this.fadeOutDuration = 0);\n      this.xAnim && c.stopAnim(this.xAnim);\n      this.yAnim && c.stopAnim(this.yAnim);\n\n      if (!isNaN(a)) {\n        var e = this.follow,\n            h = c.container,\n            f = this.set;\n        d.remove(f);\n        this.removeDiv();\n        f = h.set();\n        f.node.style.pointerEvents = \"none\";\n        this.set = f;\n        c.balloonsSet.push(f);\n\n        if (this.show) {\n          var g = this.l,\n              k = this.t,\n              l = this.r,\n              m = this.b,\n              n = this.balloonColor,\n              q = this.fillColor,\n              p = this.borderColor,\n              t = q;\n          void 0 != n && (this.adjustBorderColor ? t = p = n : q = n);\n          var r = this.horizontalPadding,\n              u = this.verticalPadding,\n              z = this.pointerWidth,\n              y = this.pointerOrientation,\n              v = this.cornerRadius,\n              w = c.fontFamily,\n              A = this.fontSize;\n          void 0 == A && (A = c.fontSize);\n          var n = document.createElement(\"div\"),\n              B = c.classNamePrefix;\n          n.className = B + \"-balloon-div\";\n          this.className && (n.className = n.className + \" \" + B + \"-balloon-div-\" + this.className);\n          B = n.style;\n          B.pointerEvents = \"none\";\n          B.position = \"absolute\";\n          var D = this.minWidth,\n              C = \"\";\n          isNaN(D) || (C = \"min-width:\" + (D - 2 * r) + \"px; \");\n          n.innerHTML = \"<div style='text-align:\" + this.textAlign + \"; \" + C + \"max-width:\" + this.maxWidth + \"px; font-size:\" + A + \"px; color:\" + this.color + \"; font-family:\" + w + \"'>\" + this.text + \"</div>\";\n          c.chartDiv.appendChild(n);\n          this.textDiv = n;\n          A = n.offsetWidth;\n          w = n.offsetHeight;\n          n.clientHeight && (A = n.clientWidth, w = n.clientHeight);\n          w += 2 * u;\n          C = A + 2 * r;\n          !isNaN(D) && C < D && (C = D);\n          window.opera && (w += 2);\n          var J = !1,\n              A = this.offsetY;\n          c.handDrawn && (A += c.handDrawScatter + 2);\n          \"H\" != y ? (D = a - C / 2, b < k + w + 10 && \"down\" != y ? (J = !0, e && (b += A), A = b + z, this.deltaSignY = -1) : (e && (b -= A), A = b - w - z, this.deltaSignY = 1)) : (2 * z > w && (z = w / 2), A = b - w / 2, a < g + (l - g) / 2 ? (D = a + z, this.deltaSignX = -1) : (D = a - C - z, this.deltaSignX = 1));\n          A + w >= m && (A = m - w);\n          A < k && (A = k);\n          D < g && (D = g);\n          D + C > l && (D = l - C);\n          var k = A + u,\n              m = D + r,\n              u = this.shadowAlpha,\n              H = this.shadowColor,\n              r = this.borderThickness,\n              I = this.bulletSize,\n              T;\n          0 < v || 0 === z ? (0 < u && (a = d.rect(h, C, w, q, 0, r + 1, H, u, this.cornerRadius), d.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), q = d.rect(h, C, w, q, this.fillAlpha, r, p, this.borderAlpha, this.cornerRadius), this.showBullet && (T = d.circle(h, I, t, this.fillAlpha), f.push(T))) : (t = [], v = [], \"H\" != y ? (g = a - D, g > C - z && (g = C - z), g < z && (g = z), t = [0, g - z, a - D, g + z, C, C, 0, 0], v = J ? [0, 0, b - A, 0, 0, w, w, 0] : [w, w, b - A, w, w, 0, 0, w]) : (t = b - A, t > w - z && (t = w - z), t < z && (t = z), v = [0, t - z, b - A, t + z, w, w, 0, 0], t = a < g + (l - g) / 2 ? [0, 0, D < a ? 0 : a - D, 0, 0, C, C, 0] : [C, C, D + C > a ? C : a - D, C, C, 0, 0, C]), 0 < u && (a = d.polygon(h, t, v, q, 0, r, H, u), a.translate(1, 1), f.push(a)), q = d.polygon(h, t, v, q, this.fillAlpha, r, p, this.borderAlpha));\n          this.bg = q;\n          f.push(q);\n          q.toFront();\n          d.setCN(c, q, \"balloon-bg\");\n          this.className && d.setCN(c, q, \"balloon-bg-\" + this.className);\n          h = 1 * this.deltaSignX;\n          B.left = m + \"px\";\n          B.top = k + \"px\";\n          f.translate(D - h, A);\n          q = q.getBBox();\n          this.bottom = A + w + 1;\n          this.yPos = q.y + A;\n          T && T.translate(this.pointToX - D + h, b - A);\n          b = this.animationDuration;\n          0 < this.animationDuration && !e && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY), f.animate({\n            translate: D - h + \",\" + A\n          }, b, \"easeOutSine\"), n && (B.left = this.prevTX + \"px\", B.top = this.prevTY + \"px\", this.xAnim = c.animate({\n            node: n\n          }, \"left\", this.prevTX, m, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({\n            node: n\n          }, \"top\", this.prevTY, k, b, \"easeOutSine\", \"px\")));\n          this.prevX = D - h;\n          this.prevY = A;\n          this.prevTX = m;\n          this.prevTY = k;\n        }\n      }\n    },\n    followMouse: function () {\n      if (this.follow && this.show) {\n        var a = this.chart.mouseX - this.offsetX * this.deltaSignX,\n            b = this.chart.mouseY;\n        this.pointToX = a;\n        this.pointToY = b;\n        if (a != this.previousX || b != this.previousY) if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();else {\n          var c = this.set;\n\n          if (c) {\n            var e = c.getBBox(),\n                a = a - e.width / 2,\n                d = b - e.height - 10;\n            a < this.l && (a = this.l);\n            a > this.r - e.width && (a = this.r - e.width);\n            d < this.t && (d = b + 10);\n            c.translate(a, d);\n            b = this.textDiv.style;\n            b.left = a + this.horizontalPadding + \"px\";\n            b.top = d + this.verticalPadding + \"px\";\n          }\n        }\n      }\n    },\n    changeColor: function (a) {\n      this.balloonColor = a;\n    },\n    setBounds: function (a, b, c, e) {\n      this.l = a;\n      this.t = b;\n      this.r = c;\n      this.b = e;\n      this.destroyTO && clearTimeout(this.destroyTO);\n    },\n    showBalloon: function (a) {\n      this.text = a;\n      this.show = !0;\n      this.destroyTO && clearTimeout(this.destroyTO);\n      a = this.chart;\n      this.fadeAnim1 && a.stopAnim(this.fadeAnim1);\n      this.fadeAnim2 && a.stopAnim(this.fadeAnim2);\n      this.draw();\n    },\n    hide: function () {\n      var a = this,\n          b = a.fadeOutDuration,\n          c = a.chart;\n\n      if (0 < b) {\n        a.destroyTO = setTimeout(function () {\n          a.destroy.call(a);\n        }, 1E3 * b);\n        a.follow = !1;\n        a.show = !1;\n        var e = a.set;\n        e && (e.setAttr(\"opacity\", a.fillAlpha), a.fadeAnim1 = e.animate({\n          opacity: 0\n        }, b, \"easeInSine\"));\n        a.textDiv && (a.fadeAnim2 = c.animate({\n          node: a.textDiv\n        }, \"opacity\", 1, 0, b, \"easeInSine\", \"\"));\n      } else a.show = !1, a.follow = !1, a.destroy();\n    },\n    setPosition: function (a, b, c) {\n      this.pointToX = a;\n      this.pointToY = b;\n      c && (a == this.previousX && b == this.previousY || this.draw());\n      this.previousX = a;\n      this.previousY = b;\n    },\n    followCursor: function (a) {\n      var b = this;\n      (b.follow = a) ? (b.pShowBullet = b.showBullet, b.showBullet = !1) : void 0 !== b.pShowBullet && (b.showBullet = b.pShowBullet);\n      clearInterval(b.interval);\n      var c = b.chart.mouseX,\n          e = b.chart.mouseY;\n      !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = e, b.followMouse(), b.interval = setInterval(function () {\n        b.followMouse.call(b);\n      }, 40));\n    },\n    removeDiv: function () {\n      if (this.textDiv) {\n        var a = this.textDiv.parentNode;\n        a && a.removeChild(this.textDiv);\n      }\n    },\n    destroy: function () {\n      clearInterval(this.interval);\n      d.remove(this.set);\n      this.removeDiv();\n      this.set = null;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmCoordinateChart = d.Class({\n    inherits: d.AmChart,\n    construct: function (a) {\n      d.AmCoordinateChart.base.construct.call(this, a);\n      this.theme = a;\n      this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");\n      this.startAlpha = 1;\n      this.startDuration = 0;\n      this.startEffect = \"elastic\";\n      this.sequencedAnimation = !0;\n      this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");\n      this.balloonDateFormat = \"MMM DD, YYYY\";\n      this.valueAxes = [];\n      this.graphs = [];\n      this.guides = [];\n      this.gridAboveGraphs = !1;\n      d.applyTheme(this, a, \"AmCoordinateChart\");\n    },\n    initChart: function () {\n      d.AmCoordinateChart.base.initChart.call(this);\n      var a = this.categoryAxis;\n      a && (this.categoryAxis = d.processObject(a, d.CategoryAxis, this.theme));\n      this.processValueAxes();\n      this.createValueAxes();\n      this.processGraphs();\n      this.processGuides();\n      d.VML && (this.startAlpha = 1);\n      this.setLegendData(this.graphs);\n      this.gridAboveGraphs && this.gridSet.toFront();\n    },\n    createValueAxes: function () {\n      if (0 === this.valueAxes.length) {\n        var a = new d.ValueAxis();\n        this.addValueAxis(a);\n      }\n    },\n    parseData: function () {\n      this.processValueAxes();\n      this.processGraphs();\n    },\n    parseSerialData: function (a) {\n      var b = this.graphs,\n          c,\n          e = {},\n          h = this.seriesIdField;\n      h || (h = this.categoryField);\n      this.chartData = [];\n\n      if (a) {\n        var f = !1,\n            g,\n            k = this.categoryAxis,\n            l,\n            m,\n            n;\n        k && (f = k.parseDates, l = k.forceShowField, n = k.classNameField, m = k.labelColorField, g = k.categoryFunction);\n        var q,\n            p,\n            t = {},\n            r;\n        f && (c = d.extractPeriod(k.minPeriod), q = c.period, p = c.count, r = d.getPeriodDuration(q, p));\n        var u = {};\n        this.lookupTable = u;\n        var z,\n            y = this.dataDateFormat,\n            v = {};\n\n        for (z = 0; z < a.length; z++) {\n          var w = {},\n              A = a[z];\n          c = A[this.categoryField];\n          w.dataContext = A;\n          w.category = g ? g(c, A, k) : String(c);\n          l && (w.forceShow = A[l]);\n          n && (w.className = A[n]);\n          m && (w.labelColor = A[m]);\n          u[A[h]] = w;\n          if (f && (k.categoryFunction ? c = k.categoryFunction(c, A, k) : (!y || c instanceof Date || (c = c.toString()), c = d.getDate(c, y, k.minPeriod)), c = d.resetDateToMin(c, q, p, k.firstDayOfWeek), w.category = c, w.time = c.getTime(), isNaN(w.time))) continue;\n          var B = this.valueAxes;\n          w.axes = {};\n          w.x = {};\n          var D;\n\n          for (D = 0; D < B.length; D++) {\n            var C = B[D].id;\n            w.axes[C] = {};\n            w.axes[C].graphs = {};\n            var J;\n\n            for (J = 0; J < b.length; J++) {\n              c = b[J];\n              var H = c.id,\n                  I = 1.1;\n              isNaN(c.gapPeriod) || (I = c.gapPeriod);\n              var T = c.periodValue;\n\n              if (c.valueAxis.id == C) {\n                w.axes[C].graphs[H] = {};\n                var da = {};\n                da.index = z;\n                var pa = A;\n                c.dataProvider && (pa = e);\n                da.values = this.processValues(pa, c, T);\n                !c.connect && v && v[H] && w.time - t[H] >= r * I && (v[H].gap = !0);\n                this.processFields(c, da, pa);\n                da.category = w.category;\n                da.serialDataItem = w;\n                da.graph = c;\n                w.axes[C].graphs[H] = da;\n                t[H] = w.time;\n                v[H] = da;\n              }\n            }\n          }\n\n          this.chartData[z] = w;\n        }\n      }\n\n      for (a = 0; a < b.length; a++) c = b[a], c.dataProvider && this.parseGraphData(c);\n    },\n    processValues: function (a, b, c) {\n      var e = {},\n          h,\n          f = !1;\n      \"candlestick\" != b.type && \"ohlc\" != b.type || \"\" === c || (f = !0);\n\n      for (var g = \"value error open close low high\".split(\" \"), k = 0; k < g.length; k++) {\n        var l = g[k];\n        \"value\" != l && \"error\" != l && f && (c = l.charAt(0).toUpperCase() + l.slice(1));\n        var m = a[b[l + \"Field\"] + c];\n        h = Number(m);\n        isNaN(h) || (e[l] = h);\n        \"date\" == b.valueAxis.type && void 0 !== m && (h = d.getDate(m, b.chart.dataDateFormat), e[l] = h.getTime());\n      }\n\n      return e;\n    },\n    parseGraphData: function (a) {\n      var b = a.dataProvider,\n          c = a.seriesIdField;\n      c || (c = this.seriesIdField);\n      c || (c = this.categoryField);\n      var e;\n\n      for (e = 0; e < b.length; e++) {\n        var d = b[e],\n            f = this.lookupTable[String(d[c])],\n            g = a.valueAxis.id;\n        f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f, g.values = this.processValues(d, a, a.periodValue), this.processFields(a, g, d));\n      }\n    },\n    addValueAxis: function (a) {\n      a.chart = this;\n      this.valueAxes.push(a);\n      this.validateData();\n    },\n    removeValueAxesAndGraphs: function () {\n      var a = this.valueAxes,\n          b;\n\n      for (b = a.length - 1; -1 < b; b--) this.removeValueAxis(a[b]);\n    },\n    removeValueAxis: function (a) {\n      var b = this.graphs,\n          c;\n\n      for (c = b.length - 1; 0 <= c; c--) {\n        var e = b[c];\n        e && e.valueAxis == a && this.removeGraph(e);\n      }\n\n      b = this.valueAxes;\n\n      for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n\n      this.validateData();\n    },\n    addGraph: function (a) {\n      this.graphs.push(a);\n      this.chooseGraphColor(a, this.graphs.length - 1);\n      this.validateData();\n    },\n    removeGraph: function (a) {\n      var b = this.graphs,\n          c;\n\n      for (c = b.length - 1; 0 <= c; c--) b[c] == a && (b.splice(c, 1), a.destroy());\n\n      this.validateData();\n    },\n    processValueAxes: function () {\n      var a = this.valueAxes,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b],\n            c = d.processObject(c, d.ValueAxis, this.theme);\n        a[b] = c;\n        c.chart = this;\n        c.id || (c.id = \"valueAxisAuto\" + b + \"_\" + new Date().getTime());\n        void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes);\n      }\n    },\n    processGuides: function () {\n      var a = this.guides,\n          b = this.categoryAxis;\n      if (a) for (var c = 0; c < a.length; c++) {\n        var e = a[c];\n        (void 0 !== e.category || void 0 !== e.date) && b && b.addGuide(e);\n        e.id || (e.id = \"guideAuto\" + c + \"_\" + new Date().getTime());\n        var h = e.valueAxis;\n        h ? (d.isString(h) && (h = this.getValueAxisById(h)), h ? h.addGuide(e) : this.valueAxes[0].addGuide(e)) : isNaN(e.value) || this.valueAxes[0].addGuide(e);\n      }\n    },\n    processGraphs: function () {\n      var a = this.graphs,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b],\n            c = d.processObject(c, d.AmGraph, this.theme);\n        a[b] = c;\n        this.chooseGraphColor(c, b);\n        c.chart = this;\n        d.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis));\n        c.valueAxis || (c.valueAxis = this.valueAxes[0]);\n        c.id || (c.id = \"graphAuto\" + b + \"_\" + new Date().getTime());\n      }\n    },\n    formatString: function (a, b, c) {\n      var e = b.graph,\n          h = e.valueAxis;\n      h.duration && b.values.value && (h = d.formatDuration(b.values.value, h.duration, \"\", h.durationUnits, h.maxInterval, h.numberFormatter), a = a.split(\"[[value]]\").join(h));\n      a = d.massReplace(a, {\n        \"[[title]]\": e.title,\n        \"[[description]]\": b.description\n      });\n      a = c ? d.fixNewLines(a) : d.fixBrakes(a);\n      return a = d.cleanFromEmpty(a);\n    },\n    getBalloonColor: function (a, b, c) {\n      var e = a.lineColor,\n          d = a.balloonColor;\n      c && (d = e);\n      c = a.fillColorsR;\n      \"object\" == typeof c ? e = c[0] : void 0 !== c && (e = c);\n      b.isNegative && (c = a.negativeLineColor, a = a.negativeFillColors, \"object\" == typeof a ? c = a[0] : void 0 !== a && (c = a), void 0 !== c && (e = c));\n      void 0 !== b.color && (e = b.color);\n      void 0 === d && (d = e);\n      return d;\n    },\n    getGraphById: function (a) {\n      return d.getObjById(this.graphs, a);\n    },\n    getValueAxisById: function (a) {\n      return d.getObjById(this.valueAxes, a);\n    },\n    processFields: function (a, b, c) {\n      if (a.itemColors) {\n        var e = a.itemColors,\n            h = b.index;\n        b.color = h < e.length ? e[h] : d.randomColor();\n      }\n\n      e = \"lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern gap className\".split(\" \");\n\n      for (h = 0; h < e.length; h++) {\n        var f = e[h],\n            g = a[f + \"Field\"];\n        g && (g = c[g], d.isDefined(g) && (b[f] = g));\n      }\n\n      b.dataContext = c;\n    },\n    chooseGraphColor: function (a, b) {\n      if (a.lineColor) a.lineColorR = a.lineColor;else {\n        var c;\n        c = this.colors.length > b ? this.colors[b] : d.randomColor();\n        a.lineColorR = c;\n      }\n      a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR;\n      a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor;\n      a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR;\n      if (c = this.patterns) a.pattern = c[b];\n    },\n    handleLegendEvent: function (a) {\n      var b = a.type;\n      a = a.dataItem;\n\n      if (!this.legend.data && a) {\n        var c = a.hidden,\n            e = a.showBalloon;\n\n        switch (b) {\n          case \"clickMarker\":\n            this.textClickEnabled && (e ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));\n            break;\n\n          case \"clickLabel\":\n            e ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);\n            break;\n\n          case \"rollOverItem\":\n            c || this.highlightGraph(a);\n            break;\n\n          case \"rollOutItem\":\n            c || this.unhighlightGraph();\n            break;\n\n          case \"hideItem\":\n            this.hideGraph(a);\n            break;\n\n          case \"showItem\":\n            this.showGraph(a);\n        }\n      }\n    },\n    highlightGraph: function (a) {\n      var b = this.graphs,\n          c,\n          e = .2;\n      this.legend && (e = this.legend.rollOverGraphAlpha);\n      if (1 != e) for (c = 0; c < b.length; c++) {\n        var d = b[c];\n        d != a && d.changeOpacity(e);\n      }\n    },\n    unhighlightGraph: function () {\n      var a;\n      this.legend && (a = this.legend.rollOverGraphAlpha);\n\n      if (1 != a) {\n        a = this.graphs;\n        var b;\n\n        for (b = 0; b < a.length; b++) a[b].changeOpacity(1);\n      }\n    },\n    showGraph: function (a) {\n      a.switchable && (a.hidden = !1, this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), this.chartCreated && this.initChart());\n    },\n    hideGraph: function (a) {\n      a.switchable && (this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), a.hidden = !0, this.chartCreated && this.initChart());\n    },\n    hideGraphsBalloon: function (a) {\n      a.showBalloon = !1;\n      this.updateLegend();\n    },\n    showGraphsBalloon: function (a) {\n      a.showBalloon = !0;\n      this.updateLegend();\n    },\n    updateLegend: function () {\n      this.legend && this.legend.invalidateSize();\n    },\n    resetAnimation: function () {\n      var a = this.graphs;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) a[b].animationPlayed = !1;\n      }\n    },\n    animateAgain: function () {\n      this.resetAnimation();\n      this.validateNow();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmSlicedChart = d.Class({\n    inherits: d.AmChart,\n    construct: function (a) {\n      this.createEvents(\"rollOverSlice\", \"rollOutSlice\", \"clickSlice\", \"pullOutSlice\", \"pullInSlice\", \"rightClickSlice\");\n      d.AmSlicedChart.base.construct.call(this, a);\n      this.colors = \"#FF0F00 #FF6600 #FF9E01 #FCD202 #F8FF01 #B0DE09 #04D215 #0D8ECF #0D52D1 #2A0CD0 #8A0CCF #CD0D74 #754DEB #DDDDDD #999999 #333333 #000000 #57032A #CA9726 #990000 #4B0C25\".split(\" \");\n      this.alpha = 1;\n      this.groupPercent = 0;\n      this.groupedTitle = \"Other\";\n      this.groupedPulled = !1;\n      this.groupedAlpha = 1;\n      this.marginLeft = 0;\n      this.marginBottom = this.marginTop = 10;\n      this.marginRight = 0;\n      this.hoverAlpha = 1;\n      this.outlineColor = \"#FFFFFF\";\n      this.outlineAlpha = 0;\n      this.outlineThickness = 1;\n      this.startAlpha = 0;\n      this.startDuration = 1;\n      this.startEffect = \"bounce\";\n      this.sequencedAnimation = !0;\n      this.pullOutDuration = 1;\n      this.pullOutEffect = \"bounce\";\n      this.pullOnHover = this.pullOutOnlyOne = !1;\n      this.labelsEnabled = !0;\n      this.labelTickColor = \"#000000\";\n      this.labelTickAlpha = .2;\n      this.hideLabelsPercent = 0;\n      this.urlTarget = \"_self\";\n      this.autoMarginOffset = 10;\n      this.gradientRatio = [];\n      this.maxLabelWidth = 200;\n      d.applyTheme(this, a, \"AmSlicedChart\");\n    },\n    initChart: function () {\n      d.AmSlicedChart.base.initChart.call(this);\n      this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, this.setLegendData(this.chartData));\n      this.drawChart();\n    },\n    handleLegendEvent: function (a) {\n      var b = a.type,\n          c = a.dataItem,\n          e = this.legend;\n\n      if (!e.data && c) {\n        var d = c.hidden;\n        a = a.event;\n\n        switch (b) {\n          case \"clickMarker\":\n            d || e.switchable || this.clickSlice(c, a);\n            break;\n\n          case \"clickLabel\":\n            d || this.clickSlice(c, a, !1);\n            break;\n\n          case \"rollOverItem\":\n            d || this.rollOverSlice(c, !1, a);\n            break;\n\n          case \"rollOutItem\":\n            d || this.rollOutSlice(c, a);\n            break;\n\n          case \"hideItem\":\n            this.hideSlice(c, a);\n            break;\n\n          case \"showItem\":\n            this.showSlice(c, a);\n        }\n      }\n    },\n    invalidateVisibility: function () {\n      this.recalculatePercents();\n      this.initChart();\n      var a = this.legend;\n      a && a.invalidateSize();\n    },\n    addEventListeners: function (a, b) {\n      var c = this;\n      a.mouseover(function (a) {\n        c.rollOverSlice(b, !0, a);\n      }).mouseout(function (a) {\n        c.rollOutSlice(b, a);\n      }).touchend(function (a) {\n        c.rollOverSlice(b, a);\n        c.panEventsEnabled && c.clickSlice(b, a);\n      }).touchstart(function (a) {\n        c.rollOverSlice(b, a);\n      }).click(function (a) {\n        c.clickSlice(b, a);\n      }).contextmenu(function (a) {\n        c.handleRightClick(b, a);\n      });\n    },\n    formatString: function (a, b, c) {\n      a = d.formatValue(a, b, [\"value\"], this.nf, \"\", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers);\n      var e = this.pf.precision;\n      isNaN(this.tempPrec) || (this.pf.precision = this.tempPrec);\n      a = d.formatValue(a, b, [\"percents\"], this.pf);\n      a = d.massReplace(a, {\n        \"[[title]]\": b.title,\n        \"[[description]]\": b.description\n      });\n      this.pf.precision = e;\n      -1 != a.indexOf(\"[[\") && (a = d.formatDataContextValue(a, b.dataContext));\n      a = c ? d.fixNewLines(a) : d.fixBrakes(a);\n      return a = d.cleanFromEmpty(a);\n    },\n    startSlices: function () {\n      var a;\n\n      for (a = 0; a < this.chartData.length; a++) 0 < this.startDuration && this.sequencedAnimation ? this.setStartTO(a) : this.startSlice(this.chartData[a]);\n    },\n    setStartTO: function (a) {\n      var b = this;\n      a = setTimeout(function () {\n        b.startSequenced.call(b);\n      }, b.startDuration / b.chartData.length * 500 * a);\n      b.timeOuts.push(a);\n    },\n    pullSlices: function (a) {\n      var b = this.chartData,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var e = b[c];\n        e.pulled && this.pullSlice(e, 1, a);\n      }\n    },\n    startSequenced: function () {\n      var a = this.chartData,\n          b;\n\n      for (b = 0; b < a.length; b++) if (!a[b].started) {\n        this.startSlice(this.chartData[b]);\n        break;\n      }\n    },\n    startSlice: function (a) {\n      a.started = !0;\n      var b = a.wedge,\n          c = this.startDuration;\n      b && 0 < c && (0 < a.alpha && b.show(), b.translate(a.startX, a.startY), b.animate({\n        opacity: 1,\n        translate: \"0,0\"\n      }, c, this.startEffect));\n    },\n    showLabels: function () {\n      var a = this.chartData,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b];\n\n        if (0 < c.alpha) {\n          var e = c.label;\n          e && e.show();\n          (c = c.tick) && c.show();\n        }\n      }\n    },\n    showSlice: function (a) {\n      isNaN(a) ? a.hidden = !1 : this.chartData[a].hidden = !1;\n      this.invalidateVisibility();\n    },\n    hideSlice: function (a) {\n      isNaN(a) ? a.hidden = !0 : this.chartData[a].hidden = !0;\n      this.hideBalloon();\n      this.invalidateVisibility();\n    },\n    rollOverSlice: function (a, b, c) {\n      isNaN(a) || (a = this.chartData[a]);\n      clearTimeout(this.hoverInt);\n\n      if (!a.hidden) {\n        this.pullOnHover && this.pullSlice(a, 1);\n        1 > this.hoverAlpha && a.wedge && a.wedge.attr({\n          opacity: this.hoverAlpha\n        });\n        var e = a.balloonX,\n            h = a.balloonY;\n        a.pulled && (e += a.pullX, h += a.pullY);\n        var f = this.formatString(this.balloonText, a, !0),\n            g = this.balloonFunction;\n        g && (f = g(a, f));\n        g = d.adjustLuminosity(a.color, -.15);\n        f ? this.showBalloon(f, g, b, e, h) : this.hideBalloon();\n        0 === a.value && this.hideBalloon();\n        a = {\n          type: \"rollOverSlice\",\n          dataItem: a,\n          chart: this,\n          event: c\n        };\n        this.fire(a.type, a);\n      }\n    },\n    rollOutSlice: function (a, b) {\n      isNaN(a) || (a = this.chartData[a]);\n      a.wedge && a.wedge.attr({\n        opacity: 1\n      });\n      this.hideBalloon();\n      var c = {\n        type: \"rollOutSlice\",\n        dataItem: a,\n        chart: this,\n        event: b\n      };\n      this.fire(c.type, c);\n    },\n    clickSlice: function (a, b, c) {\n      isNaN(a) || (a = this.chartData[a]);\n      a.pulled ? this.pullSlice(a, 0) : this.pullSlice(a, 1);\n      d.getURL(a.url, this.urlTarget);\n      c || (a = {\n        type: \"clickSlice\",\n        dataItem: a,\n        chart: this,\n        event: b\n      }, this.fire(a.type, a));\n    },\n    handleRightClick: function (a, b) {\n      isNaN(a) || (a = this.chartData[a]);\n      var c = {\n        type: \"rightClickSlice\",\n        dataItem: a,\n        chart: this,\n        event: b\n      };\n      this.fire(c.type, c);\n    },\n    drawTicks: function () {\n      var a = this.chartData,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b];\n\n        if (c.label) {\n          var e = c.ty,\n              e = d.line(this.container, [c.tx0, c.tx, c.tx2], [c.ty0, e, e], this.labelTickColor, this.labelTickAlpha);\n          d.setCN(this, e, this.type + \"-tick\");\n          d.setCN(this, e, c.className, !0);\n          c.tick = e;\n          c.wedge.push(e);\n        }\n      }\n    },\n    initialStart: function () {\n      var a = this,\n          b = a.startDuration,\n          c = setTimeout(function () {\n        a.showLabels.call(a);\n      }, 1E3 * b);\n      a.timeOuts.push(c);\n      a.chartCreated ? a.pullSlices(!0) : (a.startSlices(), 0 < b ? (b = setTimeout(function () {\n        a.pullSlices.call(a);\n      }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices(!0));\n    },\n    pullSlice: function (a, b, c) {\n      var e = this.pullOutDuration;\n      !0 === c && (e = 0);\n      (c = a.wedge) && (0 < e ? c.animate({\n        translate: b * a.pullX + \",\" + b * a.pullY\n      }, e, this.pullOutEffect) : c.translate(b * a.pullX, b * a.pullY));\n      1 == b ? (a.pulled = !0, this.pullOutOnlyOne && this.pullInAll(a.index), a = {\n        type: \"pullOutSlice\",\n        dataItem: a,\n        chart: this\n      }) : (a.pulled = !1, a = {\n        type: \"pullInSlice\",\n        dataItem: a,\n        chart: this\n      });\n      this.fire(a.type, a);\n    },\n    pullInAll: function (a) {\n      var b = this.chartData,\n          c;\n\n      for (c = 0; c < this.chartData.length; c++) c != a && b[c].pulled && this.pullSlice(b[c], 0);\n    },\n    pullOutAll: function () {\n      var a = this.chartData,\n          b;\n\n      for (b = 0; b < a.length; b++) a[b].pulled || this.pullSlice(a[b], 1);\n    },\n    parseData: function () {\n      var a = [];\n      this.chartData = a;\n      var b = this.dataProvider;\n      isNaN(this.pieAlpha) || (this.alpha = this.pieAlpha);\n\n      if (void 0 !== b) {\n        var c = b.length,\n            e = 0,\n            h,\n            f,\n            g;\n\n        for (h = 0; h < c; h++) {\n          f = {};\n          var k = b[h];\n          f.dataContext = k;\n          f.value = Number(k[this.valueField]);\n          (g = k[this.titleField]) || (g = \"\");\n          f.title = g;\n          f.pulled = d.toBoolean(k[this.pulledField], !1);\n          (g = k[this.descriptionField]) || (g = \"\");\n          f.description = g;\n          f.labelRadius = Number(k[this.labelRadiusField]);\n          f.switchable = !0;\n          f.className = k[this.classNameField];\n          f.url = k[this.urlField];\n          g = k[this.patternField];\n          !g && this.patterns && (g = this.patterns[h]);\n          f.pattern = g;\n          f.visibleInLegend = d.toBoolean(k[this.visibleInLegendField], !0);\n          g = k[this.alphaField];\n          f.alpha = void 0 !== g ? Number(g) : this.alpha;\n          g = k[this.colorField];\n          void 0 !== g && (f.color = d.toColor(g));\n          f.labelColor = d.toColor(k[this.labelColorField]);\n          e += f.value;\n          f.hidden = !1;\n          a[h] = f;\n        }\n\n        for (h = b = 0; h < c; h++) f = a[h], f.percents = f.value / e * 100, f.percents < this.groupPercent && b++;\n\n        1 < b && (this.groupValue = 0, this.removeSmallSlices(), a.push({\n          title: this.groupedTitle,\n          value: this.groupValue,\n          percents: this.groupValue / e * 100,\n          pulled: this.groupedPulled,\n          color: this.groupedColor,\n          url: this.groupedUrl,\n          description: this.groupedDescription,\n          alpha: this.groupedAlpha,\n          pattern: this.groupedPattern,\n          className: this.groupedClassName,\n          dataContext: {}\n        }));\n        c = this.baseColor;\n        c || (c = this.pieBaseColor);\n        e = this.brightnessStep;\n        e || (e = this.pieBrightnessStep);\n\n        for (h = 0; h < a.length; h++) c ? g = d.adjustLuminosity(c, h * e / 100) : (g = this.colors[h], void 0 === g && (g = d.randomColor())), void 0 === a[h].color && (a[h].color = g);\n\n        this.recalculatePercents();\n      }\n    },\n    recalculatePercents: function () {\n      var a = this.chartData,\n          b = 0,\n          c,\n          e;\n\n      for (c = 0; c < a.length; c++) e = a[c], !e.hidden && 0 < e.value && (b += e.value);\n\n      for (c = 0; c < a.length; c++) e = this.chartData[c], e.percents = !e.hidden && 0 < e.value ? 100 * e.value / b : 0;\n    },\n    removeSmallSlices: function () {\n      var a = this.chartData,\n          b;\n\n      for (b = a.length - 1; 0 <= b; b--) a[b].percents < this.groupPercent && (this.groupValue += a[b].value, a.splice(b, 1));\n    },\n    animateAgain: function () {\n      var a = this;\n      a.startSlices();\n\n      for (var b = 0; b < a.chartData.length; b++) {\n        var c = a.chartData[b];\n        c.started = !1;\n        var e = c.wedge;\n        e && e.translate(c.startX, c.startY);\n      }\n\n      b = a.startDuration;\n      0 < b ? (b = setTimeout(function () {\n        a.pullSlices.call(a);\n      }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices();\n    },\n    measureMaxLabel: function () {\n      var a = this.chartData,\n          b = 0,\n          c;\n\n      for (c = 0; c < a.length; c++) {\n        var e = a[c],\n            h = this.formatString(this.labelText, e),\n            f = this.labelFunction;\n        f && (h = f(e, h));\n        e = d.text(this.container, h, this.color, this.fontFamily, this.fontSize);\n        h = e.getBBox().width;\n        h > b && (b = h);\n        e.remove();\n      }\n\n      return b;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmRectangularChart = d.Class({\n    inherits: d.AmCoordinateChart,\n    construct: function (a) {\n      d.AmRectangularChart.base.construct.call(this, a);\n      this.theme = a;\n      this.createEvents(\"zoomed\");\n      this.marginRight = this.marginBottom = this.marginTop = this.marginLeft = 20;\n      this.verticalPosition = this.horizontalPosition = this.depth3D = this.angle = 0;\n      this.heightMultiplier = this.widthMultiplier = 1;\n      this.plotAreaFillColors = \"#FFFFFF\";\n      this.plotAreaFillAlphas = 0;\n      this.plotAreaBorderColor = \"#000000\";\n      this.plotAreaBorderAlpha = 0;\n      this.zoomOutButtonImageSize = 19;\n      this.zoomOutButtonImage = \"lens.png\";\n      this.zoomOutText = \"Show all\";\n      this.zoomOutButtonColor = \"#e5e5e5\";\n      this.zoomOutButtonAlpha = 0;\n      this.zoomOutButtonRollOverAlpha = 1;\n      this.zoomOutButtonPadding = 8;\n      this.trendLines = [];\n      this.autoMargins = !0;\n      this.marginsUpdated = !1;\n      this.autoMarginOffset = 10;\n      d.applyTheme(this, a, \"AmRectangularChart\");\n    },\n    initChart: function () {\n      d.AmRectangularChart.base.initChart.call(this);\n      this.updateDxy();\n      var a = !0;\n      !this.marginsUpdated && this.autoMargins && (this.resetMargins(), a = !1);\n      this.processScrollbars();\n      this.updateMargins();\n      this.updatePlotArea();\n      this.updateScrollbars();\n      this.updateTrendLines();\n      this.updateChartCursor();\n      this.updateValueAxes();\n      a && (this.scrollbarOnly || this.updateGraphs());\n    },\n    drawChart: function () {\n      d.AmRectangularChart.base.drawChart.call(this);\n      this.drawPlotArea();\n\n      if (d.ifArray(this.chartData)) {\n        var a = this.chartCursor;\n        a && a.draw();\n        a = this.zoomOutText;\n        \"\" !== a && a && this.drawZoomOutButton();\n      }\n    },\n    resetMargins: function () {\n      var a = {},\n          b;\n\n      if (\"xy\" == this.type) {\n        var c = this.xAxes,\n            e = this.yAxes;\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n          d.ignoreAxisWidth || (d.setOrientation(!0), d.fixAxisPosition(), a[d.position] = !0);\n        }\n\n        for (b = 0; b < e.length; b++) c = e[b], c.ignoreAxisWidth || (c.setOrientation(!1), c.fixAxisPosition(), a[c.position] = !0);\n      } else {\n        e = this.valueAxes;\n\n        for (b = 0; b < e.length; b++) c = e[b], c.ignoreAxisWidth || (c.setOrientation(this.rotate), c.fixAxisPosition(), a[c.position] = !0);\n\n        (b = this.categoryAxis) && !b.ignoreAxisWidth && (b.setOrientation(!this.rotate), b.fixAxisPosition(), b.fixAxisPosition(), a[b.position] = !0);\n      }\n\n      a.left && (this.marginLeft = 0);\n      a.right && (this.marginRight = 0);\n      a.top && (this.marginTop = 0);\n      a.bottom && (this.marginBottom = 0);\n      this.fixMargins = a;\n    },\n    measureMargins: function () {\n      var a = this.valueAxes,\n          b,\n          c = this.autoMarginOffset,\n          e = this.fixMargins,\n          d = this.realWidth,\n          f = this.realHeight,\n          g = c,\n          k = c,\n          l = d;\n      b = f;\n      var m;\n\n      for (m = 0; m < a.length; m++) b = this.getAxisBounds(a[m], g, l, k, b), g = Math.round(b.l), l = Math.round(b.r), k = Math.round(b.t), b = Math.round(b.b);\n\n      if (a = this.categoryAxis) b = this.getAxisBounds(a, g, l, k, b), g = Math.round(b.l), l = Math.round(b.r), k = Math.round(b.t), b = Math.round(b.b);\n      e.left && g < c && (this.marginLeft = Math.round(-g + c));\n      e.right && l >= d - c && (this.marginRight = Math.round(l - d + c));\n      e.top && k < c + this.titleHeight && (this.marginTop = Math.round(this.marginTop - k + c + this.titleHeight));\n      e.bottom && b > f - c && (this.marginBottom = Math.round(this.marginBottom + b - f + c));\n      this.initChart();\n    },\n    getAxisBounds: function (a, b, c, e, d) {\n      if (!a.ignoreAxisWidth) {\n        var f = a.labelsSet,\n            g = a.tickLength;\n        a.inside && (g = 0);\n        if (f) switch (f = a.getBBox(), a.position) {\n          case \"top\":\n            a = f.y;\n            e > a && (e = a);\n            break;\n\n          case \"bottom\":\n            a = f.y + f.height;\n            d < a && (d = a);\n            break;\n\n          case \"right\":\n            a = f.x + f.width + g + 3;\n            c < a && (c = a);\n            break;\n\n          case \"left\":\n            a = f.x - g, b > a && (b = a);\n        }\n      }\n\n      return {\n        l: b,\n        t: e,\n        r: c,\n        b: d\n      };\n    },\n    drawZoomOutButton: function () {\n      var a = this,\n          b = a.container.set();\n      a.zoomButtonSet.push(b);\n      var c = a.color,\n          e = a.fontSize,\n          h = a.zoomOutButtonImageSize,\n          f = a.zoomOutButtonImage,\n          g = d.lang.zoomOutText || a.zoomOutText,\n          k = a.zoomOutButtonColor,\n          l = a.zoomOutButtonAlpha,\n          m = a.zoomOutButtonFontSize,\n          n = a.zoomOutButtonPadding;\n      isNaN(m) || (e = m);\n      (m = a.zoomOutButtonFontColor) && (c = m);\n      var m = a.zoomOutButton,\n          q;\n      m && (m.fontSize && (e = m.fontSize), m.color && (c = m.color), m.backgroundColor && (k = m.backgroundColor), isNaN(m.backgroundAlpha) || (a.zoomOutButtonRollOverAlpha = m.backgroundAlpha));\n      var p = m = 0;\n      void 0 !== a.pathToImages && f && (q = a.container.image(a.pathToImages + f, 0, 0, h, h), d.setCN(a, q, \"zoom-out-image\"), b.push(q), q = q.getBBox(), m = q.width + 5);\n      void 0 !== g && (c = d.text(a.container, g, c, a.fontFamily, e, \"start\"), d.setCN(a, c, \"zoom-out-label\"), e = c.getBBox(), p = q ? q.height / 2 - 3 : e.height / 2, c.translate(m, p), b.push(c));\n      q = b.getBBox();\n      c = 1;\n      d.isModern || (c = 0);\n      k = d.rect(a.container, q.width + 2 * n + 5, q.height + 2 * n - 2, k, 1, 1, k, c);\n      k.setAttr(\"opacity\", l);\n      k.translate(-n, -n);\n      d.setCN(a, k, \"zoom-out-bg\");\n      b.push(k);\n      k.toBack();\n      a.zbBG = k;\n      q = k.getBBox();\n      b.translate(a.marginLeftReal + a.plotAreaWidth - q.width + n, a.marginTopReal + n);\n      b.hide();\n      b.mouseover(function () {\n        a.rollOverZB();\n      }).mouseout(function () {\n        a.rollOutZB();\n      }).click(function () {\n        a.clickZB();\n      }).touchstart(function () {\n        a.rollOverZB();\n      }).touchend(function () {\n        a.rollOutZB();\n        a.clickZB();\n      });\n\n      for (l = 0; l < b.length; l++) b[l].attr({\n        cursor: \"pointer\"\n      });\n\n      a.zbSet = b;\n    },\n    rollOverZB: function () {\n      this.zbBG.setAttr(\"opacity\", this.zoomOutButtonRollOverAlpha);\n    },\n    rollOutZB: function () {\n      this.zbBG.setAttr(\"opacity\", this.zoomOutButtonAlpha);\n    },\n    clickZB: function () {\n      this.zoomOut();\n    },\n    zoomOut: function () {\n      this.updateScrollbar = !0;\n      this.zoom();\n    },\n    drawPlotArea: function () {\n      var a = this.dx,\n          b = this.dy,\n          c = this.marginLeftReal,\n          e = this.marginTopReal,\n          h = this.plotAreaWidth - 1,\n          f = this.plotAreaHeight - 1,\n          g = this.plotAreaFillColors,\n          k = this.plotAreaFillAlphas,\n          l = this.plotAreaBorderColor,\n          m = this.plotAreaBorderAlpha;\n      this.trendLinesSet.clipRect(c, e, h, f);\n      \"object\" == typeof k && (k = k[0]);\n      g = d.polygon(this.container, [0, h, h, 0, 0], [0, 0, f, f, 0], g, k, 1, l, m, this.plotAreaGradientAngle);\n      d.setCN(this, g, \"plot-area\");\n      g.translate(c + a, e + b);\n      this.set.push(g);\n      0 !== a && 0 !== b && (g = this.plotAreaFillColors, \"object\" == typeof g && (g = g[0]), g = d.adjustLuminosity(g, -.15), h = d.polygon(this.container, [0, a, h + a, h, 0], [0, b, b, 0, 0], g, k, 1, l, m), d.setCN(this, h, \"plot-area-bottom\"), h.translate(c, e + f), this.set.push(h), a = d.polygon(this.container, [0, 0, a, a, 0], [0, f, f + b, b, 0], g, k, 1, l, m), d.setCN(this, a, \"plot-area-left\"), a.translate(c, e), this.set.push(a));\n      (c = this.bbset) && this.scrollbarOnly && c.remove();\n    },\n    updatePlotArea: function () {\n      var a = this.updateWidth(),\n          b = this.updateHeight(),\n          c = this.container;\n      this.realWidth = a;\n      this.realWidth = b;\n      c && this.container.setSize(a, b);\n      a = a - this.marginLeftReal - this.marginRightReal - this.dx;\n      b = b - this.marginTopReal - this.marginBottomReal;\n      1 > a && (a = 1);\n      1 > b && (b = 1);\n      this.plotAreaWidth = Math.round(a);\n      this.plotAreaHeight = Math.round(b);\n    },\n    updateDxy: function () {\n      this.dx = Math.round(this.depth3D * Math.cos(this.angle * Math.PI / 180));\n      this.dy = Math.round(-this.depth3D * Math.sin(this.angle * Math.PI / 180));\n      this.d3x = Math.round(this.columnSpacing3D * Math.cos(this.angle * Math.PI / 180));\n      this.d3y = Math.round(-this.columnSpacing3D * Math.sin(this.angle * Math.PI / 180));\n    },\n    updateMargins: function () {\n      var a = this.getTitleHeight();\n      this.titleHeight = a;\n      this.marginTopReal = this.marginTop - this.dy;\n      this.fixMargins && !this.fixMargins.top && (this.marginTopReal += a);\n      this.marginBottomReal = this.marginBottom;\n      this.marginLeftReal = this.marginLeft;\n      this.marginRightReal = this.marginRight;\n    },\n    updateValueAxes: function () {\n      var a = this.valueAxes,\n          b = this.marginLeftReal,\n          c = this.marginTopReal,\n          e = this.plotAreaHeight,\n          h = this.plotAreaWidth,\n          f;\n\n      for (f = 0; f < a.length; f++) {\n        var g = a[f];\n        g.axisRenderer = d.RecAxis;\n        g.guideFillRenderer = d.RecFill;\n        g.axisItemRenderer = d.RecItem;\n        g.dx = this.dx;\n        g.dy = this.dy;\n        g.viW = h - 1;\n        g.viH = e - 1;\n        g.marginsChanged = !0;\n        g.viX = b;\n        g.viY = c;\n        this.updateObjectSize(g);\n      }\n    },\n    updateObjectSize: function (a) {\n      a.width = (this.plotAreaWidth - 1) * this.widthMultiplier;\n      a.height = (this.plotAreaHeight - 1) * this.heightMultiplier;\n      a.x = this.marginLeftReal + this.horizontalPosition;\n      a.y = this.marginTopReal + this.verticalPosition;\n    },\n    updateGraphs: function () {\n      var a = this.graphs,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b];\n        c.x = this.marginLeftReal + this.horizontalPosition;\n        c.y = this.marginTopReal + this.verticalPosition;\n        c.width = this.plotAreaWidth * this.widthMultiplier;\n        c.height = this.plotAreaHeight * this.heightMultiplier;\n        c.index = b;\n        c.dx = this.dx;\n        c.dy = this.dy;\n        c.rotate = this.rotate;\n      }\n    },\n    updateChartCursor: function () {\n      var a = this.chartCursor;\n      a && (a = d.processObject(a, d.ChartCursor, this.theme), this.addChartCursor(a), a.x = this.marginLeftReal, a.y = this.marginTopReal, a.width = this.plotAreaWidth - 1, a.height = this.plotAreaHeight - 1, a.chart = this);\n    },\n    processScrollbars: function () {\n      var a = this.chartScrollbar;\n      a && (a = d.processObject(a, d.ChartScrollbar, this.theme), this.addChartScrollbar(a));\n    },\n    updateScrollbars: function () {},\n    addChartCursor: function (a) {\n      d.callMethod(\"destroy\", [this.chartCursor]);\n      a && (this.listenTo(a, \"changed\", this.handleCursorChange), this.listenTo(a, \"zoomed\", this.handleCursorZoom));\n      this.chartCursor = a;\n    },\n    removeChartCursor: function () {\n      d.callMethod(\"destroy\", [this.chartCursor]);\n      this.chartCursor = null;\n    },\n    zoomTrendLines: function () {\n      var a = this.trendLines,\n          b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b];\n        c.valueAxis.recalculateToPercents ? c.set && c.set.hide() : (c.x = this.marginLeftReal + this.horizontalPosition, c.y = this.marginTopReal + this.verticalPosition, c.draw());\n      }\n    },\n    addTrendLine: function (a) {\n      this.trendLines.push(a);\n    },\n    removeTrendLine: function (a) {\n      var b = this.trendLines,\n          c;\n\n      for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n    },\n    adjustMargins: function (a, b) {\n      var c = a.position,\n          e = a.scrollbarHeight + a.offset;\n      a.enabled && (\"top\" == c ? b ? this.marginLeftReal += e : this.marginTopReal += e : b ? this.marginRightReal += e : this.marginBottomReal += e);\n    },\n    getScrollbarPosition: function (a, b, c) {\n      a.position = b ? \"bottom\" == c || \"left\" == c ? \"bottom\" : \"top\" : \"top\" == c || \"right\" == c ? \"bottom\" : \"top\";\n    },\n    updateChartScrollbar: function (a, b) {\n      if (a) {\n        a.rotate = b;\n        var c = this.marginTopReal,\n            e = this.marginLeftReal,\n            d = a.scrollbarHeight,\n            f = this.dx,\n            g = this.dy,\n            k = a.offset;\n        \"top\" == a.position ? b ? (a.y = c, a.x = e - d - k) : (a.y = c - d + g - k, a.x = e + f) : b ? (a.y = c + g, a.x = e + this.plotAreaWidth + f + k) : (a.y = c + this.plotAreaHeight + k, a.x = this.marginLeftReal);\n      }\n    },\n    showZB: function (a) {\n      var b = this.zbSet;\n      b && (a ? b.show() : b.hide(), this.rollOutZB());\n    },\n    handleReleaseOutside: function (a) {\n      d.AmRectangularChart.base.handleReleaseOutside.call(this, a);\n      (a = this.chartCursor) && a.handleReleaseOutside && a.handleReleaseOutside();\n    },\n    handleMouseDown: function (a) {\n      d.AmRectangularChart.base.handleMouseDown.call(this, a);\n      var b = this.chartCursor;\n      b && b.handleMouseDown(a);\n    },\n    handleCursorChange: function () {},\n    update: function () {\n      d.AmRectangularChart.base.update.call(this);\n      this.chartCursor && this.chartCursor.update && this.chartCursor.update();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.TrendLine = d.Class({\n    construct: function (a) {\n      this.cname = \"TrendLine\";\n      this.createEvents(\"click\");\n      this.isProtected = !1;\n      this.dashLength = 0;\n      this.lineColor = \"#00CC00\";\n      this.lineThickness = this.lineAlpha = 1;\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      var a = this;\n      a.destroy();\n      var b = a.chart,\n          c = b.container,\n          e,\n          h,\n          f,\n          g,\n          k = a.categoryAxis,\n          l = a.initialDate,\n          m = a.initialCategory,\n          n = a.finalDate,\n          q = a.finalCategory,\n          p = a.valueAxis,\n          t = a.valueAxisX,\n          r = a.initialXValue,\n          u = a.finalXValue,\n          z = a.initialValue,\n          y = a.finalValue,\n          v = p.recalculateToPercents,\n          w = b.dataDateFormat;\n      k && (l && (l = d.getDate(l, w, \"fff\"), a.initialDate = l, e = k.dateToCoordinate(l)), m && (e = k.categoryToCoordinate(m)), n && (n = d.getDate(n, w, \"fff\"), a.finalDate = n, h = k.dateToCoordinate(n)), q && (h = k.categoryToCoordinate(q)));\n      t && !v && (isNaN(r) || (e = t.getCoordinate(r)), isNaN(u) || (h = t.getCoordinate(u)));\n      p && !v && (isNaN(z) || (f = p.getCoordinate(z)), isNaN(y) || (g = p.getCoordinate(y)));\n      isNaN(e) || isNaN(h) || isNaN(f) || isNaN(f) || (b.rotate ? (k = [f, g], h = [e, h]) : (k = [e, h], h = [f, g]), f = a.lineColor, e = d.line(c, k, h, f, a.lineAlpha, a.lineThickness, a.dashLength), g = k, l = h, q = k[1] - k[0], p = h[1] - h[0], 0 === q && (q = .01), 0 === p && (p = .01), m = q / Math.abs(q), n = p / Math.abs(p), p = q * p / Math.abs(q * p) * Math.sqrt(Math.pow(q, 2) + Math.pow(p, 2)), q = Math.asin(q / p), p = 90 * Math.PI / 180 - q, q = Math.abs(5 * Math.cos(p)), p = Math.abs(5 * Math.sin(p)), g.push(k[1] - m * p, k[0] - m * p), l.push(h[1] + n * q, h[0] + n * q), k = d.polygon(c, g, l, f, .005, 0), c = c.set([k, e]), c.translate(b.marginLeftReal, b.marginTopReal), b.trendLinesSet.push(c), d.setCN(b, e, \"trend-line\"), d.setCN(b, e, \"trend-line-\" + a.id), a.line = e, a.set = c, k.mouseup(function () {\n        a.handleLineClick();\n      }).mouseover(function () {\n        a.handleLineOver();\n      }).mouseout(function () {\n        a.handleLineOut();\n      }), k.touchend && k.touchend(function () {\n        a.handleLineClick();\n      }));\n    },\n    handleLineClick: function () {\n      var a = {\n        type: \"click\",\n        trendLine: this,\n        chart: this.chart\n      };\n      this.fire(a.type, a);\n    },\n    handleLineOver: function () {\n      var a = this.rollOverColor;\n      void 0 !== a && this.line.attr({\n        stroke: a\n      });\n    },\n    handleLineOut: function () {\n      this.line.attr({\n        stroke: this.lineColor\n      });\n    },\n    destroy: function () {\n      d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.circle = function (a, b, c, e, h, f, g, k, l) {\n    0 >= b && (b = .001);\n    if (void 0 == h || 0 === h) h = .01;\n    void 0 === f && (f = \"#000000\");\n    void 0 === g && (g = 0);\n    e = {\n      fill: c,\n      stroke: f,\n      \"fill-opacity\": e,\n      \"stroke-width\": h,\n      \"stroke-opacity\": g\n    };\n    a = isNaN(l) ? a.circle(0, 0, b).attr(e) : a.ellipse(0, 0, b, l).attr(e);\n    k && a.gradient(\"radialGradient\", [c, d.adjustLuminosity(c, -.6)]);\n    return a;\n  };\n\n  d.text = function (a, b, c, e, h, f, g, k) {\n    f || (f = \"middle\");\n    \"right\" == f && (f = \"end\");\n    \"left\" == f && (f = \"start\");\n    isNaN(k) && (k = 1);\n    void 0 !== b && (b = String(b), d.isIE && !d.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));\n    c = {\n      fill: c,\n      \"font-family\": e,\n      \"font-size\": h,\n      opacity: k\n    };\n    !0 === g && (c[\"font-weight\"] = \"bold\");\n    c[\"text-anchor\"] = f;\n    return a.text(b, c);\n  };\n\n  d.polygon = function (a, b, c, e, h, f, g, k, l, m, n) {\n    isNaN(f) && (f = .01);\n    isNaN(k) && (k = h);\n    var q = e,\n        p = !1;\n    \"object\" == typeof q && 1 < q.length && (p = !0, q = q[0]);\n    void 0 === g && (g = q);\n    h = {\n      fill: q,\n      stroke: g,\n      \"fill-opacity\": h,\n      \"stroke-width\": f,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (h[\"stroke-dasharray\"] = n);\n    n = d.dx;\n    f = d.dy;\n    a.handDrawn && (c = d.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);\n    g = Math.round;\n    m && (g = d.doNothing);\n    m = \"M\" + (g(b[0]) + n) + \",\" + (g(c[0]) + f);\n\n    for (k = 1; k < b.length; k++) m += \" L\" + (g(b[k]) + n) + \",\" + (g(c[k]) + f);\n\n    a = a.path(m + \" Z\").attr(h);\n    p && a.gradient(\"linearGradient\", e, l);\n    return a;\n  };\n\n  d.rect = function (a, b, c, e, h, f, g, k, l, m, n) {\n    if (isNaN(b) || isNaN(c)) return a.set();\n    isNaN(f) && (f = 0);\n    void 0 === l && (l = 0);\n    void 0 === m && (m = 270);\n    isNaN(h) && (h = 0);\n    var q = e,\n        p = !1;\n    \"object\" == typeof q && (q = q[0], p = !0);\n    void 0 === g && (g = q);\n    void 0 === k && (k = h);\n    b = Math.round(b);\n    c = Math.round(c);\n    var t = 0,\n        r = 0;\n    0 > b && (b = Math.abs(b), t = -b);\n    0 > c && (c = Math.abs(c), r = -c);\n    t += d.dx;\n    r += d.dy;\n    h = {\n      fill: q,\n      stroke: g,\n      \"fill-opacity\": h,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (h[\"stroke-dasharray\"] = n);\n    a = a.rect(t, r, b, c, l, f).attr(h);\n    p && a.gradient(\"linearGradient\", e, m);\n    return a;\n  };\n\n  d.bullet = function (a, b, c, e, h, f, g, k, l, m, n) {\n    var q;\n    \"circle\" == b && (b = \"round\");\n\n    switch (b) {\n      case \"round\":\n        q = d.circle(a, c / 2, e, h, f, g, k);\n        break;\n\n      case \"square\":\n        q = d.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180);\n        break;\n\n      case \"rectangle\":\n        q = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180);\n        break;\n\n      case \"diamond\":\n        q = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], e, h, f, g, k);\n        break;\n\n      case \"triangleUp\":\n        q = d.triangle(a, c, 0, e, h, f, g, k);\n        break;\n\n      case \"triangleDown\":\n        q = d.triangle(a, c, 180, e, h, f, g, k);\n        break;\n\n      case \"triangleLeft\":\n        q = d.triangle(a, c, 270, e, h, f, g, k);\n        break;\n\n      case \"triangleRight\":\n        q = d.triangle(a, c, 90, e, h, f, g, k);\n        break;\n\n      case \"bubble\":\n        q = d.circle(a, c / 2, e, h, f, g, k, !0);\n        break;\n\n      case \"line\":\n        q = d.line(a, [-c / 2, c / 2], [0, 0], e, h, f, g, k);\n        break;\n\n      case \"yError\":\n        q = a.set();\n        q.push(d.line(a, [0, 0], [-c / 2, c / 2], e, h, f));\n        q.push(d.line(a, [-l, l], [-c / 2, -c / 2], e, h, f));\n        q.push(d.line(a, [-l, l], [c / 2, c / 2], e, h, f));\n        break;\n\n      case \"xError\":\n        q = a.set(), q.push(d.line(a, [-c / 2, c / 2], [0, 0], e, h, f)), q.push(d.line(a, [-c / 2, -c / 2], [-l, l], e, h, f)), q.push(d.line(a, [c / 2, c / 2], [-l, l], e, h, f));\n    }\n\n    q && q.pattern(n);\n    return q;\n  };\n\n  d.triangle = function (a, b, c, e, d, f, g, k) {\n    if (void 0 === f || 0 === f) f = 1;\n    void 0 === g && (g = \"#000\");\n    void 0 === k && (k = 0);\n    e = {\n      fill: e,\n      stroke: g,\n      \"fill-opacity\": d,\n      \"stroke-width\": f,\n      \"stroke-opacity\": k\n    };\n    b /= 2;\n    var l;\n    0 === c && (l = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");\n    180 == c && (l = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    90 == c && (l = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");\n    270 == c && (l = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    return a.path(l).attr(e);\n  };\n\n  d.line = function (a, b, c, e, h, f, g, k, l, m, n) {\n    if (a.handDrawn && !n) return d.handDrawnLine(a, b, c, e, h, f, g, k, l, m, n);\n    f = {\n      fill: \"none\",\n      \"stroke-width\": f\n    };\n    void 0 !== g && 0 < g && (f[\"stroke-dasharray\"] = g);\n    isNaN(h) || (f[\"stroke-opacity\"] = h);\n    e && (f.stroke = e);\n    e = Math.round;\n    m && (e = d.doNothing);\n    m = d.dx;\n    h = d.dy;\n    g = \"M\" + (e(b[0]) + m) + \",\" + (e(c[0]) + h);\n\n    for (k = 1; k < b.length; k++) g += \" L\" + (e(b[k]) + m) + \",\" + (e(c[k]) + h);\n\n    if (d.VML) return a.path(g, void 0, !0).attr(f);\n    l && (g += \" M0,0 L0,0\");\n    return a.path(g).attr(f);\n  };\n\n  d.makeHD = function (a, b, c) {\n    for (var e = [], d = [], f = 1; f < a.length; f++) for (var g = Number(a[f - 1]), k = Number(b[f - 1]), l = Number(a[f]), m = Number(b[f]), n = Math.sqrt(Math.pow(l - g, 2) + Math.pow(m - k, 2)), n = Math.round(n / 50) + 1, l = (l - g) / n, m = (m - k) / n, q = 0; q <= n; q++) {\n      var p = g + q * l + Math.random() * c,\n          t = k + q * m + Math.random() * c;\n      e.push(p);\n      d.push(t);\n    }\n\n    return [e, d];\n  };\n\n  d.handDrawnLine = function (a, b, c, e, h, f, g, k, l, m) {\n    var n,\n        q = a.set();\n\n    for (n = 1; n < b.length; n++) for (var p = [b[n - 1], b[n]], t = [c[n - 1], c[n]], t = d.makeHD(p, t, a.handDrawScatter), p = t[0], t = t[1], r = 1; r < p.length; r++) q.push(d.line(a, [p[r - 1], p[r]], [t[r - 1], t[r]], e, h, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, k, l, m, !0));\n\n    return q;\n  };\n\n  d.doNothing = function (a) {\n    return a;\n  };\n\n  d.wedge = function (a, b, c, e, h, f, g, k, l, m, n, q) {\n    var p = Math.round;\n    f = p(f);\n    g = p(g);\n    k = p(k);\n    var t = p(g / f * k),\n        r = d.VML,\n        u = 359.5 + f / 100;\n    359.94 < u && (u = 359.94);\n    h >= u && (h = u);\n    var z = 1 / 180 * Math.PI,\n        u = b + Math.sin(e * z) * k,\n        y = c - Math.cos(e * z) * t,\n        v = b + Math.sin(e * z) * f,\n        w = c - Math.cos(e * z) * g,\n        A = b + Math.sin((e + h) * z) * f,\n        B = c - Math.cos((e + h) * z) * g,\n        D = b + Math.sin((e + h) * z) * k,\n        z = c - Math.cos((e + h) * z) * t,\n        C = {\n      fill: d.adjustLuminosity(m.fill, -.2),\n      \"stroke-opacity\": 0,\n      \"fill-opacity\": m[\"fill-opacity\"]\n    },\n        J = 0;\n    180 < Math.abs(h) && (J = 1);\n    e = a.set();\n    var H;\n    r && (u = p(10 * u), v = p(10 * v), A = p(10 * A), D = p(10 * D), y = p(10 * y), w = p(10 * w), B = p(10 * B), z = p(10 * z), b = p(10 * b), l = p(10 * l), c = p(10 * c), f *= 10, g *= 10, k *= 10, t *= 10, 1 > Math.abs(h) && 1 >= Math.abs(A - v) && 1 >= Math.abs(B - w) && (H = !0));\n    h = \"\";\n    var I;\n    q && (C[\"fill-opacity\"] = 0, C[\"stroke-opacity\"] = m[\"stroke-opacity\"] / 2, C.stroke = m.stroke);\n    0 < l && (I = \" M\" + u + \",\" + (y + l) + \" L\" + v + \",\" + (w + l), r ? (H || (I += \" A\" + (b - f) + \",\" + (l + c - g) + \",\" + (b + f) + \",\" + (l + c + g) + \",\" + v + \",\" + (w + l) + \",\" + A + \",\" + (B + l)), I += \" L\" + D + \",\" + (z + l), 0 < k && (H || (I += \" B\" + (b - k) + \",\" + (l + c - t) + \",\" + (b + k) + \",\" + (l + c + t) + \",\" + D + \",\" + (l + z) + \",\" + u + \",\" + (l + y)))) : (I += \" A\" + f + \",\" + g + \",0,\" + J + \",1,\" + A + \",\" + (B + l) + \" L\" + D + \",\" + (z + l), 0 < k && (I += \" A\" + k + \",\" + t + \",0,\" + J + \",0,\" + u + \",\" + (y + l))), I = a.path(I + \" Z\", void 0, void 0, \"1000,1000\").attr(C), e.push(I), I = a.path(\" M\" + u + \",\" + y + \" L\" + u + \",\" + (y + l) + \" L\" + v + \",\" + (w + l) + \" L\" + v + \",\" + w + \" L\" + u + \",\" + y + \" Z\", void 0, void 0, \"1000,1000\").attr(C), l = a.path(\" M\" + A + \",\" + B + \" L\" + A + \",\" + (B + l) + \" L\" + D + \",\" + (z + l) + \" L\" + D + \",\" + z + \" L\" + A + \",\" + B + \" Z\", void 0, void 0, \"1000,1000\").attr(C), e.push(I), e.push(l));\n    r ? (H || (h = \" A\" + p(b - f) + \",\" + p(c - g) + \",\" + p(b + f) + \",\" + p(c + g) + \",\" + p(v) + \",\" + p(w) + \",\" + p(A) + \",\" + p(B)), f = \" M\" + p(u) + \",\" + p(y) + \" L\" + p(v) + \",\" + p(w) + h + \" L\" + p(D) + \",\" + p(z)) : f = \" M\" + u + \",\" + y + \" L\" + v + \",\" + w + (\" A\" + f + \",\" + g + \",0,\" + J + \",1,\" + A + \",\" + B) + \" L\" + D + \",\" + z;\n    0 < k && (r ? H || (f += \" B\" + (b - k) + \",\" + (c - t) + \",\" + (b + k) + \",\" + (c + t) + \",\" + D + \",\" + z + \",\" + u + \",\" + y) : f += \" A\" + k + \",\" + t + \",0,\" + J + \",0,\" + u + \",\" + y);\n    a.handDrawn && (b = d.line(a, [u, v], [y, w], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m[\"stroke-opacity\"]), e.push(b));\n    a = a.path(f + \" Z\", void 0, void 0, \"1000,1000\").attr(m);\n\n    if (n) {\n      b = [];\n\n      for (c = 0; c < n.length; c++) b.push(d.adjustLuminosity(m.fill, n[c]));\n\n      0 < b.length && a.gradient(\"linearGradient\", b);\n    }\n\n    a.pattern(q);\n    e.wedge = a;\n    e.push(a);\n    return e;\n  };\n\n  d.adjustLuminosity = function (a, b) {\n    a = String(a).replace(/[^0-9a-f]/gi, \"\");\n    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\n    b = b || 0;\n    var c = \"#\",\n        e,\n        d;\n\n    for (d = 0; 3 > d; d++) e = parseInt(a.substr(2 * d, 2), 16), e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += (\"00\" + e).substr(e.length);\n\n    return c;\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.Bezier = d.Class({\n    construct: function (a, b, c, e, h, f, g, k, l, m) {\n      \"object\" == typeof g && (g = g[0]);\n      \"object\" == typeof k && (k = k[0]);\n      0 === k && (g = \"none\");\n      f = {\n        fill: g,\n        \"fill-opacity\": k,\n        \"stroke-width\": f\n      };\n      void 0 !== l && 0 < l && (f[\"stroke-dasharray\"] = l);\n      isNaN(h) || (f[\"stroke-opacity\"] = h);\n      e && (f.stroke = e);\n      e = \"M\" + Math.round(b[0]) + \",\" + Math.round(c[0]);\n      h = [];\n\n      for (l = 0; l < b.length; l++) h.push({\n        x: Number(b[l]),\n        y: Number(c[l])\n      });\n\n      1 < h.length && (b = this.interpolate(h), e += this.drawBeziers(b));\n      m ? e += m : d.VML || (e += \"M0,0 L0,0\");\n      this.path = a.path(e).attr(f);\n      this.node = this.path.node;\n    },\n    interpolate: function (a) {\n      var b = [];\n      b.push({\n        x: a[0].x,\n        y: a[0].y\n      });\n      var c = a[1].x - a[0].x,\n          e = a[1].y - a[0].y,\n          h = d.bezierX,\n          f = d.bezierY;\n      b.push({\n        x: a[0].x + c / h,\n        y: a[0].y + e / f\n      });\n      var g;\n\n      for (g = 1; g < a.length - 1; g++) {\n        var k = a[g - 1],\n            l = a[g],\n            e = a[g + 1];\n        isNaN(e.x) && (e = l);\n        isNaN(l.x) && (l = k);\n        isNaN(k.x) && (k = l);\n        c = e.x - l.x;\n        e = e.y - k.y;\n        k = l.x - k.x;\n        k > c && (k = c);\n        b.push({\n          x: l.x - k / h,\n          y: l.y - e / f\n        });\n        b.push({\n          x: l.x,\n          y: l.y\n        });\n        b.push({\n          x: l.x + k / h,\n          y: l.y + e / f\n        });\n      }\n\n      e = a[a.length - 1].y - a[a.length - 2].y;\n      c = a[a.length - 1].x - a[a.length - 2].x;\n      b.push({\n        x: a[a.length - 1].x - c / h,\n        y: a[a.length - 1].y - e / f\n      });\n      b.push({\n        x: a[a.length - 1].x,\n        y: a[a.length - 1].y\n      });\n      return b;\n    },\n    drawBeziers: function (a) {\n      var b = \"\",\n          c;\n\n      for (c = 0; c < (a.length - 1) / 3; c++) b += this.drawBezierMidpoint(a[3 * c], a[3 * c + 1], a[3 * c + 2], a[3 * c + 3]);\n\n      return b;\n    },\n    drawBezierMidpoint: function (a, b, c, d) {\n      var h = Math.round,\n          f = this.getPointOnSegment(a, b, .75),\n          g = this.getPointOnSegment(d, c, .75),\n          k = (d.x - a.x) / 16,\n          l = (d.y - a.y) / 16,\n          m = this.getPointOnSegment(a, b, .375);\n      a = this.getPointOnSegment(f, g, .375);\n      a.x -= k;\n      a.y -= l;\n      b = this.getPointOnSegment(g, f, .375);\n      b.x += k;\n      b.y += l;\n      c = this.getPointOnSegment(d, c, .375);\n      k = this.getMiddle(m, a);\n      f = this.getMiddle(f, g);\n      g = this.getMiddle(b, c);\n      m = \" Q\" + h(m.x) + \",\" + h(m.y) + \",\" + h(k.x) + \",\" + h(k.y);\n      m += \" Q\" + h(a.x) + \",\" + h(a.y) + \",\" + h(f.x) + \",\" + h(f.y);\n      m += \" Q\" + h(b.x) + \",\" + h(b.y) + \",\" + h(g.x) + \",\" + h(g.y);\n      return m += \" Q\" + h(c.x) + \",\" + h(c.y) + \",\" + h(d.x) + \",\" + h(d.y);\n    },\n    getMiddle: function (a, b) {\n      return {\n        x: (a.x + b.x) / 2,\n        y: (a.y + b.y) / 2\n      };\n    },\n    getPointOnSegment: function (a, b, c) {\n      return {\n        x: a.x + (b.x - a.x) * c,\n        y: a.y + (b.y - a.y) * c\n      };\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDraw = d.Class({\n    construct: function (a, b, c, e) {\n      d.SVG_NS = \"http://www.w3.org/2000/svg\";\n      d.SVG_XLINK = \"http://www.w3.org/1999/xlink\";\n      d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, \"svg\").createSVGRect;\n      1 > b && (b = 10);\n      1 > c && (c = 10);\n      this.div = a;\n      this.width = b;\n      this.height = c;\n      this.rBin = document.createElement(\"div\");\n      d.hasSVG ? (d.SVG = !0, b = this.createSvgElement(\"svg\"), a.appendChild(b), this.container = b, this.addDefs(e), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer && (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new d.VMLRenderer(this, e), this.R.disableSelection(a));\n    },\n    createSvgElement: function (a) {\n      return document.createElementNS(d.SVG_NS, a);\n    },\n    circle: function (a, b, c, e) {\n      var h = new d.AmDObject(\"circle\", this);\n      h.attr({\n        r: c,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(h.node, e);\n      return h;\n    },\n    ellipse: function (a, b, c, e, h) {\n      var f = new d.AmDObject(\"ellipse\", this);\n      f.attr({\n        rx: c,\n        ry: e,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(f.node, h);\n      return f;\n    },\n    setSize: function (a, b) {\n      0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\");\n    },\n    rect: function (a, b, c, e, h, f, g) {\n      var k = new d.AmDObject(\"rect\", this);\n      d.VML && (h = Math.round(100 * h / Math.min(c, e)), c += 2 * f, e += 2 * f, k.bw = f, k.node.style.marginLeft = -f, k.node.style.marginTop = -f);\n      1 > c && (c = 1);\n      1 > e && (e = 1);\n      k.attr({\n        x: a,\n        y: b,\n        width: c,\n        height: e,\n        rx: h,\n        ry: h,\n        \"stroke-width\": f\n      });\n      this.addToContainer(k.node, g);\n      return k;\n    },\n    image: function (a, b, c, e, h, f) {\n      var g = new d.AmDObject(\"image\", this);\n      g.attr({\n        x: b,\n        y: c,\n        width: e,\n        height: h\n      });\n      this.R.path(g, a);\n      this.addToContainer(g.node, f);\n      return g;\n    },\n    addToContainer: function (a, b) {\n      b || (b = this.container);\n      b.appendChild(a);\n    },\n    text: function (a, b, c) {\n      return this.R.text(a, b, c);\n    },\n    path: function (a, b, c, e) {\n      var h = new d.AmDObject(\"path\", this);\n      e || (e = \"100,100\");\n      h.attr({\n        cs: e\n      });\n      c ? h.attr({\n        dd: a\n      }) : h.attr({\n        d: a\n      });\n      this.addToContainer(h.node, b);\n      return h;\n    },\n    set: function (a) {\n      return this.R.set(a);\n    },\n    remove: function (a) {\n      if (a) {\n        var b = this.rBin;\n        b.appendChild(a);\n        b.innerHTML = \"\";\n      }\n    },\n    renderFix: function () {\n      var a = this.container,\n          b = a.style,\n          c;\n\n      try {\n        c = a.getScreenCTM() || a.createSVGMatrix();\n      } catch (d) {\n        c = a.createSVGMatrix();\n      }\n\n      a = 1 - c.e % 1;\n      c = 1 - c.f % 1;\n      .5 < a && --a;\n      .5 < c && --c;\n      a && (b.left = a + \"px\");\n      c && (b.top = c + \"px\");\n    },\n    update: function () {\n      this.R.update();\n    },\n    addDefs: function (a) {\n      if (d.hasSVG) {\n        var b = this.createSvgElement(\"desc\"),\n            c = this.container;\n        c.setAttribute(\"version\", \"1.1\");\n        c.style.position = \"absolute\";\n        this.setSize(this.width, this.height);\n        d.rtl && (c.setAttribute(\"direction\", \"rtl\"), c.style.left = \"auto\", c.style.right = \"0px\");\n        b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + a.version));\n        c.appendChild(b);\n        a.defs && (b = this.createSvgElement(\"defs\"), c.appendChild(b), d.parseDefs(a.defs, b), this.defs = b);\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDObject = d.Class({\n    construct: function (a, b) {\n      this.D = b;\n      this.R = b.R;\n      this.node = this.R.create(this, a);\n      this.y = this.x = 0;\n      this.scale = 1;\n    },\n    attr: function (a) {\n      this.R.attr(this, a);\n      return this;\n    },\n    getAttr: function (a) {\n      return this.node.getAttribute(a);\n    },\n    setAttr: function (a, b) {\n      this.R.setAttr(this, a, b);\n      return this;\n    },\n    clipRect: function (a, b, c, d) {\n      this.R.clipRect(this, a, b, c, d);\n    },\n    translate: function (a, b, c, d) {\n      d || (a = Math.round(a), b = Math.round(b));\n      this.R.move(this, a, b, c);\n      this.x = a;\n      this.y = b;\n      this.scale = c;\n      this.angle && this.rotate(this.angle);\n    },\n    rotate: function (a, b) {\n      this.R.rotate(this, a, b);\n      this.angle = a;\n    },\n    animate: function (a, b, c) {\n      for (var e in a) if (a.hasOwnProperty(e)) {\n        var h = e,\n            f = a[e];\n        c = d.getEffect(c);\n        this.R.animate(this, h, f, b, c);\n      }\n    },\n    push: function (a) {\n      if (a) {\n        var b = this.node;\n        b.appendChild(a.node);\n        var c = a.clipPath;\n        c && b.appendChild(c);\n        (a = a.grad) && b.appendChild(a);\n      }\n    },\n    text: function (a) {\n      this.R.setText(this, a);\n    },\n    remove: function () {\n      this.R.remove(this);\n    },\n    clear: function () {\n      var a = this.node;\n      if (a.hasChildNodes()) for (; 1 <= a.childNodes.length;) a.removeChild(a.firstChild);\n    },\n    hide: function () {\n      this.setAttr(\"visibility\", \"hidden\");\n    },\n    show: function () {\n      this.setAttr(\"visibility\", \"visible\");\n    },\n    getBBox: function () {\n      return this.R.getBBox(this);\n    },\n    toFront: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n        b && b.appendChild(a);\n      }\n    },\n    toPrevious: function () {\n      var a = this.node;\n      a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null);\n    },\n    toBack: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n\n        if (b) {\n          var c = b.firstChild;\n          c && b.insertBefore(a, c);\n        }\n      }\n    },\n    mouseover: function (a) {\n      this.R.addListener(this, \"mouseover\", a);\n      return this;\n    },\n    mouseout: function (a) {\n      this.R.addListener(this, \"mouseout\", a);\n      return this;\n    },\n    click: function (a) {\n      this.R.addListener(this, \"click\", a);\n      return this;\n    },\n    dblclick: function (a) {\n      this.R.addListener(this, \"dblclick\", a);\n      return this;\n    },\n    mousedown: function (a) {\n      this.R.addListener(this, \"mousedown\", a);\n      return this;\n    },\n    mouseup: function (a) {\n      this.R.addListener(this, \"mouseup\", a);\n      return this;\n    },\n    touchstart: function (a) {\n      this.R.addListener(this, \"touchstart\", a);\n      return this;\n    },\n    touchend: function (a) {\n      this.R.addListener(this, \"touchend\", a);\n      return this;\n    },\n    contextmenu: function (a) {\n      this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);\n      return this;\n    },\n    stop: function () {\n      d.removeFromArray(this.R.animations, this.an_x);\n      d.removeFromArray(this.R.animations, this.an_y);\n    },\n    length: function () {\n      return this.node.childNodes.length;\n    },\n    gradient: function (a, b, c) {\n      this.R.gradient(this, a, b, c);\n    },\n    pattern: function (a, b) {\n      a && this.R.pattern(this, a, b);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.VMLRenderer = d.Class({\n    construct: function (a, b) {\n      this.chart = b;\n      this.D = a;\n      this.cNames = {\n        circle: \"oval\",\n        ellipse: \"oval\",\n        rect: \"roundrect\",\n        path: \"shape\"\n      };\n      this.styleMap = {\n        x: \"left\",\n        y: \"top\",\n        width: \"width\",\n        height: \"height\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        visibility: \"visibility\"\n      };\n    },\n    create: function (a, b) {\n      var c;\n      if (\"group\" == b) c = document.createElement(\"div\"), a.type = \"div\";else if (\"text\" == b) c = document.createElement(\"div\"), a.type = \"text\";else if (\"image\" == b) c = document.createElement(\"img\"), a.type = \"image\";else {\n        a.type = \"shape\";\n        a.shapeType = this.cNames[b];\n        c = document.createElement(\"amvml:\" + this.cNames[b]);\n        var d = document.createElement(\"amvml:stroke\");\n        c.appendChild(d);\n        a.stroke = d;\n        var h = document.createElement(\"amvml:fill\");\n        c.appendChild(h);\n        a.fill = h;\n        h.className = \"amvml\";\n        d.className = \"amvml\";\n        c.className = \"amvml\";\n      }\n      c.style.position = \"absolute\";\n      c.style.top = 0;\n      c.style.left = 0;\n      return c;\n    },\n    path: function (a, b) {\n      a.node.setAttribute(\"src\", b);\n    },\n    setAttr: function (a, b, c) {\n      if (void 0 !== c) {\n        var e;\n        8 === document.documentMode && (e = !0);\n        var h = a.node,\n            f = a.type,\n            g = h.style;\n        \"r\" == b && (g.width = 2 * c, g.height = 2 * c);\n        \"oval\" == a.shapeType && (\"rx\" == b && (g.width = 2 * c), \"ry\" == b && (g.height = 2 * c));\n        \"roundrect\" == a.shapeType && (\"width\" != b && \"height\" != b || --c);\n        \"cursor\" == b && (g.cursor = c);\n        \"cx\" == b && (g.left = c - d.removePx(g.width) / 2);\n        \"cy\" == b && (g.top = c - d.removePx(g.height) / 2);\n        var k = this.styleMap[b];\n        void 0 !== k && (g[k] = c);\n        \"text\" == f && (\"text-anchor\" == b && (a.anchor = c, k = h.clientWidth, \"end\" == c && (g.marginLeft = -k + \"px\"), \"middle\" == c && (g.marginLeft = -(k / 2) + \"px\", g.textAlign = \"center\"), \"start\" == c && (g.marginLeft = \"0px\")), \"fill\" == b && (g.color = c), \"font-weight\" == b && (g.fontWeight = c));\n        if (g = a.children) for (k = 0; k < g.length; k++) g[k].setAttr(b, c);\n\n        if (\"shape\" == f) {\n          \"cs\" == b && (h.style.width = \"100px\", h.style.height = \"100px\", h.setAttribute(\"coordsize\", c));\n          \"d\" == b && h.setAttribute(\"path\", this.svgPathToVml(c));\n          \"dd\" == b && h.setAttribute(\"path\", c);\n          f = a.stroke;\n          a = a.fill;\n          \"stroke\" == b && (e ? f.color = c : f.setAttribute(\"color\", c));\n          \"stroke-width\" == b && (e ? f.weight = c : f.setAttribute(\"weight\", c));\n          \"stroke-opacity\" == b && (e ? f.opacity = c : f.setAttribute(\"opacity\", c));\n          \"stroke-dasharray\" == b && (g = \"solid\", 0 < c && 3 > c && (g = \"dot\"), 3 <= c && 6 >= c && (g = \"dash\"), 6 < c && (g = \"longdash\"), e ? f.dashstyle = g : f.setAttribute(\"dashstyle\", g));\n          if (\"fill-opacity\" == b || \"opacity\" == b) 0 === c ? e ? a.on = !1 : a.setAttribute(\"on\", !1) : e ? a.opacity = c : a.setAttribute(\"opacity\", c);\n          \"fill\" == b && (e ? a.color = c : a.setAttribute(\"color\", c));\n          \"rx\" == b && (e ? h.arcSize = c + \"%\" : h.setAttribute(\"arcsize\", c + \"%\"));\n        }\n      }\n    },\n    attr: function (a, b) {\n      for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);\n    },\n    text: function (a, b, c) {\n      var e = new d.AmDObject(\"text\", this.D),\n          h = e.node;\n      h.style.whiteSpace = \"pre\";\n      h.innerHTML = a;\n      this.D.addToContainer(h, c);\n      this.attr(e, b);\n      return e;\n    },\n    getBBox: function (a) {\n      return this.getBox(a.node);\n    },\n    getBox: function (a) {\n      var b = a.offsetLeft,\n          c = a.offsetTop,\n          d = a.offsetWidth,\n          h = a.offsetHeight,\n          f;\n\n      if (a.hasChildNodes()) {\n        var g, k, l;\n\n        for (l = 0; l < a.childNodes.length; l++) {\n          f = this.getBox(a.childNodes[l]);\n          var m = f.x;\n          isNaN(m) || (isNaN(g) ? g = m : m < g && (g = m));\n          var n = f.y;\n          isNaN(n) || (isNaN(k) ? k = n : n < k && (k = n));\n          m = f.width + m;\n          isNaN(m) || (d = Math.max(d, m));\n          f = f.height + n;\n          isNaN(f) || (h = Math.max(h, f));\n        }\n\n        0 > g && (b += g);\n        0 > k && (c += k);\n      }\n\n      return {\n        x: b,\n        y: c,\n        width: d,\n        height: h\n      };\n    },\n    setText: function (a, b) {\n      var c = a.node;\n      c && (c.innerHTML = b);\n      this.setAttr(a, \"text-anchor\", a.anchor);\n    },\n    addListener: function (a, b, c) {\n      a.node[\"on\" + b] = c;\n    },\n    move: function (a, b, c) {\n      var e = a.node,\n          h = e.style;\n      \"text\" == a.type && (c -= d.removePx(h.fontSize) / 2 - 1);\n      \"oval\" == a.shapeType && (b -= d.removePx(h.width) / 2, c -= d.removePx(h.height) / 2);\n      a = a.bw;\n      isNaN(a) || (b -= a, c -= a);\n      isNaN(b) || isNaN(c) || (e.style.left = b + \"px\", e.style.top = c + \"px\");\n    },\n    svgPathToVml: function (a) {\n      var b = a.split(\" \");\n      a = \"\";\n      var c,\n          d = Math.round,\n          h;\n\n      for (h = 0; h < b.length; h++) {\n        var f = b[h],\n            g = f.substring(0, 1),\n            f = f.substring(1),\n            k = f.split(\",\"),\n            l = d(k[0]) + \",\" + d(k[1]);\n        \"M\" == g && (a += \" m \" + l);\n        \"L\" == g && (a += \" l \" + l);\n        \"Z\" == g && (a += \" x e\");\n\n        if (\"Q\" == g) {\n          var m = c.length,\n              n = c[m - 1],\n              q = k[0],\n              p = k[1],\n              l = k[2],\n              t = k[3];\n          c = d(c[m - 2] / 3 + 2 / 3 * q);\n          n = d(n / 3 + 2 / 3 * p);\n          q = d(2 / 3 * q + l / 3);\n          p = d(2 / 3 * p + t / 3);\n          a += \" c \" + c + \",\" + n + \",\" + q + \",\" + p + \",\" + l + \",\" + t;\n        }\n\n        \"A\" == g && (a += \" wa \" + f);\n        \"B\" == g && (a += \" at \" + f);\n        c = k;\n      }\n\n      return a;\n    },\n    animate: function (a, b, c, d, h) {\n      var f = a.node,\n          g = this.chart;\n\n      if (\"translate\" == b) {\n        b = c.split(\",\");\n        c = b[1];\n        var k = f.offsetTop;\n        g.animate(a, \"left\", f.offsetLeft, b[0], d, h, \"px\");\n        g.animate(a, \"top\", k, c, d, h, \"px\");\n      }\n    },\n    clipRect: function (a, b, c, d, h) {\n      a = a.node;\n      0 === b && 0 === c ? (a.style.width = d + \"px\", a.style.height = h + \"px\", a.style.overflow = \"hidden\") : a.style.clip = \"rect(\" + c + \"px \" + (b + d) + \"px \" + (c + h) + \"px \" + b + \"px)\";\n    },\n    rotate: function (a, b, c) {\n      if (0 !== Number(b)) {\n        var e = a.node;\n        a = e.style;\n        c || (c = this.getBGColor(e.parentNode));\n        a.backgroundColor = c;\n        a.paddingLeft = 1;\n        c = b * Math.PI / 180;\n        var h = Math.cos(c),\n            f = Math.sin(c),\n            g = d.removePx(a.left),\n            k = d.removePx(a.top),\n            l = e.offsetWidth,\n            e = e.offsetHeight;\n        b /= Math.abs(b);\n        a.left = g + l / 2 - l / 2 * Math.cos(c) - b * e / 2 * Math.sin(c) + 3;\n        a.top = k - b * l / 2 * Math.sin(c) + b * e / 2 * Math.sin(c);\n        a.cssText = a.cssText + \"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='\" + h + \"', M12='\" + -f + \"', M21='\" + f + \"', M22='\" + h + \"', sizingmethod='auto expand');\";\n      }\n    },\n    getBGColor: function (a) {\n      var b = \"#FFFFFF\";\n\n      if (a.style) {\n        var c = a.style.backgroundColor;\n        \"\" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode));\n      }\n\n      return b;\n    },\n    set: function (a) {\n      var b = new d.AmDObject(\"group\", this.D);\n      this.D.container.appendChild(b.node);\n\n      if (a) {\n        var c;\n\n        for (c = 0; c < a.length; c++) b.push(a[c]);\n      }\n\n      return b;\n    },\n    gradient: function (a, b, c, d) {\n      var h = \"\";\n      \"radialGradient\" == b && (b = \"gradientradial\", c.reverse());\n      \"linearGradient\" == b && (b = \"gradient\");\n      var f;\n\n      for (f = 0; f < c.length; f++) {\n        var g = Math.round(100 * f / (c.length - 1)),\n            h = h + (g + \"% \" + c[f]);\n        f < c.length - 1 && (h += \",\");\n      }\n\n      a = a.fill;\n      90 == d ? d = 0 : 270 == d ? d = 180 : 180 == d ? d = 90 : 0 === d && (d = 270);\n      8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute(\"type\", b), a.setAttribute(\"angle\", d));\n      h && (a.colors.value = h);\n    },\n    remove: function (a) {\n      a.clipPath && this.D.remove(a.clipPath);\n      this.D.remove(a.node);\n    },\n    disableSelection: function (a) {\n      void 0 !== typeof a.onselectstart && (a.onselectstart = function () {\n        return !1;\n      });\n      a.style.cursor = \"default\";\n    },\n    pattern: function (a, b) {\n      var c = a.node,\n          d = a.fill,\n          h = \"none\";\n      b.color && (h = b.color);\n      c.fillColor = h;\n      8 === document.documentMode ? (d.type = \"tile\", d.src = b.url) : (d.setAttribute(\"type\", \"tile\"), d.setAttribute(\"src\", b.url));\n    },\n    update: function () {}\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SVGRenderer = d.Class({\n    construct: function (a) {\n      this.D = a;\n      this.animations = [];\n    },\n    create: function (a, b) {\n      return document.createElementNS(d.SVG_NS, b);\n    },\n    attr: function (a, b) {\n      for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);\n    },\n    setAttr: function (a, b, c) {\n      void 0 !== c && a.node.setAttribute(b, c);\n    },\n    animate: function (a, b, c, e, h) {\n      var f = a.node;\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      \"translate\" == b ? (f = (f = f.getAttribute(\"transform\")) ? String(f).substring(10, f.length - 1) : \"0,0\", f = f.split(\", \").join(\" \"), f = f.split(\" \").join(\",\"), 0 === f && (f = \"0,0\")) : f = Number(f.getAttribute(b));\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: f,\n        to: c,\n        time: e,\n        effect: h\n      };\n      this.animations.push(c);\n      a[\"an_\" + b] = c;\n    },\n    update: function () {\n      var a,\n          b = this.animations;\n\n      for (a = b.length - 1; 0 <= a; a--) {\n        var c = b[a],\n            e = 1E3 * c.time / d.updateRate,\n            h = c.frame + 1,\n            f = c.obj,\n            g = c.attribute,\n            k,\n            l,\n            m;\n        h <= e ? (c.frame++, \"translate\" == g ? (k = c.from.split(\",\"), g = Number(k[0]), k = Number(k[1]), isNaN(k) && (k = 0), l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), m = 0 === m - g ? m : Math.round(d[c.effect](0, h, g, m - g, e)), c = 0 === l - k ? l : Math.round(d[c.effect](0, h, k, l - k, e)), g = \"transform\", c = \"translate(\" + m + \",\" + c + \")\") : (l = Number(c.from), k = Number(c.to), m = k - l, c = d[c.effect](0, h, l, m, e), isNaN(c) && (c = k), 0 === m && this.animations.splice(a, 1)), this.setAttr(f, g, c)) : (\"translate\" == g ? (l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), f.translate(m, l)) : (k = Number(c.to), this.setAttr(f, g, k)), this.animations.splice(a, 1));\n      }\n    },\n    getBBox: function (a) {\n      if (a = a.node) try {\n        return a.getBBox();\n      } catch (b) {}\n      return {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    path: function (a, b) {\n      a.node.setAttributeNS(d.SVG_XLINK, \"xlink:href\", b);\n    },\n    clipRect: function (a, b, c, e, h) {\n      var f = a.node,\n          g = a.clipPath;\n      g && this.D.remove(g);\n      var k = f.parentNode;\n      k && (f = document.createElementNS(d.SVG_NS, \"clipPath\"), g = d.getUniqueId(), f.setAttribute(\"id\", g), this.D.rect(b, c, e, h, 0, 0, f), k.appendChild(f), b = \"#\", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, \"clip-path\", \"url(\" + b + g + \")\"), this.clipPathC++, a.clipPath = f);\n    },\n    text: function (a, b, c) {\n      var e = new d.AmDObject(\"text\", this.D);\n      a = String(a).split(\"\\n\");\n      var h = b[\"font-size\"],\n          f;\n\n      for (f = 0; f < a.length; f++) {\n        var g = this.create(null, \"tspan\");\n        g.appendChild(document.createTextNode(a[f]));\n        g.setAttribute(\"y\", (h + 2) * f + Math.round(h / 2));\n        g.setAttribute(\"x\", 0);\n        g.style.fontSize = h + \"px\";\n        e.node.appendChild(g);\n      }\n\n      e.node.setAttribute(\"y\", Math.round(h / 2));\n      this.attr(e, b);\n      this.D.addToContainer(e.node, c);\n      return e;\n    },\n    setText: function (a, b) {\n      var c = a.node;\n      c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)));\n    },\n    move: function (a, b, c, d) {\n      isNaN(b) && (b = 0);\n      isNaN(c) && (c = 0);\n      b = \"translate(\" + b + \",\" + c + \")\";\n      d && (b = b + \" scale(\" + d + \")\");\n      this.setAttr(a, \"transform\", b);\n    },\n    rotate: function (a, b) {\n      var c = a.node.getAttribute(\"transform\"),\n          d = \"rotate(\" + b + \")\";\n      c && (d = c + \" \" + d);\n      this.setAttr(a, \"transform\", d);\n    },\n    set: function (a) {\n      var b = new d.AmDObject(\"g\", this.D);\n      this.D.container.appendChild(b.node);\n\n      if (a) {\n        var c;\n\n        for (c = 0; c < a.length; c++) b.push(a[c]);\n      }\n\n      return b;\n    },\n    addListener: function (a, b, c) {\n      a.node[\"on\" + b] = c;\n    },\n    gradient: function (a, b, c, e) {\n      var h = a.node,\n          f = a.grad;\n      f && this.D.remove(f);\n      b = document.createElementNS(d.SVG_NS, b);\n      f = d.getUniqueId();\n      b.setAttribute(\"id\", f);\n\n      if (!isNaN(e)) {\n        var g = 0,\n            k = 0,\n            l = 0,\n            m = 0;\n        90 == e ? l = 100 : 270 == e ? m = 100 : 180 == e ? g = 100 : 0 === e && (k = 100);\n        b.setAttribute(\"x1\", g + \"%\");\n        b.setAttribute(\"x2\", k + \"%\");\n        b.setAttribute(\"y1\", l + \"%\");\n        b.setAttribute(\"y2\", m + \"%\");\n      }\n\n      for (e = 0; e < c.length; e++) g = document.createElementNS(d.SVG_NS, \"stop\"), k = 100 * e / (c.length - 1), 0 === e && (k = 0), g.setAttribute(\"offset\", k + \"%\"), g.setAttribute(\"stop-color\", c[e]), b.appendChild(g);\n\n      h.parentNode.appendChild(b);\n      c = \"#\";\n      d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c);\n      h.setAttribute(\"fill\", \"url(\" + c + f + \")\");\n      a.grad = b;\n    },\n    removeTarget: function (a) {\n      return a.split(\"#\")[0];\n    },\n    pattern: function (a, b, c) {\n      var e = a.node;\n      isNaN(c) && (c = 1);\n      var h = a.patternNode;\n      h && this.D.remove(h);\n      var h = document.createElementNS(d.SVG_NS, \"pattern\"),\n          f = d.getUniqueId(),\n          g = b;\n      b.url && (g = b.url);\n      var k = Number(b.width);\n      isNaN(k) && (k = 4);\n      var l = Number(b.height);\n      isNaN(l) && (l = 4);\n      k /= c;\n      l /= c;\n      c = b.x;\n      isNaN(c) && (c = 0);\n      var m = -Math.random() * Number(b.randomX);\n      isNaN(m) || (c = m);\n      m = b.y;\n      isNaN(m) && (m = 0);\n      var n = -Math.random() * Number(b.randomY);\n      isNaN(n) || (m = n);\n      h.setAttribute(\"id\", f);\n      h.setAttribute(\"width\", k);\n      h.setAttribute(\"height\", l);\n      h.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n      h.setAttribute(\"xlink:href\", g);\n      b.color && (n = document.createElementNS(d.SVG_NS, \"rect\"), n.setAttributeNS(null, \"height\", k), n.setAttributeNS(null, \"width\", l), n.setAttributeNS(null, \"fill\", b.color), h.appendChild(n));\n      this.D.image(g, 0, 0, k, l, h).translate(c, m);\n      g = \"#\";\n      d.baseHref && !d.isIE && (g = this.removeTarget(window.location.href) + g);\n      e.setAttribute(\"fill\", \"url(\" + g + f + \")\");\n      a.patternNode = h;\n      e.parentNode.appendChild(h);\n    },\n    remove: function (a) {\n      a.clipPath && this.D.remove(a.clipPath);\n      a.grad && this.D.remove(a.grad);\n      a.patternNode && this.D.remove(a.patternNode);\n      this.D.remove(a.node);\n    }\n  });\n})();\n\nAmCharts.AmDSet = AmCharts.Class({\n  construct: function (d) {\n    this.create(\"g\");\n  },\n  attr: function (d) {\n    this.R.attr(this.node, d);\n  },\n  move: function (d, a) {\n    this.R.move(this.node, d, a);\n  }\n});\n\n(function () {\n  var d = window.AmCharts;\n  d.AmLegend = d.Class({\n    construct: function (a) {\n      this.enabled = !0;\n      this.cname = \"AmLegend\";\n      this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"rollOverItem\", \"rollOutItem\", \"clickLabel\");\n      this.position = \"bottom\";\n      this.borderColor = this.color = \"#000000\";\n      this.borderAlpha = 0;\n      this.markerLabelGap = 5;\n      this.verticalGap = 10;\n      this.align = \"left\";\n      this.horizontalGap = 0;\n      this.spacing = 10;\n      this.markerDisabledColor = \"#AAB3B3\";\n      this.markerType = \"square\";\n      this.markerSize = 16;\n      this.markerBorderThickness = this.markerBorderAlpha = 1;\n      this.marginBottom = this.marginTop = 0;\n      this.marginLeft = this.marginRight = 20;\n      this.autoMargins = !0;\n      this.valueWidth = 50;\n      this.switchable = !0;\n      this.switchType = \"x\";\n      this.switchColor = \"#FFFFFF\";\n      this.rollOverColor = \"#CC0000\";\n      this.reversedOrder = !1;\n      this.labelText = \"[[title]]\";\n      this.valueText = \"[[value]]\";\n      this.useMarkerColorForLabels = !1;\n      this.rollOverGraphAlpha = 1;\n      this.textClickEnabled = !1;\n      this.equalWidths = !0;\n      this.dateFormat = \"DD-MM-YYYY\";\n      this.backgroundColor = \"#FFFFFF\";\n      this.backgroundAlpha = 0;\n      this.useGraphSettings = !1;\n      this.showEntries = !0;\n      d.applyTheme(this, a, this.cname);\n    },\n    setData: function (a) {\n      this.legendData = a;\n      this.invalidateSize();\n    },\n    invalidateSize: function () {\n      this.destroy();\n      this.entries = [];\n      this.valueLabels = [];\n      var a = this.legendData;\n      this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend();\n    },\n    drawLegend: function () {\n      var a = this.chart,\n          b = this.position,\n          c = this.width,\n          e = a.divRealWidth,\n          h = a.divRealHeight,\n          f = this.div,\n          g = this.legendData;\n      this.data && (g = this.data);\n      isNaN(this.fontSize) && (this.fontSize = a.fontSize);\n      if (\"right\" == b || \"left\" == b) this.maxColumns = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);else if (this.autoMargins) {\n        this.marginRight = a.marginRight;\n        this.marginLeft = a.marginLeft;\n        var k = a.autoMarginOffset;\n        \"bottom\" == b ? (this.marginBottom = k, this.marginTop = 0) : (this.marginTop = k, this.marginBottom = 0);\n      }\n      c = void 0 !== c ? d.toCoordinate(c, e) : a.realWidth;\n      \"outside\" == b ? (c = f.offsetWidth, h = f.offsetHeight, f.clientHeight && (c = f.clientWidth, h = f.clientHeight)) : (isNaN(c) || (f.style.width = c + \"px\"), f.className = \"amChartsLegend \" + a.classNamePrefix + \"-legend-div\");\n      this.divWidth = c;\n      (b = this.container) ? (b.container.innerHTML = \"\", f.appendChild(b.container), b.width = c, b.height = h, b.addDefs(a)) : b = new d.AmDraw(f, c, h, a);\n      this.container = b;\n      this.lx = 0;\n      this.ly = 8;\n      h = this.markerSize;\n      h > this.fontSize && (this.ly = h / 2 - 1);\n      0 < h && (this.lx += h + this.markerLabelGap);\n      this.titleWidth = 0;\n      if (h = this.title) h = d.text(this.container, h, this.color, a.fontFamily, this.fontSize, \"start\", !0), d.setCN(a, h, \"legend-title\"), h.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = h.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6;\n      this.index = this.maxLabelWidth = 0;\n\n      if (this.showEntries) {\n        for (a = 0; a < g.length; a++) this.createEntry(g[a]);\n\n        for (a = this.index = 0; a < g.length; a++) this.createValue(g[a]);\n      }\n\n      this.arrangeEntries();\n      this.updateValues();\n    },\n    arrangeEntries: function () {\n      var a = this.position,\n          b = this.marginLeft + this.titleWidth,\n          c = this.marginRight,\n          e = this.marginTop,\n          h = this.marginBottom,\n          f = this.horizontalGap,\n          g = this.div,\n          k = this.divWidth,\n          l = this.maxColumns,\n          m = this.verticalGap,\n          n = this.spacing,\n          q = k - c - b,\n          p = 0,\n          t = 0,\n          r = this.container;\n      this.set && this.set.remove();\n      var u = r.set();\n      this.set = u;\n      var z = r.set();\n      u.push(z);\n      var y = this.entries,\n          v,\n          w;\n\n      for (w = 0; w < y.length; w++) {\n        v = y[w].getBBox();\n        var A = v.width;\n        A > p && (p = A);\n        v = v.height;\n        v > t && (t = v);\n      }\n\n      var A = t = 0,\n          B = f,\n          D = 0,\n          C = 0;\n\n      for (w = 0; w < y.length; w++) {\n        var J = y[w];\n        this.reversedOrder && (J = y[y.length - w - 1]);\n        v = J.getBBox();\n        var H;\n        this.equalWidths ? H = f + A * (p + n + this.markerLabelGap) : (H = B, B = B + v.width + f + n);\n        v.height > C && (C = v.height);\n        H + v.width > q && 0 < w && 0 !== A && (t++, A = 0, H = f, B = H + v.width + f + n, D = D + C + m, C = 0);\n        J.translate(H, D);\n        A++;\n        !isNaN(l) && A >= l && (A = 0, t++, D = D + C + m, C = 0);\n        z.push(J);\n      }\n\n      v = z.getBBox();\n      l = v.height + 2 * m - 1;\n      \"left\" == a || \"right\" == a ? (n = v.width + 2 * f, k = n + b + c, g.style.width = k + \"px\", this.ieW = k) : n = k - b - c - 1;\n      c = d.polygon(this.container, [0, n, n, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this.chart, c, \"legend-bg\");\n      u.push(c);\n      u.translate(b, e);\n      c.toBack();\n      b = f;\n      if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = f + (n - v.width) / 2 : \"right\" == this.align && (b = f + n - v.width);\n      z.translate(b, m + 1);\n      this.titleHeight > l && (l = this.titleHeight);\n      a = l + e + h + 1;\n      0 > a && (a = 0);\n      a > this.chart.divRealHeight && (g.style.top = \"0px\");\n      g.style.height = Math.round(a) + \"px\";\n      r.setSize(this.divWidth, a);\n    },\n    createEntry: function (a) {\n      if (!1 !== a.visibleInLegend) {\n        var b = this.chart,\n            c = a.markerType;\n        a.legendEntryWidth = this.markerSize;\n        c || (c = this.markerType);\n        var e = a.color,\n            h = a.alpha;\n        a.legendKeyColor && (e = a.legendKeyColor());\n        a.legendKeyAlpha && (h = a.legendKeyAlpha());\n        var f;\n        !0 === a.hidden && (f = e = this.markerDisabledColor);\n        var g = a.pattern,\n            k = a.customMarker;\n        k || (k = this.customMarker);\n        var l = this.container,\n            m = this.markerSize,\n            n = 0,\n            q = 0,\n            p = m / 2;\n\n        if (this.useGraphSettings) {\n          c = a.type;\n          this.switchType = void 0;\n          if (\"line\" == c || \"step\" == c || \"smoothedLine\" == c || \"ohlc\" == c) g = l.set(), a.hidden || (e = a.lineColorR, f = a.bulletBorderColorR), n = d.line(l, [0, 2 * m], [m / 2, m / 2], e, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(b, n, \"graph-stroke\"), g.push(n), a.bullet && (a.hidden || (e = a.bulletColorR), n = d.bullet(l, a.bullet, a.bulletSize, e, a.bulletAlpha, a.bulletBorderThickness, f, a.bulletBorderAlpha)) && (d.setCN(b, n, \"graph-bullet\"), n.translate(m + 1, m / 2), g.push(n)), p = 0, n = m, q = m / 3;else {\n            var t;\n            a.getGradRotation && (t = a.getGradRotation());\n            n = a.fillColorsR;\n            !0 === a.hidden && (n = e);\n            if (g = this.createMarker(\"rectangle\", n, a.fillAlphas, a.lineThickness, e, a.lineAlpha, t, g)) p = m, g.translate(p, m / 2);\n            n = m;\n          }\n          d.setCN(b, g, \"graph-\" + c);\n          d.setCN(b, g, \"graph-\" + a.id);\n        } else k ? (b.path && (k = b.path + k), g = l.image(k, 0, 0, m, m)) : (g = this.createMarker(c, e, h, void 0, void 0, void 0, void 0, g)) && g.translate(m / 2, m / 2);\n\n        d.setCN(b, g, \"legend-marker\");\n        this.addListeners(g, a);\n        l = l.set([g]);\n        this.switchable && a.switchable && l.setAttr(\"cursor\", \"pointer\");\n        void 0 !== a.id && d.setCN(b, l, \"legend-item-\" + a.id);\n        d.setCN(b, l, a.className, !0);\n        (f = this.switchType) && \"none\" != f && (\"x\" == f ? (c = this.createX(), c.translate(m / 2, m / 2)) : c = this.createV(), c.dItem = a, !0 !== a.hidden ? \"x\" == f ? c.hide() : c.show() : \"x\" != f && c.hide(), this.switchable || c.hide(), this.addListeners(c, a), a.legendSwitch = c, l.push(c), d.setCN(b, c, \"legend-switch\"));\n        f = this.color;\n        a.showBalloon && this.textClickEnabled && void 0 !== this.selectedColor && (f = this.selectedColor);\n        this.useMarkerColorForLabels && (f = e);\n        !0 === a.hidden && (f = this.markerDisabledColor);\n        e = d.massReplace(this.labelText, {\n          \"[[title]]\": a.title\n        });\n        c = this.fontSize;\n        g && (m <= c && g.translate(p, m / 2 + this.ly - c / 2 + (c + 2 - m) / 2 - q), a.legendEntryWidth = g.getBBox().width);\n        var r;\n        e && (e = d.fixBrakes(e), a.legendTextReal = e, r = this.labelWidth, r = isNaN(r) ? d.text(this.container, e, f, b.fontFamily, c, \"start\") : d.wrappedText(this.container, e, f, b.fontFamily, c, \"start\", !1, r, 0), d.setCN(b, r, \"legend-label\"), r.translate(this.lx + n, this.ly), l.push(r), b = r.getBBox().width, this.maxLabelWidth < b && (this.maxLabelWidth = b));\n        this.entries[this.index] = l;\n        a.legendEntry = this.entries[this.index];\n        a.legendLabel = r;\n        this.index++;\n      }\n    },\n    addListeners: function (a, b) {\n      var c = this;\n      a && a.mouseover(function (a) {\n        c.rollOverMarker(b, a);\n      }).mouseout(function (a) {\n        c.rollOutMarker(b, a);\n      }).click(function (a) {\n        c.clickMarker(b, a);\n      });\n    },\n    rollOverMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOverMarker\", a, b);\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOutMarker\", a, b);\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickMarker: function (a, b) {\n      this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n      this.dispatch(\"clickMarker\", a, b);\n    },\n    rollOverLabel: function (a, b) {\n      a.hidden || (this.textClickEnabled && a.legendLabel && a.legendLabel.attr({\n        fill: this.rollOverColor\n      }), this.dispatch(\"rollOverItem\", a, b));\n    },\n    rollOutLabel: function (a, b) {\n      if (!a.hidden) {\n        if (this.textClickEnabled && a.legendLabel) {\n          var c = this.color;\n          void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\n          this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\n          a.legendLabel.attr({\n            fill: c\n          });\n        }\n\n        this.dispatch(\"rollOutItem\", a, b);\n      }\n    },\n    clickLabel: function (a, b) {\n      this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n    },\n    dispatch: function (a, b, c) {\n      this.fire(a, {\n        type: a,\n        dataItem: b,\n        target: this,\n        event: c,\n        chart: this.chart\n      });\n    },\n    createValue: function (a) {\n      var b = this,\n          c = b.fontSize,\n          e = b.chart;\n\n      if (!1 !== a.visibleInLegend) {\n        var h = b.maxLabelWidth;\n        b.forceWidth && (h = b.labelWidth);\n        b.equalWidths || (b.valueAlign = \"left\");\n        \"left\" == b.valueAlign && (h = a.legendEntry.getBBox().width);\n        var f = h;\n\n        if (b.valueText && 0 < b.valueWidth) {\n          var g = b.color;\n          b.useMarkerColorForValues && (g = a.color, a.legendKeyColor && (g = a.legendKeyColor()));\n          !0 === a.hidden && (g = b.markerDisabledColor);\n          var k = b.valueText,\n              h = h + b.lx + b.markerLabelGap + b.valueWidth,\n              l = \"end\";\n          \"left\" == b.valueAlign && (h -= b.valueWidth, l = \"start\");\n          g = d.text(b.container, k, g, b.chart.fontFamily, c, l);\n          d.setCN(e, g, \"legend-value\");\n          g.translate(h, b.ly);\n          b.entries[b.index].push(g);\n          f += b.valueWidth + 2 * b.markerLabelGap;\n          g.dItem = a;\n          b.valueLabels.push(g);\n        }\n\n        b.index++;\n        e = b.markerSize;\n        e < c + 7 && (e = c + 7, d.VML && (e += 3));\n        c = b.container.rect(a.legendEntryWidth, 0, f, e, 0, 0).attr({\n          stroke: \"none\",\n          fill: \"#fff\",\n          \"fill-opacity\": .005\n        });\n        c.dItem = a;\n        b.entries[b.index - 1].push(c);\n        c.mouseover(function (c) {\n          b.rollOverLabel(a, c);\n        }).mouseout(function (c) {\n          b.rollOutLabel(a, c);\n        }).click(function (c) {\n          b.clickLabel(a, c);\n        });\n      }\n    },\n    createV: function () {\n      var a = this.markerSize;\n      return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor);\n    },\n    createX: function () {\n      var a = (this.markerSize - 4) / 2,\n          b = {\n        stroke: this.switchColor,\n        \"stroke-width\": 3\n      },\n          c = this.container,\n          e = d.line(c, [-a, a], [-a, a]).attr(b),\n          a = d.line(c, [-a, a], [a, -a]).attr(b);\n      return this.container.set([e, a]);\n    },\n    createMarker: function (a, b, c, e, h, f, g, k) {\n      var l = this.markerSize,\n          m = this.container;\n      h || (h = this.markerBorderColor);\n      h || (h = b);\n      isNaN(e) && (e = this.markerBorderThickness);\n      isNaN(f) && (f = this.markerBorderAlpha);\n      return d.bullet(m, a, l, b, c, e, h, f, l, g, k);\n    },\n    validateNow: function () {\n      this.invalidateSize();\n    },\n    updateValues: function () {\n      var a = this.valueLabels,\n          b = this.chart,\n          c,\n          d = this.data;\n\n      for (c = 0; c < a.length; c++) {\n        var h = a[c],\n            f = h.dItem,\n            g = \" \";\n        if (d) f.value ? h.text(f.value) : h.text(\"\");else {\n          var k;\n\n          if (void 0 !== f.type) {\n            k = f.currentDataItem;\n            var l = this.periodValueText;\n            f.legendPeriodValueText && (l = f.legendPeriodValueText);\n            k ? (g = this.valueText, f.legendValueText && (g = f.legendValueText), g = b.formatString(g, k)) : l && (g = b.formatPeriodString(l, f));\n          } else g = b.formatString(this.valueText, f);\n\n          if (l = this.valueFunction) k && (f = k), g = l(f, g);\n          h.text(g);\n        }\n      }\n    },\n    renderFix: function () {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    destroy: function () {\n      this.div.innerHTML = \"\";\n      d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.formatMilliseconds = function (a, b) {\n    if (-1 != a.indexOf(\"fff\")) {\n      var c = b.getMilliseconds(),\n          d = String(c);\n      10 > c && (d = \"00\" + c);\n      10 <= c && 100 > c && (d = \"0\" + c);\n      a = a.replace(/fff/g, d);\n    }\n\n    return a;\n  };\n\n  d.extractPeriod = function (a) {\n    var b = d.stripNumbers(a),\n        c = 1;\n    b != a && (c = Number(a.slice(0, a.indexOf(b))));\n    return {\n      period: b,\n      count: c\n    };\n  };\n\n  d.getDate = function (a, b, c) {\n    return a instanceof Date ? d.newDate(a, c) : b && isNaN(a) ? d.stringToDate(a, b) : new Date(a);\n  };\n\n  d.newDate = function (a, b) {\n    return b && \"fff\" != b ? new Date(a) : d.useUTC ? new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds(), a.getUTCMilliseconds()) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds());\n  };\n\n  d.resetDateToMin = function (a, b, c, e) {\n    void 0 === e && (e = 1);\n    var h, f, g, k, l, m, n;\n    d.useUTC ? (h = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), n = a.getUTCMilliseconds(), a = a.getUTCDay()) : (h = a.getFullYear(), f = a.getMonth(), g = a.getDate(), k = a.getHours(), l = a.getMinutes(), m = a.getSeconds(), n = a.getMilliseconds(), a = a.getDay());\n\n    switch (b) {\n      case \"YYYY\":\n        h = Math.floor(h / c) * c;\n        f = 0;\n        g = 1;\n        n = m = l = k = 0;\n        break;\n\n      case \"MM\":\n        f = Math.floor(f / c) * c;\n        g = 1;\n        n = m = l = k = 0;\n        break;\n\n      case \"WW\":\n        g = a >= e ? g - a + e : g - (7 + a) + e;\n        n = m = l = k = 0;\n        break;\n\n      case \"DD\":\n        n = m = l = k = 0;\n        break;\n\n      case \"hh\":\n        k = Math.floor(k / c) * c;\n        n = m = l = 0;\n        break;\n\n      case \"mm\":\n        l = Math.floor(l / c) * c;\n        n = m = 0;\n        break;\n\n      case \"ss\":\n        m = Math.floor(m / c) * c;\n        n = 0;\n        break;\n\n      case \"fff\":\n        n = Math.floor(n / c) * c;\n    }\n\n    d.useUTC ? (a = new Date(), a.setUTCFullYear(h, f, g), a.setUTCHours(k, l, m, n)) : a = new Date(h, f, g, k, l, m, n);\n    return a;\n  };\n\n  d.getPeriodDuration = function (a, b) {\n    void 0 === b && (b = 1);\n    var c;\n\n    switch (a) {\n      case \"YYYY\":\n        c = 316224E5;\n        break;\n\n      case \"MM\":\n        c = 26784E5;\n        break;\n\n      case \"WW\":\n        c = 6048E5;\n        break;\n\n      case \"DD\":\n        c = 864E5;\n        break;\n\n      case \"hh\":\n        c = 36E5;\n        break;\n\n      case \"mm\":\n        c = 6E4;\n        break;\n\n      case \"ss\":\n        c = 1E3;\n        break;\n\n      case \"fff\":\n        c = 1;\n    }\n\n    return c * b;\n  };\n\n  d.intervals = {\n    s: {\n      nextInterval: \"ss\",\n      contains: 1E3\n    },\n    ss: {\n      nextInterval: \"mm\",\n      contains: 60,\n      count: 0\n    },\n    mm: {\n      nextInterval: \"hh\",\n      contains: 60,\n      count: 1\n    },\n    hh: {\n      nextInterval: \"DD\",\n      contains: 24,\n      count: 2\n    },\n    DD: {\n      nextInterval: \"\",\n      contains: Infinity,\n      count: 3\n    }\n  };\n\n  d.getMaxInterval = function (a, b) {\n    var c = d.intervals;\n    return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, d.getMaxInterval(a, b)) : \"ss\" == b ? c[b].nextInterval : b;\n  };\n\n  d.dayNames = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \");\n  d.shortDayNames = \"Sun Mon Tue Wed Thu Fri Sat\".split(\" \");\n  d.monthNames = \"January February March April May June July August September October November December\".split(\" \");\n  d.shortMonthNames = \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \");\n\n  d.getWeekNumber = function (a) {\n    a = new Date(a);\n    a.setHours(0, 0, 0);\n    a.setDate(a.getDate() + 4 - (a.getDay() || 7));\n    var b = new Date(a.getFullYear(), 0, 1);\n    return Math.ceil(((a - b) / 864E5 + 1) / 7);\n  };\n\n  d.stringToDate = function (a, b) {\n    var c = {},\n        e = [{\n      pattern: \"YYYY\",\n      period: \"year\"\n    }, {\n      pattern: \"YY\",\n      period: \"year\"\n    }, {\n      pattern: \"MM\",\n      period: \"month\"\n    }, {\n      pattern: \"M\",\n      period: \"month\"\n    }, {\n      pattern: \"DD\",\n      period: \"date\"\n    }, {\n      pattern: \"D\",\n      period: \"date\"\n    }, {\n      pattern: \"JJ\",\n      period: \"hours\"\n    }, {\n      pattern: \"J\",\n      period: \"hours\"\n    }, {\n      pattern: \"HH\",\n      period: \"hours\"\n    }, {\n      pattern: \"H\",\n      period: \"hours\"\n    }, {\n      pattern: \"KK\",\n      period: \"hours\"\n    }, {\n      pattern: \"K\",\n      period: \"hours\"\n    }, {\n      pattern: \"LL\",\n      period: \"hours\"\n    }, {\n      pattern: \"L\",\n      period: \"hours\"\n    }, {\n      pattern: \"NN\",\n      period: \"minutes\"\n    }, {\n      pattern: \"N\",\n      period: \"minutes\"\n    }, {\n      pattern: \"SS\",\n      period: \"seconds\"\n    }, {\n      pattern: \"S\",\n      period: \"seconds\"\n    }, {\n      pattern: \"QQQ\",\n      period: \"milliseconds\"\n    }, {\n      pattern: \"QQ\",\n      period: \"milliseconds\"\n    }, {\n      pattern: \"Q\",\n      period: \"milliseconds\"\n    }],\n        h = !0,\n        f = b.indexOf(\"AA\");\n    -1 != f && (a.substr(f, 2), \"pm\" == a.toLowerCase && (h = !1));\n    var f = b,\n        g,\n        k,\n        l;\n\n    for (l = 0; l < e.length; l++) k = e[l].period, c[k] = 0, \"date\" == k && (c[k] = 1);\n\n    for (l = 0; l < e.length; l++) if (g = e[l].pattern, k = e[l].period, -1 != b.indexOf(g)) {\n      var m = d.getFromDateString(g, a, f);\n      b = b.replace(g, \"\");\n      if (\"KK\" == g || \"K\" == g || \"LL\" == g || \"L\" == g) h || (m += 12);\n      c[k] = m;\n    }\n\n    d.useUTC ? (e = new Date(), e.setUTCFullYear(c.year, c.month, c.date), e.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : e = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds);\n    return e;\n  };\n\n  d.getFromDateString = function (a, b, c) {\n    if (void 0 !== b) return c = c.indexOf(a), b = String(b), b = b.substr(c, a.length), \"0\" == b.charAt(0) && (b = b.substr(1, b.length - 1)), b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf(\"M\") && b--, b;\n  };\n\n  d.formatDate = function (a, b, c) {\n    c || (c = d);\n    var e,\n        h,\n        f,\n        g,\n        k,\n        l,\n        m,\n        n = d.getWeekNumber(a);\n    d.useUTC ? (e = a.getUTCFullYear(), h = a.getUTCMonth(), f = a.getUTCDate(), g = a.getUTCDay(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), a = a.getUTCMilliseconds()) : (e = a.getFullYear(), h = a.getMonth(), f = a.getDate(), g = a.getDay(), k = a.getHours(), l = a.getMinutes(), m = a.getSeconds(), a = a.getMilliseconds());\n    var q = String(e).substr(2, 2),\n        p = h + 1;\n    9 > h && (p = \"0\" + p);\n    var t = \"0\" + g;\n    b = b.replace(/W/g, n);\n    n = k;\n    24 == n && (n = 0);\n    var r = n;\n    10 > r && (r = \"0\" + r);\n    b = b.replace(/JJ/g, r);\n    b = b.replace(/J/g, n);\n    r = k;\n    0 === r && (r = 24, -1 != b.indexOf(\"H\") && f--);\n    n = f;\n    10 > f && (n = \"0\" + f);\n    var u = r;\n    10 > u && (u = \"0\" + u);\n    b = b.replace(/HH/g, u);\n    b = b.replace(/H/g, r);\n    r = k;\n    11 < r && (r -= 12);\n    u = r;\n    10 > u && (u = \"0\" + u);\n    b = b.replace(/KK/g, u);\n    b = b.replace(/K/g, r);\n    r = k;\n    0 === r && (r = 12);\n    12 < r && (r -= 12);\n    u = r;\n    10 > u && (u = \"0\" + u);\n    b = b.replace(/LL/g, u);\n    b = b.replace(/L/g, r);\n    r = l;\n    10 > r && (r = \"0\" + r);\n    b = b.replace(/NN/g, r);\n    b = b.replace(/N/g, l);\n    l = m;\n    10 > l && (l = \"0\" + l);\n    b = b.replace(/SS/g, l);\n    b = b.replace(/S/g, m);\n    m = a;\n    10 > m && (m = \"00\" + m);\n    100 > m && (m = \"0\" + m);\n    l = a;\n    10 > l && (l = \"00\" + l);\n    b = b.replace(/QQQ/g, m);\n    b = b.replace(/QQ/g, l);\n    b = b.replace(/Q/g, a);\n    b = 12 > k ? b.replace(/A/g, \"am\") : b.replace(/A/g, \"pm\");\n    b = b.replace(/YYYY/g, \"@IIII@\");\n    b = b.replace(/YY/g, \"@II@\");\n    b = b.replace(/MMMM/g, \"@XXXX@\");\n    b = b.replace(/MMM/g, \"@XXX@\");\n    b = b.replace(/MM/g, \"@XX@\");\n    b = b.replace(/M/g, \"@X@\");\n    b = b.replace(/DD/g, \"@RR@\");\n    b = b.replace(/D/g, \"@R@\");\n    b = b.replace(/EEEE/g, \"@PPPP@\");\n    b = b.replace(/EEE/g, \"@PPP@\");\n    b = b.replace(/EE/g, \"@PP@\");\n    b = b.replace(/E/g, \"@P@\");\n    b = b.replace(/@IIII@/g, e);\n    b = b.replace(/@II@/g, q);\n    b = b.replace(/@XXXX@/g, c.monthNames[h]);\n    b = b.replace(/@XXX@/g, c.shortMonthNames[h]);\n    b = b.replace(/@XX@/g, p);\n    b = b.replace(/@X@/g, h + 1);\n    b = b.replace(/@RR@/g, n);\n    b = b.replace(/@R@/g, f);\n    b = b.replace(/@PPPP@/g, c.dayNames[g]);\n    b = b.replace(/@PPP@/g, c.shortDayNames[g]);\n    b = b.replace(/@PP@/g, t);\n    return b = b.replace(/@P@/g, g);\n  };\n\n  d.changeDate = function (a, b, c, e, h) {\n    if (d.useUTC) return d.changeUTCDate(a, b, c, e, h);\n    var f = -1;\n    void 0 === e && (e = !0);\n    void 0 === h && (h = !1);\n    !0 === e && (f = 1);\n\n    switch (b) {\n      case \"YYYY\":\n        a.setFullYear(a.getFullYear() + c * f);\n        e || h || a.setDate(a.getDate() + 1);\n        break;\n\n      case \"MM\":\n        b = a.getMonth();\n        a.setMonth(a.getMonth() + c * f);\n        a.getMonth() > b + c * f && a.setDate(a.getDate() - 1);\n        e || h || a.setDate(a.getDate() + 1);\n        break;\n\n      case \"DD\":\n        a.setDate(a.getDate() + c * f);\n        break;\n\n      case \"WW\":\n        a.setDate(a.getDate() + c * f * 7);\n        break;\n\n      case \"hh\":\n        a.setHours(a.getHours() + c * f);\n        break;\n\n      case \"mm\":\n        a.setMinutes(a.getMinutes() + c * f);\n        break;\n\n      case \"ss\":\n        a.setSeconds(a.getSeconds() + c * f);\n        break;\n\n      case \"fff\":\n        a.setMilliseconds(a.getMilliseconds() + c * f);\n    }\n\n    return a;\n  };\n\n  d.changeUTCDate = function (a, b, c, d, h) {\n    var f = -1;\n    void 0 === d && (d = !0);\n    void 0 === h && (h = !1);\n    !0 === d && (f = 1);\n\n    switch (b) {\n      case \"YYYY\":\n        a.setUTCFullYear(a.getUTCFullYear() + c * f);\n        d || h || a.setUTCDate(a.getUTCDate() + 1);\n        break;\n\n      case \"MM\":\n        b = a.getUTCMonth();\n        a.setUTCMonth(a.getUTCMonth() + c * f);\n        a.getUTCMonth() > b + c * f && a.setUTCDate(a.getUTCDate() - 1);\n        d || h || a.setUTCDate(a.getUTCDate() + 1);\n        break;\n\n      case \"DD\":\n        a.setUTCDate(a.getUTCDate() + c * f);\n        break;\n\n      case \"WW\":\n        a.setUTCDate(a.getUTCDate() + c * f * 7);\n        break;\n\n      case \"hh\":\n        a.setUTCHours(a.getUTCHours() + c * f);\n        break;\n\n      case \"mm\":\n        a.setUTCMinutes(a.getUTCMinutes() + c * f);\n        break;\n\n      case \"ss\":\n        a.setUTCSeconds(a.getUTCSeconds() + c * f);\n        break;\n\n      case \"fff\":\n        a.setUTCMilliseconds(a.getUTCMilliseconds() + c * f);\n    }\n\n    return a;\n  };\n})();","map":null,"metadata":{},"sourceType":"script"}