{"ast":null,"code":"/*!\n\nHolder - 2.3.2 - client side image placeholders\n(c) 2012-2014 Ivan Malopinsky / http://imsky.co\n\nProvided under the MIT License.\nCommercial use requires attribution.\n\n*/\nvar Holder = Holder || {};\n\n(function (app, win) {\n  var system_config = {\n    use_svg: false,\n    use_canvas: false,\n    use_fallback: false\n  };\n  var instance_config = {};\n  var preempted = false;\n  canvas = document.createElement('canvas');\n  var dpr = 1,\n      bsr = 1;\n  var resizable_images = [];\n\n  if (!canvas.getContext) {\n    system_config.use_fallback = true;\n  } else {\n    if (canvas.toDataURL(\"image/png\").indexOf(\"data:image/png\") < 0) {\n      //Android doesn't support data URI\n      system_config.use_fallback = true;\n    } else {\n      var ctx = canvas.getContext(\"2d\");\n    }\n  }\n\n  if (!!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect) {\n    system_config.use_svg = true;\n    system_config.use_canvas = false;\n  }\n\n  if (!system_config.use_fallback) {\n    dpr = window.devicePixelRatio || 1, bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  }\n\n  var ratio = dpr / bsr;\n  var settings = {\n    domain: \"holder.js\",\n    images: \"img\",\n    bgnodes: \".holderjs\",\n    themes: {\n      \"gray\": {\n        background: \"#eee\",\n        foreground: \"#aaa\",\n        size: 12\n      },\n      \"social\": {\n        background: \"#3a5a97\",\n        foreground: \"#fff\",\n        size: 12\n      },\n      \"industrial\": {\n        background: \"#434A52\",\n        foreground: \"#C2F200\",\n        size: 12\n      },\n      \"sky\": {\n        background: \"#0D8FDB\",\n        foreground: \"#fff\",\n        size: 12\n      },\n      \"vine\": {\n        background: \"#39DBAC\",\n        foreground: \"#1E292C\",\n        size: 12\n      },\n      \"lava\": {\n        background: \"#F8591A\",\n        foreground: \"#1C2846\",\n        size: 12\n      }\n    },\n    stylesheet: \"\"\n  };\n  app.flags = {\n    dimensions: {\n      regex: /^(\\d+)x(\\d+)$/,\n      output: function (val) {\n        var exec = this.regex.exec(val);\n        return {\n          width: +exec[1],\n          height: +exec[2]\n        };\n      }\n    },\n    fluid: {\n      regex: /^([0-9%]+)x([0-9%]+)$/,\n      output: function (val) {\n        var exec = this.regex.exec(val);\n        return {\n          width: exec[1],\n          height: exec[2]\n        };\n      }\n    },\n    colors: {\n      regex: /#([0-9a-f]{3,})\\:#([0-9a-f]{3,})/i,\n      output: function (val) {\n        var exec = this.regex.exec(val);\n        return {\n          size: settings.themes.gray.size,\n          foreground: \"#\" + exec[2],\n          background: \"#\" + exec[1]\n        };\n      }\n    },\n    text: {\n      regex: /text\\:(.*)/,\n      output: function (val) {\n        return this.regex.exec(val)[1];\n      }\n    },\n    font: {\n      regex: /font\\:(.*)/,\n      output: function (val) {\n        return this.regex.exec(val)[1];\n      }\n    },\n    auto: {\n      regex: /^auto$/\n    },\n    textmode: {\n      regex: /textmode\\:(.*)/,\n      output: function (val) {\n        return this.regex.exec(val)[1];\n      }\n    }\n  };\n\n  function text_size(width, height, template) {\n    height = parseInt(height, 10);\n    width = parseInt(width, 10);\n    var bigSide = Math.max(height, width);\n    var smallSide = Math.min(height, width);\n    var scale = 1 / 12;\n    var newHeight = Math.min(smallSide * 0.75, 0.75 * bigSide * scale);\n    return {\n      height: Math.round(Math.max(template.size, newHeight))\n    };\n  }\n\n  var svg_el = function () {\n    //Prevent IE <9 from initializing SVG renderer\n    if (!window.XMLSerializer) return;\n    var serializer = new XMLSerializer();\n    var svg_ns = \"http://www.w3.org/2000/svg\";\n    var svg = document.createElementNS(svg_ns, \"svg\"); //IE throws an exception if this is set and Chrome requires it to be set\n\n    if (svg.webkitMatchesSelector) {\n      svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    }\n\n    var bg_el = document.createElementNS(svg_ns, \"rect\");\n    var text_el = document.createElementNS(svg_ns, \"text\");\n    var textnode_el = document.createTextNode(null);\n    text_el.setAttribute(\"text-anchor\", \"middle\");\n    text_el.appendChild(textnode_el);\n    svg.appendChild(bg_el);\n    svg.appendChild(text_el);\n    return function (props) {\n      svg.setAttribute(\"width\", props.width);\n      svg.setAttribute(\"height\", props.height);\n      bg_el.setAttribute(\"width\", props.width);\n      bg_el.setAttribute(\"height\", props.height);\n      bg_el.setAttribute(\"fill\", props.template.background);\n      text_el.setAttribute(\"x\", props.width / 2);\n      text_el.setAttribute(\"y\", props.height / 2);\n      textnode_el.nodeValue = props.text;\n      text_el.setAttribute(\"style\", css_properties({\n        \"fill\": props.template.foreground,\n        \"font-weight\": \"bold\",\n        \"font-size\": props.text_height + \"px\",\n        \"font-family\": props.font,\n        \"dominant-baseline\": \"central\"\n      }));\n      return serializer.serializeToString(svg);\n    };\n  }();\n\n  function css_properties(props) {\n    var ret = [];\n\n    for (p in props) {\n      if (props.hasOwnProperty(p)) {\n        ret.push(p + \":\" + props[p]);\n      }\n    }\n\n    return ret.join(\";\");\n  }\n\n  function draw_canvas(args) {\n    var ctx = args.ctx,\n        dimensions = args.dimensions,\n        template = args.template,\n        ratio = args.ratio,\n        holder = args.holder,\n        literal = holder.textmode == \"literal\",\n        exact = holder.textmode == \"exact\";\n    var ts = text_size(dimensions.width, dimensions.height, template);\n    var text_height = ts.height;\n    var width = dimensions.width * ratio,\n        height = dimensions.height * ratio;\n    var font = template.font ? template.font : \"Arial,Helvetica,sans-serif\";\n    canvas.width = width;\n    canvas.height = height;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = template.background;\n    ctx.fillRect(0, 0, width, height);\n    ctx.fillStyle = template.foreground;\n    ctx.font = \"bold \" + text_height + \"px \" + font;\n    var text = template.text ? template.text : Math.floor(dimensions.width) + \"x\" + Math.floor(dimensions.height);\n\n    if (literal) {\n      var dimensions = holder.dimensions;\n      text = dimensions.width + \"x\" + dimensions.height;\n    } else if (exact && holder.exact_dimensions) {\n      var dimensions = holder.exact_dimensions;\n      text = Math.floor(dimensions.width) + \"x\" + Math.floor(dimensions.height);\n    }\n\n    var text_width = ctx.measureText(text).width;\n\n    if (text_width / width >= 0.75) {\n      text_height = Math.floor(text_height * 0.75 * (width / text_width));\n    } //Resetting font size if necessary\n\n\n    ctx.font = \"bold \" + text_height * ratio + \"px \" + font;\n    ctx.fillText(text, width / 2, height / 2, width);\n    return canvas.toDataURL(\"image/png\");\n  }\n\n  function draw_svg(args) {\n    var dimensions = args.dimensions,\n        template = args.template,\n        holder = args.holder,\n        literal = holder.textmode == \"literal\",\n        exact = holder.textmode == \"exact\";\n    var ts = text_size(dimensions.width, dimensions.height, template);\n    var text_height = ts.height;\n    var width = dimensions.width,\n        height = dimensions.height;\n    var font = template.font ? template.font : \"Arial,Helvetica,sans-serif\";\n    var text = template.text ? template.text : Math.floor(dimensions.width) + \"x\" + Math.floor(dimensions.height);\n\n    if (literal) {\n      var dimensions = holder.dimensions;\n      text = dimensions.width + \"x\" + dimensions.height;\n    } else if (exact && holder.exact_dimensions) {\n      var dimensions = holder.exact_dimensions;\n      text = Math.floor(dimensions.width) + \"x\" + Math.floor(dimensions.height);\n    }\n\n    var string = svg_el({\n      text: text,\n      width: width,\n      height: height,\n      text_height: text_height,\n      font: font,\n      template: template\n    });\n    return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(string)));\n  }\n\n  function draw(args) {\n    if (instance_config.use_canvas && !instance_config.use_svg) {\n      return draw_canvas(args);\n    } else {\n      return draw_svg(args);\n    }\n  }\n\n  function render(mode, el, holder, src) {\n    var dimensions = holder.dimensions,\n        theme = holder.theme,\n        text = holder.text ? decodeURIComponent(holder.text) : holder.text;\n    var dimensions_caption = dimensions.width + \"x\" + dimensions.height;\n    theme = text ? extend(theme, {\n      text: text\n    }) : theme;\n    theme = holder.font ? extend(theme, {\n      font: holder.font\n    }) : theme;\n    el.setAttribute(\"data-src\", src);\n    holder.theme = theme;\n    el.holder_data = holder;\n\n    if (mode == \"image\") {\n      el.setAttribute(\"alt\", text ? text : theme.text ? theme.text + \" [\" + dimensions_caption + \"]\" : dimensions_caption);\n\n      if (instance_config.use_fallback || !holder.auto) {\n        el.style.width = dimensions.width + \"px\";\n        el.style.height = dimensions.height + \"px\";\n      }\n\n      if (instance_config.use_fallback) {\n        el.style.backgroundColor = theme.background;\n      } else {\n        el.setAttribute(\"src\", draw({\n          ctx: ctx,\n          dimensions: dimensions,\n          template: theme,\n          ratio: ratio,\n          holder: holder\n        }));\n\n        if (holder.textmode && holder.textmode == \"exact\") {\n          resizable_images.push(el);\n          resizable_update(el);\n        }\n      }\n    } else if (mode == \"background\") {\n      if (!instance_config.use_fallback) {\n        el.style.backgroundImage = \"url(\" + draw({\n          ctx: ctx,\n          dimensions: dimensions,\n          template: theme,\n          ratio: ratio,\n          holder: holder\n        }) + \")\";\n        el.style.backgroundSize = dimensions.width + \"px \" + dimensions.height + \"px\";\n      }\n    } else if (mode == \"fluid\") {\n      el.setAttribute(\"alt\", text ? text : theme.text ? theme.text + \" [\" + dimensions_caption + \"]\" : dimensions_caption);\n\n      if (dimensions.height.slice(-1) == \"%\") {\n        el.style.height = dimensions.height;\n      } else if (holder.auto == null || !holder.auto) {\n        el.style.height = dimensions.height + \"px\";\n      }\n\n      if (dimensions.width.slice(-1) == \"%\") {\n        el.style.width = dimensions.width;\n      } else if (holder.auto == null || !holder.auto) {\n        el.style.width = dimensions.width + \"px\";\n      }\n\n      if (el.style.display == \"inline\" || el.style.display === \"\" || el.style.display == \"none\") {\n        el.style.display = \"block\";\n      }\n\n      set_initial_dimensions(el);\n\n      if (instance_config.use_fallback) {\n        el.style.backgroundColor = theme.background;\n      } else {\n        resizable_images.push(el);\n        resizable_update(el);\n      }\n    }\n  }\n\n  function dimension_check(el, callback) {\n    var dimensions = {\n      height: el.clientHeight,\n      width: el.clientWidth\n    };\n\n    if (!dimensions.height && !dimensions.width) {\n      el.setAttribute(\"data-holder-invisible\", true);\n      callback.call(this, el);\n    } else {\n      el.removeAttribute(\"data-holder-invisible\");\n      return dimensions;\n    }\n  }\n\n  function set_initial_dimensions(el) {\n    if (el.holder_data) {\n      var dimensions = dimension_check(el, app.invisible_error_fn(set_initial_dimensions));\n\n      if (dimensions) {\n        var holder = el.holder_data;\n        holder.initial_dimensions = dimensions;\n        holder.fluid_data = {\n          fluid_height: holder.dimensions.height.slice(-1) == \"%\",\n          fluid_width: holder.dimensions.width.slice(-1) == \"%\",\n          mode: null\n        };\n\n        if (holder.fluid_data.fluid_width && !holder.fluid_data.fluid_height) {\n          holder.fluid_data.mode = \"width\";\n          holder.fluid_data.ratio = holder.initial_dimensions.width / parseFloat(holder.dimensions.height);\n        } else if (!holder.fluid_data.fluid_width && holder.fluid_data.fluid_height) {\n          holder.fluid_data.mode = \"height\";\n          holder.fluid_data.ratio = parseFloat(holder.dimensions.width) / holder.initial_dimensions.height;\n        }\n      }\n    }\n  }\n\n  function resizable_update(element) {\n    var images;\n\n    if (element.nodeType == null) {\n      images = resizable_images;\n    } else {\n      images = [element];\n    }\n\n    for (var i in images) {\n      if (!images.hasOwnProperty(i)) {\n        continue;\n      }\n\n      var el = images[i];\n\n      if (el.holder_data) {\n        var holder = el.holder_data;\n        var dimensions = dimension_check(el, app.invisible_error_fn(resizable_update));\n\n        if (dimensions) {\n          if (holder.fluid) {\n            if (holder.auto) {\n              switch (holder.fluid_data.mode) {\n                case \"width\":\n                  dimensions.height = dimensions.width / holder.fluid_data.ratio;\n                  break;\n\n                case \"height\":\n                  dimensions.width = dimensions.height * holder.fluid_data.ratio;\n                  break;\n              }\n            }\n\n            el.setAttribute(\"src\", draw({\n              ctx: ctx,\n              dimensions: dimensions,\n              template: holder.theme,\n              ratio: ratio,\n              holder: holder\n            }));\n          }\n\n          if (holder.textmode && holder.textmode == \"exact\") {\n            holder.exact_dimensions = dimensions;\n            el.setAttribute(\"src\", draw({\n              ctx: ctx,\n              dimensions: holder.dimensions,\n              template: holder.theme,\n              ratio: ratio,\n              holder: holder\n            }));\n          }\n        }\n      }\n    }\n  }\n\n  function parse_flags(flags, options) {\n    var ret = {\n      theme: extend(settings.themes.gray, {})\n    };\n    var render = false;\n\n    for (var fl = flags.length, j = 0; j < fl; j++) {\n      var flag = flags[j];\n\n      if (app.flags.dimensions.match(flag)) {\n        render = true;\n        ret.dimensions = app.flags.dimensions.output(flag);\n      } else if (app.flags.fluid.match(flag)) {\n        render = true;\n        ret.dimensions = app.flags.fluid.output(flag);\n        ret.fluid = true;\n      } else if (app.flags.textmode.match(flag)) {\n        ret.textmode = app.flags.textmode.output(flag);\n      } else if (app.flags.colors.match(flag)) {\n        ret.theme = app.flags.colors.output(flag);\n      } else if (options.themes[flag]) {\n        //If a theme is specified, it will override custom colors\n        if (options.themes.hasOwnProperty(flag)) {\n          ret.theme = extend(options.themes[flag], {});\n        }\n      } else if (app.flags.font.match(flag)) {\n        ret.font = app.flags.font.output(flag);\n      } else if (app.flags.auto.match(flag)) {\n        ret.auto = true;\n      } else if (app.flags.text.match(flag)) {\n        ret.text = app.flags.text.output(flag);\n      }\n    }\n\n    return render ? ret : false;\n  }\n\n  for (var flag in app.flags) {\n    if (!app.flags.hasOwnProperty(flag)) continue;\n\n    app.flags[flag].match = function (val) {\n      return val.match(this.regex);\n    };\n  }\n\n  app.invisible_error_fn = function (fn) {\n    return function (el) {\n      if (el.hasAttribute(\"data-holder-invisible\")) {\n        throw new Error(\"Holder: invisible placeholder\");\n      }\n    };\n  };\n\n  app.add_theme = function (name, theme) {\n    name != null && theme != null && (settings.themes[name] = theme);\n    return app;\n  };\n\n  app.add_image = function (src, el) {\n    var node = selector(el);\n\n    if (node.length) {\n      for (var i = 0, l = node.length; i < l; i++) {\n        var img = document.createElement(\"img\");\n        img.setAttribute(\"data-src\", src);\n        node[i].appendChild(img);\n      }\n    }\n\n    return app;\n  };\n\n  app.run = function (o) {\n    instance_config = extend({}, system_config);\n    preempted = true;\n    var options = extend(settings, o),\n        images = [],\n        imageNodes = [],\n        bgnodes = [];\n\n    if (options.use_canvas != null && options.use_canvas) {\n      instance_config.use_canvas = true;\n      instance_config.use_svg = false;\n    }\n\n    if (typeof options.images == \"string\") {\n      imageNodes = selector(options.images);\n    } else if (window.NodeList && options.images instanceof window.NodeList) {\n      imageNodes = options.images;\n    } else if (window.Node && options.images instanceof window.Node) {\n      imageNodes = [options.images];\n    } else if (window.HTMLCollection && options.images instanceof window.HTMLCollection) {\n      imageNodes = options.images;\n    }\n\n    if (typeof options.bgnodes == \"string\") {\n      bgnodes = selector(options.bgnodes);\n    } else if (window.NodeList && options.elements instanceof window.NodeList) {\n      bgnodes = options.bgnodes;\n    } else if (window.Node && options.bgnodes instanceof window.Node) {\n      bgnodes = [options.bgnodes];\n    }\n\n    for (i = 0, l = imageNodes.length; i < l; i++) images.push(imageNodes[i]);\n\n    var holdercss = document.getElementById(\"holderjs-style\");\n\n    if (!holdercss) {\n      holdercss = document.createElement(\"style\");\n      holdercss.setAttribute(\"id\", \"holderjs-style\");\n      holdercss.type = \"text/css\";\n      document.getElementsByTagName(\"head\")[0].appendChild(holdercss);\n    }\n\n    if (!options.nocss) {\n      if (holdercss.styleSheet) {\n        holdercss.styleSheet.cssText += options.stylesheet;\n      } else {\n        if (options.stylesheet.length) {\n          holdercss.appendChild(document.createTextNode(options.stylesheet));\n        }\n      }\n    }\n\n    var cssregex = new RegExp(options.domain + \"\\/(.*?)\\\"?\\\\)\");\n\n    for (var l = bgnodes.length, i = 0; i < l; i++) {\n      var src = window.getComputedStyle(bgnodes[i], null).getPropertyValue(\"background-image\");\n      var flags = src.match(cssregex);\n      var bgsrc = bgnodes[i].getAttribute(\"data-background-src\");\n\n      if (flags) {\n        var holder = parse_flags(flags[1].split(\"/\"), options);\n\n        if (holder) {\n          render(\"background\", bgnodes[i], holder, src);\n        }\n      } else if (bgsrc != null) {\n        var holder = parse_flags(bgsrc.substr(bgsrc.lastIndexOf(options.domain) + options.domain.length + 1).split(\"/\"), options);\n\n        if (holder) {\n          render(\"background\", bgnodes[i], holder, src);\n        }\n      }\n    }\n\n    for (l = images.length, i = 0; i < l; i++) {\n      var attr_data_src, attr_src;\n      attr_src = attr_data_src = src = null;\n\n      try {\n        attr_src = images[i].getAttribute(\"src\");\n        attr_datasrc = images[i].getAttribute(\"data-src\");\n      } catch (e) {}\n\n      if (attr_datasrc == null && !!attr_src && attr_src.indexOf(options.domain) >= 0) {\n        src = attr_src;\n      } else if (!!attr_datasrc && attr_datasrc.indexOf(options.domain) >= 0) {\n        src = attr_datasrc;\n      }\n\n      if (src) {\n        var holder = parse_flags(src.substr(src.lastIndexOf(options.domain) + options.domain.length + 1).split(\"/\"), options);\n\n        if (holder) {\n          if (holder.fluid) {\n            render(\"fluid\", images[i], holder, src);\n          } else {\n            render(\"image\", images[i], holder, src);\n          }\n        }\n      }\n    }\n\n    return app;\n  };\n\n  contentLoaded(win, function () {\n    if (window.addEventListener) {\n      window.addEventListener(\"resize\", resizable_update, false);\n      window.addEventListener(\"orientationchange\", resizable_update, false);\n    } else {\n      window.attachEvent(\"onresize\", resizable_update);\n    }\n\n    preempted || app.run({});\n\n    if (typeof window.Turbolinks === \"object\") {\n      document.addEventListener(\"page:change\", function () {\n        app.run({});\n      });\n    }\n  });\n\n  if (typeof define === \"function\" && define.amd) {\n    define([], function () {\n      return app;\n    });\n  } //github.com/davidchambers/Base64.js\n\n\n  (function () {\n    function t(t) {\n      this.message = t;\n    }\n\n    var e = \"undefined\" != typeof exports ? exports : this,\n        r = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    t.prototype = Error(), t.prototype.name = \"InvalidCharacterError\", e.btoa || (e.btoa = function (e) {\n      for (var o, n, a = 0, i = r, c = \"\"; e.charAt(0 | a) || (i = \"=\", a % 1); c += i.charAt(63 & o >> 8 - 8 * (a % 1))) {\n        if (n = e.charCodeAt(a += .75), n > 255) throw new t(\"'btoa' failed\");\n        o = o << 8 | n;\n      }\n\n      return c;\n    }), e.atob || (e.atob = function (e) {\n      if (e = e.replace(/=+$/, \"\"), 1 == e.length % 4) throw new t(\"'atob' failed\");\n\n      for (var o, n, a = 0, i = 0, c = \"\"; n = e.charAt(i++); ~n && (o = a % 4 ? 64 * o + n : n, a++ % 4) ? c += String.fromCharCode(255 & o >> (6 & -2 * a)) : 0) n = r.indexOf(n);\n\n      return c;\n    });\n  })(); //getElementsByClassName polyfill\n\n\n  document.getElementsByClassName || (document.getElementsByClassName = function (e) {\n    var t = document,\n        n,\n        r,\n        i,\n        s = [];\n    if (t.querySelectorAll) return t.querySelectorAll(\".\" + e);\n\n    if (t.evaluate) {\n      r = \".//*[contains(concat(' ', @class, ' '), ' \" + e + \" ')]\", n = t.evaluate(r, t, null, 0, null);\n\n      while (i = n.iterateNext()) s.push(i);\n    } else {\n      n = t.getElementsByTagName(\"*\"), r = new RegExp(\"(^|\\\\s)\" + e + \"(\\\\s|$)\");\n\n      for (i = 0; i < n.length; i++) r.test(n[i].className) && s.push(n[i]);\n    }\n\n    return s;\n  }); //getComputedStyle polyfill\n\n  window.getComputedStyle || (window.getComputedStyle = function (e) {\n    return this.el = e, this.getPropertyValue = function (t) {\n      var n = /(\\-([a-z]){1})/g;\n      return t == \"float\" && (t = \"styleFloat\"), n.test(t) && (t = t.replace(n, function () {\n        return arguments[2].toUpperCase();\n      })), e.currentStyle[t] ? e.currentStyle[t] : null;\n    }, this;\n  }); //http://javascript.nwbox.com/ContentLoaded by Diego Perini with modifications\n\n  function contentLoaded(n, t) {\n    var l = \"complete\",\n        s = \"readystatechange\",\n        u = !1,\n        h = u,\n        c = !0,\n        i = n.document,\n        a = i.documentElement,\n        e = i.addEventListener ? \"addEventListener\" : \"attachEvent\",\n        v = i.addEventListener ? \"removeEventListener\" : \"detachEvent\",\n        f = i.addEventListener ? \"\" : \"on\",\n        r = function (e) {\n      (e.type != s || i.readyState == l) && ((e.type == \"load\" ? n : i)[v](f + e.type, r, u), !h && (h = !0) && t.call(n, null));\n    },\n        o = function () {\n      try {\n        a.doScroll(\"left\");\n      } catch (n) {\n        setTimeout(o, 50);\n        return;\n      }\n\n      r(\"poll\");\n    };\n\n    if (i.readyState == l) t.call(n, \"lazy\");else {\n      if (i.createEventObject && a.doScroll) {\n        try {\n          c = !n.frameElement;\n        } catch (y) {}\n\n        c && o();\n      }\n\n      i[e](f + \"DOMContentLoaded\", r, u), i[e](f + s, r, u), n[e](f + \"load\", r, u);\n    }\n  } //https://gist.github.com/991057 by Jed Schmidt with modifications\n\n\n  function selector(a, b) {\n    var a = a.match(/^(\\W)?(.*)/),\n        b = b || document,\n        c = b[\"getElement\" + (a[1] ? \"#\" == a[1] ? \"ById\" : \"sByClassName\" : \"sByTagName\")],\n        d = c.call(b, a[2]),\n        e = [];\n    return null !== d && (e = d.length || 0 === d.length ? d : [d]), e;\n  } //shallow object property extend\n\n\n  function extend(a, b) {\n    var c = {};\n\n    for (var i in a) {\n      if (a.hasOwnProperty(i)) {\n        c[i] = a[i];\n      }\n    }\n\n    for (var i in b) {\n      if (b.hasOwnProperty(i)) {\n        c[i] = b[i];\n      }\n    }\n\n    return c;\n  } //hasOwnProperty polyfill\n\n\n  if (!Object.prototype.hasOwnProperty)\n    /*jshint -W001, -W103 */\n    Object.prototype.hasOwnProperty = function (prop) {\n      var proto = this.__proto__ || this.constructor.prototype;\n      return prop in this && (!(prop in proto) || proto[prop] !== this[prop]);\n    };\n  /*jshint +W001, +W103 */\n})(Holder, window);","map":null,"metadata":{},"sourceType":"script"}