{"ast":null,"code":"(function () {\n  var d;\n  window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 30, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = []);\n\n  d.Class = function (a) {\n    var b = function () {\n      arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments));\n    };\n\n    a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function () {\n      for (var a = 0, b = arguments.length; a < b; a++) this.events[arguments[a]] = [];\n    }, b.prototype.listenTo = function (a, b, c) {\n      this.removeListener(a, b, c);\n      a.events[b].push({\n        handler: c,\n        scope: this\n      });\n    }, b.prototype.addListener = function (a, b, c) {\n      this.removeListener(this, a, b);\n      this.events[a].push({\n        handler: b,\n        scope: c\n      });\n    }, b.prototype.removeListener = function (a, b, c) {\n      if (a && a.events) for (a = a.events[b], b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1);\n    }, b.prototype.fire = function (a, b) {\n      for (var c = this.events[a], d = 0, k = c.length; d < k; d++) {\n        var l = c[d];\n        l.handler.call(l.scope, b);\n      }\n    });\n\n    for (var c in a) b.prototype[c] = a[c];\n\n    return b;\n  };\n\n  d.addChart = function (a) {\n    d.updateInt || (d.updateInt = setInterval(function () {\n      d.update();\n    }, Math.round(1E3 / d.updateRate)));\n    d.charts.push(a);\n  };\n\n  d.removeChart = function (a) {\n    for (var b = d.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n\n    0 === b.length && d.updateInt && clearInterval(d.updateInt);\n  };\n\n  d.isModern = !0;\n\n  d.getIEVersion = function () {\n    var a = 0,\n        b,\n        c;\n    \"Microsoft Internet Explorer\" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1)));\n    return a;\n  };\n\n  d.applyLang = function (a, b) {\n    var c = d.translations;\n    b.dayNames = d.extend({}, d.dayNames);\n    b.shortDayNames = d.extend({}, d.shortDayNames);\n    b.monthNames = d.extend({}, d.monthNames);\n    b.shortMonthNames = d.extend({}, d.shortMonthNames);\n    c && (c = c[a]) && (d.lang = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)));\n  };\n\n  d.IEversion = d.getIEVersion();\n  9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0);\n  d.dx = 0;\n  d.dy = 0;\n  if (document.addEventListener || window.opera) d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5;\n  document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0));\n  window.chrome && (d.chrome = !0);\n\n  d.handleMouseUp = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var h = b[c];\n      h && h.handleReleaseOutside && h.handleReleaseOutside(a);\n    }\n  };\n\n  d.handleMouseMove = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var h = b[c];\n      h && h.handleMouseMove && h.handleMouseMove(a);\n    }\n  };\n\n  d.handleWheel = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var h = b[c];\n\n      if (h && h.mouseIsOver) {\n        h.mouseWheelScrollEnabled || h.mouseWheelZoomEnabled ? h.handleWheel && h.handleWheel(a) : a.stopPropagation && a.stopPropagation();\n        break;\n      }\n    }\n  };\n\n  d.resetMouseOver = function () {\n    for (var a = d.charts, b = 0; b < a.length; b++) {\n      var c = a[b];\n      c && (c.mouseIsOver = !1);\n    }\n  };\n\n  d.ready = function (a) {\n    d.onReadyArray.push(a);\n  };\n\n  d.handleLoad = function () {\n    d.isReady = !0;\n\n    for (var a = d.onReadyArray, b = 0; b < a.length; b++) {\n      var c = a[b];\n      isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b);\n    }\n  };\n\n  d.addInitHandler = function (a, b) {\n    d.initHandlers.push({\n      method: a,\n      types: b\n    });\n  };\n\n  d.callInitHandler = function (a) {\n    var b = d.initHandlers;\n    if (d.initHandlers) for (var c = 0; c < b.length; c++) {\n      var h = b[c];\n      h.types ? d.isInArray(h.types, a.type) && h.method(a) : h.method(a);\n    }\n  };\n\n  d.getUniqueId = function () {\n    d.uid++;\n    return \"AmChartsEl-\" + d.uid;\n  };\n\n  d.isNN && (document.addEventListener(\"mousemove\", d.handleMouseMove, !0), document.addEventListener(\"mouseup\", d.handleMouseUp, !0), window.addEventListener(\"load\", d.handleLoad, !0), window.addEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.addEventListener(\"mousewheel\", d.handleWheel, !0));\n  d.isIE && (document.attachEvent(\"onmousemove\", d.handleMouseMove), document.attachEvent(\"onmouseup\", d.handleMouseUp), window.attachEvent(\"onload\", d.handleLoad));\n\n  d.clear = function () {\n    var a = d.charts;\n    if (a) for (var b = 0; b < a.length; b++) a[b].clear();\n    d.updateInt && clearInterval(d.updateInt);\n    d.charts = null;\n    d.isNN && (document.removeEventListener(\"mousemove\", d.handleMouseMove, !0), document.removeEventListener(\"mouseup\", d.handleMouseUp, !0), window.removeEventListener(\"load\", d.handleLoad, !0), window.removeEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.removeEventListener(\"mousewheel\", d.handleWheel, !0));\n    d.isIE && (document.detachEvent(\"onmousemove\", d.handleMouseMove), document.detachEvent(\"onmouseup\", d.handleMouseUp), window.detachEvent(\"onload\", d.handleLoad));\n  };\n\n  d.makeChart = function (a, b, c) {\n    var h = b.type,\n        f = b.theme;\n    d.isString(f) && (f = d.themes[f], b.theme = f);\n    var e;\n\n    switch (h) {\n      case \"serial\":\n        e = new d.AmSerialChart(f);\n        break;\n\n      case \"xy\":\n        e = new d.AmXYChart(f);\n        break;\n\n      case \"pie\":\n        e = new d.AmPieChart(f);\n        break;\n\n      case \"radar\":\n        e = new d.AmRadarChart(f);\n        break;\n\n      case \"gauge\":\n        e = new d.AmAngularGauge(f);\n        break;\n\n      case \"funnel\":\n        e = new d.AmFunnelChart(f);\n        break;\n\n      case \"map\":\n        e = new d.AmMap(f);\n        break;\n\n      case \"stock\":\n        e = new d.AmStockChart(f);\n        break;\n\n      case \"gantt\":\n        e = new d.AmGanttChart(f);\n    }\n\n    d.extend(e, b);\n    d.isReady ? isNaN(c) ? e.write(a) : setTimeout(function () {\n      d.realWrite(e, a);\n    }, c) : d.ready(function () {\n      isNaN(c) ? e.write(a) : setTimeout(function () {\n        d.realWrite(e, a);\n      }, c);\n    });\n    return e;\n  };\n\n  d.realWrite = function (a, b) {\n    a.write(b);\n  };\n\n  d.updateCount = 0;\n  d.validateAt = Math.round(d.updateRate / 5);\n\n  d.update = function () {\n    var a = d.charts;\n    d.updateCount++;\n    var b = !1;\n    d.updateCount == d.validateAt && (b = !0, d.updateCount = 0);\n    if (a) for (var c = 0; c < a.length; c++) a[c].update && a[c].update(), b && a[c].validateSize && a[c].validateSize();\n  };\n\n  d.bezierX = 3;\n  d.bezierY = 6;\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.toBoolean = function (a, b) {\n    if (void 0 === a) return b;\n\n    switch (String(a).toLowerCase()) {\n      case \"true\":\n      case \"yes\":\n      case \"1\":\n        return !0;\n\n      case \"false\":\n      case \"no\":\n      case \"0\":\n      case null:\n        return !1;\n\n      default:\n        return Boolean(a);\n    }\n  };\n\n  d.removeFromArray = function (a, b) {\n    var c;\n    if (void 0 !== b && void 0 !== a) for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1);\n  };\n\n  d.isInArray = function (a, b) {\n    for (var c = 0; c < a.length; c++) if (a[c] == b) return !0;\n\n    return !1;\n  };\n\n  d.getDecimals = function (a) {\n    var b = 0;\n    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));\n    return b;\n  };\n\n  d.wrappedText = function (a, b, c, h, f, e, g, k, l) {\n    var m = d.text(a, b, c, h, f, e, g),\n        n = \"\\n\";\n    d.isModern || (n = \"<br>\");\n    if (10 < l) return m;\n\n    if (m) {\n      var p = m.getBBox();\n\n      if (p.width > k) {\n        p = Math.ceil(p.width / k);\n        m.remove();\n\n        for (var m = [], u = 0; -1 < (u = b.indexOf(\" \", u));) m.push(u), u += 1;\n\n        for (var r, u = 0; u < m.length; u += Math.ceil(m.length / p)) r = m[u], b = b.substr(0, r) + n + b.substr(r + 1);\n\n        if (isNaN(r)) {\n          if (0 === l) for (u = 1; u < p; u++) r = Math.round(b.length / p * u), b = b.substr(0, r) + n + b.substr(r);\n          return d.text(a, b, c, h, f, e, g);\n        }\n\n        return d.wrappedText(a, b, c, h, f, e, g, k, l + 1);\n      }\n\n      return m;\n    }\n  };\n\n  d.getStyle = function (a, b) {\n    var c = \"\";\n    document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b) : a.currentStyle && (b = b.replace(/\\-(\\w)/g, function (a, b) {\n      return b.toUpperCase();\n    }), c = a.currentStyle[b]);\n    return c;\n  };\n\n  d.removePx = function (a) {\n    if (void 0 !== a) return Number(a.substring(0, a.length - 2));\n  };\n\n  d.getURL = function (a, b) {\n    if (a) if (\"_self\" != b && b) {\n      if (\"_top\" == b && window.top) window.top.location.href = a;else if (\"_parent\" == b && window.parent) window.parent.location.href = a;else if (\"_blank\" == b) window.open(a);else {\n        var c = document.getElementsByName(b)[0];\n        c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a);\n      }\n    } else window.location.href = a;\n  };\n\n  d.ifArray = function (a) {\n    return a && 0 < a.length ? !0 : !1;\n  };\n\n  d.callMethod = function (a, b) {\n    var c;\n\n    for (c = 0; c < b.length; c++) {\n      var h = b[c];\n\n      if (h) {\n        if (h[a]) h[a]();\n        var d = h.length;\n\n        if (0 < d) {\n          var e;\n\n          for (e = 0; e < d; e++) {\n            var g = h[e];\n            if (g && g[a]) g[a]();\n          }\n        }\n      }\n    }\n  };\n\n  d.toNumber = function (a) {\n    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"));\n  };\n\n  d.toColor = function (a) {\n    if (\"\" !== a && void 0 !== a) if (-1 != a.indexOf(\",\")) {\n      a = a.split(\",\");\n      var b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b].substring(a[b].length - 6, a[b].length);\n        a[b] = \"#\" + c;\n      }\n    } else a = a.substring(a.length - 6, a.length), a = \"#\" + a;\n    return a;\n  };\n\n  d.toCoordinate = function (a, b, c) {\n    var h;\n    void 0 !== a && (a = String(a), c && c < b && (b = c), h = Number(a), -1 != a.indexOf(\"!\") && (h = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (h = b * Number(a.substr(0, a.length - 1)) / 100));\n    return h;\n  };\n\n  d.fitToBounds = function (a, b, c) {\n    a < b && (a = b);\n    a > c && (a = c);\n    return a;\n  };\n\n  d.isDefined = function (a) {\n    return void 0 === a ? !1 : !0;\n  };\n\n  d.stripNumbers = function (a) {\n    return a.replace(/[0-9]+/g, \"\");\n  };\n\n  d.roundTo = function (a, b) {\n    if (0 > b) return a;\n    var c = Math.pow(10, b);\n    return Math.round(a * c) / c;\n  };\n\n  d.toFixed = function (a, b) {\n    var c = String(Math.round(a * Math.pow(10, b)));\n\n    if (0 < b) {\n      var h = c.length;\n\n      if (h < b) {\n        var d;\n\n        for (d = 0; d < b - h; d++) c = \"0\" + c;\n      }\n\n      h = c.substring(0, c.length - b);\n      \"\" === h && (h = 0);\n      return h + \".\" + c.substring(c.length - b, c.length);\n    }\n\n    return String(c);\n  };\n\n  d.formatDuration = function (a, b, c, h, f, e) {\n    var g = d.intervals,\n        k = e.decimalSeparator;\n\n    if (a >= g[b].contains) {\n      var l = a - Math.floor(a / g[b].contains) * g[b].contains;\n      \"ss\" == b && (l = d.formatNumber(l, e), 1 == l.split(k)[0].length && (l = \"0\" + l));\n      (\"mm\" == b || \"hh\" == b) && 10 > l && (l = \"0\" + l);\n      c = l + \"\" + h[b] + \"\" + c;\n      a = Math.floor(a / g[b].contains);\n      b = g[b].nextInterval;\n      return d.formatDuration(a, b, c, h, f, e);\n    }\n\n    \"ss\" == b && (a = d.formatNumber(a, e), 1 == a.split(k)[0].length && (a = \"0\" + a));\n    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);\n    c = a + \"\" + h[b] + \"\" + c;\n    if (g[f].count > g[b].count) for (a = g[b].count; a < g[f].count; a++) b = g[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + h[b] + \"\" + c : \"DD\" == b && (c = \"0\" + h[b] + \"\" + c);\n    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));\n    return c;\n  };\n\n  d.formatNumber = function (a, b, c, h, f) {\n    a = d.roundTo(a, b.precision);\n    isNaN(c) && (c = b.precision);\n    var e = b.decimalSeparator;\n    b = b.thousandsSeparator;\n    var g;\n    g = 0 > a ? \"-\" : \"\";\n    a = Math.abs(a);\n    var k = String(a),\n        l = !1;\n    -1 != k.indexOf(\"e\") && (l = !0);\n    0 <= c && !l && (k = d.toFixed(a, c));\n    var m = \"\";\n    if (l) m = k;else {\n      var k = k.split(\".\"),\n          l = String(k[0]),\n          n;\n\n      for (n = l.length; 0 <= n; n -= 3) m = n != l.length ? 0 !== n ? l.substring(n - 3, n) + b + m : l.substring(n - 3, n) + m : l.substring(n - 3, n);\n\n      void 0 !== k[1] && (m = m + e + k[1]);\n      void 0 !== c && 0 < c && \"0\" != m && (m = d.addZeroes(m, e, c));\n    }\n    m = g + m;\n    \"\" === g && !0 === h && 0 !== a && (m = \"+\" + m);\n    !0 === f && (m += \"%\");\n    return m;\n  };\n\n  d.addZeroes = function (a, b, c) {\n    a = a.split(b);\n    void 0 === a[1] && 0 < c && (a[1] = \"0\");\n    return a[1].length < c ? (a[1] += \"0\", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0];\n  };\n\n  d.scientificToNormal = function (a) {\n    var b;\n    a = String(a).split(\"e\");\n    var c;\n\n    if (\"-\" == a[1].substr(0, 1)) {\n      b = \"0.\";\n\n      for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += \"0\";\n\n      b += a[0].split(\".\").join(\"\");\n    } else {\n      var h = 0;\n      b = a[0].split(\".\");\n      b[1] && (h = b[1].length);\n      b = a[0].split(\".\").join(\"\");\n\n      for (c = 0; c < Math.abs(Number(a[1])) - h; c++) b += \"0\";\n    }\n\n    return b;\n  };\n\n  d.toScientific = function (a, b) {\n    if (0 === a) return \"0\";\n    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E),\n        h = String(h).split(\".\").join(b);\n    return String(h) + \"e\" + c;\n  };\n\n  d.randomColor = function () {\n    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6);\n  };\n\n  d.hitTest = function (a, b, c) {\n    var h = !1,\n        f = a.x,\n        e = a.x + a.width,\n        g = a.y,\n        k = a.y + a.height,\n        l = d.isInRectangle;\n    h || (h = l(f, g, b));\n    h || (h = l(f, k, b));\n    h || (h = l(e, g, b));\n    h || (h = l(e, k, b));\n    h || !0 === c || (h = d.hitTest(b, a, !0));\n    return h;\n  };\n\n  d.isInRectangle = function (a, b, c) {\n    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1;\n  };\n\n  d.isPercents = function (a) {\n    if (-1 != String(a).indexOf(\"%\")) return !0;\n  };\n\n  d.findPosX = function (a) {\n    var b = a,\n        c = a.offsetLeft;\n\n    if (a.offsetParent) {\n      for (; a = a.offsetParent;) c += a.offsetLeft;\n\n      for (; (b = b.parentNode) && b != document.body;) c -= b.scrollLeft || 0;\n    }\n\n    return c;\n  };\n\n  d.findPosY = function (a) {\n    var b = a,\n        c = a.offsetTop;\n\n    if (a.offsetParent) {\n      for (; a = a.offsetParent;) c += a.offsetTop;\n\n      for (; (b = b.parentNode) && b != document.body;) c -= b.scrollTop || 0;\n    }\n\n    return c;\n  };\n\n  d.findIfFixed = function (a) {\n    if (a.offsetParent) for (; a = a.offsetParent;) if (\"fixed\" == d.getStyle(a, \"position\")) return !0;\n    return !1;\n  };\n\n  d.findIfAuto = function (a) {\n    return a.style && \"auto\" == d.getStyle(a, \"overflow\") ? !0 : a.parentNode ? d.findIfAuto(a.parentNode) : !1;\n  };\n\n  d.findScrollLeft = function (a, b) {\n    a.scrollLeft && (b += a.scrollLeft);\n    return a.parentNode ? d.findScrollLeft(a.parentNode, b) : b;\n  };\n\n  d.findScrollTop = function (a, b) {\n    a.scrollTop && (b += a.scrollTop);\n    return a.parentNode ? d.findScrollTop(a.parentNode, b) : b;\n  };\n\n  d.formatValue = function (a, b, c, h, f, e, g, k) {\n    if (b) {\n      void 0 === f && (f = \"\");\n      var l;\n\n      for (l = 0; l < c.length; l++) {\n        var m = c[l],\n            n = b[m];\n        void 0 !== n && (n = e ? d.addPrefix(n, k, g, h) : d.formatNumber(n, h), a = a.replace(new RegExp(\"\\\\[\\\\[\" + f + \"\" + m + \"\\\\]\\\\]\", \"g\"), n));\n      }\n    }\n\n    return a;\n  };\n\n  d.formatDataContextValue = function (a, b) {\n    if (a) {\n      var c = a.match(/\\[\\[.*?\\]\\]/g),\n          h;\n\n      for (h = 0; h < c.length; h++) {\n        var d = c[h],\n            d = d.substr(2, d.length - 4);\n        void 0 !== b[d] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + d + \"\\\\]\\\\]\", \"g\"), b[d]));\n      }\n    }\n\n    return a;\n  };\n\n  d.massReplace = function (a, b) {\n    for (var c in b) if (b.hasOwnProperty(c)) {\n      var d = b[c];\n      void 0 === d && (d = \"\");\n      a = a.replace(c, d);\n    }\n\n    return a;\n  };\n\n  d.cleanFromEmpty = function (a) {\n    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\");\n  };\n\n  d.addPrefix = function (a, b, c, h, f) {\n    var e = d.formatNumber(a, h),\n        g = \"\",\n        k,\n        l,\n        m;\n    if (0 === a) return \"0\";\n    0 > a && (g = \"-\");\n    a = Math.abs(a);\n    if (1 < a) for (k = b.length - 1; -1 < k; k--) {\n      if (a >= b[k].number && (l = a / b[k].number, m = Number(h.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, {\n        precision: -1,\n        decimalSeparator: h.decimalSeparator,\n        thousandsSeparator: h.thousandsSeparator\n      }), !f || l == c)) {\n        e = g + \"\" + m + \"\" + b[k].prefix;\n        break;\n      }\n    } else for (k = 0; k < c.length; k++) if (a <= c[k].number) {\n      l = a / c[k].number;\n      m = Math.abs(Math.round(Math.log(l) * Math.LOG10E));\n      l = d.roundTo(l, m);\n      e = g + \"\" + l + \"\" + c[k].prefix;\n      break;\n    }\n    return e;\n  };\n\n  d.remove = function (a) {\n    a && a.remove();\n  };\n\n  d.getEffect = function (a) {\n    \">\" == a && (a = \"easeOutSine\");\n    \"<\" == a && (a = \"easeInSine\");\n    \"elastic\" == a && (a = \"easeOutElastic\");\n    return a;\n  };\n\n  d.getObjById = function (a, b) {\n    var c, d;\n\n    for (d = 0; d < a.length; d++) {\n      var f = a[d];\n      f.id == b && (c = f);\n    }\n\n    return c;\n  };\n\n  d.applyTheme = function (a, b, c) {\n    b || (b = d.theme);\n    b && b[c] && d.extend(a, b[c]);\n  };\n\n  d.isString = function (a) {\n    return \"string\" == typeof a ? !0 : !1;\n  };\n\n  d.extend = function (a, b, c) {\n    var d;\n    a || (a = {});\n\n    for (d in b) c ? a.hasOwnProperty(d) || (a[d] = b[d]) : a[d] = b[d];\n\n    return a;\n  };\n\n  d.copyProperties = function (a, b) {\n    for (var c in a) a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c]);\n  };\n\n  d.processObject = function (a, b, c, h) {\n    !1 === a instanceof b && (a = h ? d.extend(new b(c), a) : d.extend(a, new b(c), !0));\n    return a;\n  };\n\n  d.fixNewLines = function (a) {\n    var b = RegExp(\"\\\\n\", \"g\");\n    a && (a = a.replace(b, \"<br />\"));\n    return a;\n  };\n\n  d.fixBrakes = function (a) {\n    if (d.isModern) {\n      var b = RegExp(\"<br>\", \"g\");\n      a && (a = a.replace(b, \"\\n\"));\n    } else a = d.fixNewLines(a);\n\n    return a;\n  };\n\n  d.deleteObject = function (a, b) {\n    if (a) {\n      if (void 0 === b || null === b) b = 20;\n      if (0 !== b) if (\"[object Array]\" === Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) d.deleteObject(a[c], b - 1), a[c] = null;else if (a && !a.tagName) try {\n        for (c in a) a[c] && (\"object\" == typeof a[c] && d.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null));\n      } catch (h) {}\n    }\n  };\n\n  d.bounce = function (a, b, c, d, f) {\n    return (b /= f) < 1 / 2.75 ? 7.5625 * d * b * b + c : b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c;\n  };\n\n  d.easeInSine = function (a, b, c, d, f) {\n    return -d * Math.cos(b / f * (Math.PI / 2)) + d + c;\n  };\n\n  d.easeOutSine = function (a, b, c, d, f) {\n    return d * Math.sin(b / f * (Math.PI / 2)) + c;\n  };\n\n  d.easeOutElastic = function (a, b, c, d, f) {\n    a = 1.70158;\n    var e = 0,\n        g = d;\n    if (0 === b) return c;\n    if (1 == (b /= f)) return c + d;\n    e || (e = .3 * f);\n    g < Math.abs(d) ? (g = d, a = e / 4) : a = e / (2 * Math.PI) * Math.asin(d / g);\n    return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * f - a) * Math.PI / e) + d + c;\n  };\n\n  d.fixStepE = function (a) {\n    a = a.toExponential(0).split(\"e\");\n    var b = Number(a[1]);\n    9 == Number(a[0]) && b++;\n    return d.generateNumber(1, b);\n  };\n\n  d.generateNumber = function (a, b) {\n    var c = \"\",\n        d;\n    d = 0 > b ? Math.abs(b) - 1 : Math.abs(b);\n    var f;\n\n    for (f = 0; f < d; f++) c += \"0\";\n\n    return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c);\n  };\n\n  d.setCN = function (a, b, c, d) {\n    if (a.addClassNames && b && (b = b.node) && c) {\n      var f = b.getAttribute(\"class\");\n      a = a.classNamePrefix + \"-\";\n      d && (a = \"\");\n      f ? b.setAttribute(\"class\", f + \" \" + a + c) : b.setAttribute(\"class\", a + c);\n    }\n  };\n\n  d.parseDefs = function (a, b) {\n    for (var c in a) {\n      var h = typeof a[c];\n      if (0 < a[c].length && \"object\" == h) for (var f = 0; f < a[c].length; f++) h = document.createElementNS(d.SVG_NS, c), b.appendChild(h), d.parseDefs(a[c][f], h);else \"object\" == h ? (h = document.createElementNS(d.SVG_NS, c), b.appendChild(h), d.parseDefs(a[c], h)) : b.setAttribute(c, a[c]);\n    }\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDraw = d.Class({\n    construct: function (a, b, c, h) {\n      d.SVG_NS = \"http://www.w3.org/2000/svg\";\n      d.SVG_XLINK = \"http://www.w3.org/1999/xlink\";\n      d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, \"svg\").createSVGRect;\n      1 > b && (b = 10);\n      1 > c && (c = 10);\n      this.div = a;\n      this.width = b;\n      this.height = c;\n      this.rBin = document.createElement(\"div\");\n      d.hasSVG ? (d.SVG = !0, b = this.createSvgElement(\"svg\"), a.appendChild(b), this.container = b, this.addDefs(h), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer && (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new d.VMLRenderer(this, h), this.R.disableSelection(a));\n    },\n    createSvgElement: function (a) {\n      return document.createElementNS(d.SVG_NS, a);\n    },\n    circle: function (a, b, c, h) {\n      var f = new d.AmDObject(\"circle\", this);\n      f.attr({\n        r: c,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(f.node, h);\n      return f;\n    },\n    ellipse: function (a, b, c, h, f) {\n      var e = new d.AmDObject(\"ellipse\", this);\n      e.attr({\n        rx: c,\n        ry: h,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(e.node, f);\n      return e;\n    },\n    setSize: function (a, b) {\n      0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\");\n    },\n    rect: function (a, b, c, h, f, e, g) {\n      var k = new d.AmDObject(\"rect\", this);\n      d.VML && (f = Math.round(100 * f / Math.min(c, h)), c += 2 * e, h += 2 * e, k.bw = e, k.node.style.marginLeft = -e, k.node.style.marginTop = -e);\n      1 > c && (c = 1);\n      1 > h && (h = 1);\n      k.attr({\n        x: a,\n        y: b,\n        width: c,\n        height: h,\n        rx: f,\n        ry: f,\n        \"stroke-width\": e\n      });\n      this.addToContainer(k.node, g);\n      return k;\n    },\n    image: function (a, b, c, h, f, e) {\n      var g = new d.AmDObject(\"image\", this);\n      g.attr({\n        x: b,\n        y: c,\n        width: h,\n        height: f\n      });\n      this.R.path(g, a);\n      this.addToContainer(g.node, e);\n      return g;\n    },\n    addToContainer: function (a, b) {\n      b || (b = this.container);\n      b.appendChild(a);\n    },\n    text: function (a, b, c) {\n      return this.R.text(a, b, c);\n    },\n    path: function (a, b, c, h) {\n      var f = new d.AmDObject(\"path\", this);\n      h || (h = \"100,100\");\n      f.attr({\n        cs: h\n      });\n      c ? f.attr({\n        dd: a\n      }) : f.attr({\n        d: a\n      });\n      this.addToContainer(f.node, b);\n      return f;\n    },\n    set: function (a) {\n      return this.R.set(a);\n    },\n    remove: function (a) {\n      if (a) {\n        var b = this.rBin;\n        b.appendChild(a);\n        b.innerHTML = \"\";\n      }\n    },\n    renderFix: function () {\n      var a = this.container,\n          b = a.style,\n          c;\n\n      try {\n        c = a.getScreenCTM() || a.createSVGMatrix();\n      } catch (d) {\n        c = a.createSVGMatrix();\n      }\n\n      a = 1 - c.e % 1;\n      c = 1 - c.f % 1;\n      .5 < a && --a;\n      .5 < c && --c;\n      a && (b.left = a + \"px\");\n      c && (b.top = c + \"px\");\n    },\n    update: function () {\n      this.R.update();\n    },\n    addDefs: function (a) {\n      if (d.hasSVG) {\n        var b = this.createSvgElement(\"desc\"),\n            c = this.container;\n        c.setAttribute(\"version\", \"1.1\");\n        c.style.position = \"absolute\";\n        this.setSize(this.width, this.height);\n        d.rtl && (c.setAttribute(\"direction\", \"rtl\"), c.style.left = \"auto\", c.style.right = \"0px\");\n        b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + a.version));\n        c.appendChild(b);\n        a.defs && (b = this.createSvgElement(\"defs\"), c.appendChild(b), d.parseDefs(a.defs, b), this.defs = b);\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDObject = d.Class({\n    construct: function (a, b) {\n      this.D = b;\n      this.R = b.R;\n      this.node = this.R.create(this, a);\n      this.y = this.x = 0;\n      this.scale = 1;\n    },\n    attr: function (a) {\n      this.R.attr(this, a);\n      return this;\n    },\n    getAttr: function (a) {\n      return this.node.getAttribute(a);\n    },\n    setAttr: function (a, b) {\n      this.R.setAttr(this, a, b);\n      return this;\n    },\n    clipRect: function (a, b, c, d) {\n      this.R.clipRect(this, a, b, c, d);\n    },\n    translate: function (a, b, c, d) {\n      d || (a = Math.round(a), b = Math.round(b));\n      this.R.move(this, a, b, c);\n      this.x = a;\n      this.y = b;\n      this.scale = c;\n      this.angle && this.rotate(this.angle);\n    },\n    rotate: function (a, b) {\n      this.R.rotate(this, a, b);\n      this.angle = a;\n    },\n    animate: function (a, b, c) {\n      for (var h in a) if (a.hasOwnProperty(h)) {\n        var f = h,\n            e = a[h];\n        c = d.getEffect(c);\n        this.R.animate(this, f, e, b, c);\n      }\n    },\n    push: function (a) {\n      if (a) {\n        var b = this.node;\n        b.appendChild(a.node);\n        var c = a.clipPath;\n        c && b.appendChild(c);\n        (a = a.grad) && b.appendChild(a);\n      }\n    },\n    text: function (a) {\n      this.R.setText(this, a);\n    },\n    remove: function () {\n      this.R.remove(this);\n    },\n    clear: function () {\n      var a = this.node;\n      if (a.hasChildNodes()) for (; 1 <= a.childNodes.length;) a.removeChild(a.firstChild);\n    },\n    hide: function () {\n      this.setAttr(\"visibility\", \"hidden\");\n    },\n    show: function () {\n      this.setAttr(\"visibility\", \"visible\");\n    },\n    getBBox: function () {\n      return this.R.getBBox(this);\n    },\n    toFront: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n        b && b.appendChild(a);\n      }\n    },\n    toPrevious: function () {\n      var a = this.node;\n      a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null);\n    },\n    toBack: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n\n        if (b) {\n          var c = b.firstChild;\n          c && b.insertBefore(a, c);\n        }\n      }\n    },\n    mouseover: function (a) {\n      this.R.addListener(this, \"mouseover\", a);\n      return this;\n    },\n    mouseout: function (a) {\n      this.R.addListener(this, \"mouseout\", a);\n      return this;\n    },\n    click: function (a) {\n      this.R.addListener(this, \"click\", a);\n      return this;\n    },\n    dblclick: function (a) {\n      this.R.addListener(this, \"dblclick\", a);\n      return this;\n    },\n    mousedown: function (a) {\n      this.R.addListener(this, \"mousedown\", a);\n      return this;\n    },\n    mouseup: function (a) {\n      this.R.addListener(this, \"mouseup\", a);\n      return this;\n    },\n    touchstart: function (a) {\n      this.R.addListener(this, \"touchstart\", a);\n      return this;\n    },\n    touchend: function (a) {\n      this.R.addListener(this, \"touchend\", a);\n      return this;\n    },\n    contextmenu: function (a) {\n      this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);\n      return this;\n    },\n    stop: function () {\n      d.removeFromArray(this.R.animations, this.an_x);\n      d.removeFromArray(this.R.animations, this.an_y);\n    },\n    length: function () {\n      return this.node.childNodes.length;\n    },\n    gradient: function (a, b, c) {\n      this.R.gradient(this, a, b, c);\n    },\n    pattern: function (a, b) {\n      a && this.R.pattern(this, a, b);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SVGRenderer = d.Class({\n    construct: function (a) {\n      this.D = a;\n      this.animations = [];\n    },\n    create: function (a, b) {\n      return document.createElementNS(d.SVG_NS, b);\n    },\n    attr: function (a, b) {\n      for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);\n    },\n    setAttr: function (a, b, c) {\n      void 0 !== c && a.node.setAttribute(b, c);\n    },\n    animate: function (a, b, c, h, f) {\n      var e = a.node;\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      \"translate\" == b ? (e = (e = e.getAttribute(\"transform\")) ? String(e).substring(10, e.length - 1) : \"0,0\", e = e.split(\", \").join(\" \"), e = e.split(\" \").join(\",\"), 0 === e && (e = \"0,0\")) : e = Number(e.getAttribute(b));\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: e,\n        to: c,\n        time: h,\n        effect: f\n      };\n      this.animations.push(c);\n      a[\"an_\" + b] = c;\n    },\n    update: function () {\n      var a,\n          b = this.animations;\n\n      for (a = b.length - 1; 0 <= a; a--) {\n        var c = b[a],\n            h = 1E3 * c.time / d.updateRate,\n            f = c.frame + 1,\n            e = c.obj,\n            g = c.attribute,\n            k,\n            l,\n            m;\n        f <= h ? (c.frame++, \"translate\" == g ? (k = c.from.split(\",\"), g = Number(k[0]), k = Number(k[1]), isNaN(k) && (k = 0), l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), m = 0 === m - g ? m : Math.round(d[c.effect](0, f, g, m - g, h)), c = 0 === l - k ? l : Math.round(d[c.effect](0, f, k, l - k, h)), g = \"transform\", c = \"translate(\" + m + \",\" + c + \")\") : (l = Number(c.from), k = Number(c.to), m = k - l, c = d[c.effect](0, f, l, m, h), isNaN(c) && (c = k), 0 === m && this.animations.splice(a, 1)), this.setAttr(e, g, c)) : (\"translate\" == g ? (l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), e.translate(m, l)) : (k = Number(c.to), this.setAttr(e, g, k)), this.animations.splice(a, 1));\n      }\n    },\n    getBBox: function (a) {\n      if (a = a.node) try {\n        return a.getBBox();\n      } catch (b) {}\n      return {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    path: function (a, b) {\n      a.node.setAttributeNS(d.SVG_XLINK, \"xlink:href\", b);\n    },\n    clipRect: function (a, b, c, h, f) {\n      var e = a.node,\n          g = a.clipPath;\n      g && this.D.remove(g);\n      var k = e.parentNode;\n      k && (e = document.createElementNS(d.SVG_NS, \"clipPath\"), g = d.getUniqueId(), e.setAttribute(\"id\", g), this.D.rect(b, c, h, f, 0, 0, e), k.appendChild(e), b = \"#\", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, \"clip-path\", \"url(\" + b + g + \")\"), this.clipPathC++, a.clipPath = e);\n    },\n    text: function (a, b, c) {\n      var h = new d.AmDObject(\"text\", this.D);\n      a = String(a).split(\"\\n\");\n      var f = b[\"font-size\"],\n          e;\n\n      for (e = 0; e < a.length; e++) {\n        var g = this.create(null, \"tspan\");\n        g.appendChild(document.createTextNode(a[e]));\n        g.setAttribute(\"y\", (f + 2) * e + Math.round(f / 2));\n        g.setAttribute(\"x\", 0);\n        g.style.fontSize = f + \"px\";\n        h.node.appendChild(g);\n      }\n\n      h.node.setAttribute(\"y\", Math.round(f / 2));\n      this.attr(h, b);\n      this.D.addToContainer(h.node, c);\n      return h;\n    },\n    setText: function (a, b) {\n      var c = a.node;\n      c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)));\n    },\n    move: function (a, b, c, d) {\n      isNaN(b) && (b = 0);\n      isNaN(c) && (c = 0);\n      b = \"translate(\" + b + \",\" + c + \")\";\n      d && (b = b + \" scale(\" + d + \")\");\n      this.setAttr(a, \"transform\", b);\n    },\n    rotate: function (a, b) {\n      var c = a.node.getAttribute(\"transform\"),\n          d = \"rotate(\" + b + \")\";\n      c && (d = c + \" \" + d);\n      this.setAttr(a, \"transform\", d);\n    },\n    set: function (a) {\n      var b = new d.AmDObject(\"g\", this.D);\n      this.D.container.appendChild(b.node);\n\n      if (a) {\n        var c;\n\n        for (c = 0; c < a.length; c++) b.push(a[c]);\n      }\n\n      return b;\n    },\n    addListener: function (a, b, c) {\n      a.node[\"on\" + b] = c;\n    },\n    gradient: function (a, b, c, h) {\n      var f = a.node,\n          e = a.grad;\n      e && this.D.remove(e);\n      b = document.createElementNS(d.SVG_NS, b);\n      e = d.getUniqueId();\n      b.setAttribute(\"id\", e);\n\n      if (!isNaN(h)) {\n        var g = 0,\n            k = 0,\n            l = 0,\n            m = 0;\n        90 == h ? l = 100 : 270 == h ? m = 100 : 180 == h ? g = 100 : 0 === h && (k = 100);\n        b.setAttribute(\"x1\", g + \"%\");\n        b.setAttribute(\"x2\", k + \"%\");\n        b.setAttribute(\"y1\", l + \"%\");\n        b.setAttribute(\"y2\", m + \"%\");\n      }\n\n      for (h = 0; h < c.length; h++) g = document.createElementNS(d.SVG_NS, \"stop\"), k = 100 * h / (c.length - 1), 0 === h && (k = 0), g.setAttribute(\"offset\", k + \"%\"), g.setAttribute(\"stop-color\", c[h]), b.appendChild(g);\n\n      f.parentNode.appendChild(b);\n      c = \"#\";\n      d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c);\n      f.setAttribute(\"fill\", \"url(\" + c + e + \")\");\n      a.grad = b;\n    },\n    removeTarget: function (a) {\n      return a.split(\"#\")[0];\n    },\n    pattern: function (a, b, c) {\n      var h = a.node;\n      isNaN(c) && (c = 1);\n      var f = a.patternNode;\n      f && this.D.remove(f);\n      var f = document.createElementNS(d.SVG_NS, \"pattern\"),\n          e = d.getUniqueId(),\n          g = b;\n      b.url && (g = b.url);\n      var k = Number(b.width);\n      isNaN(k) && (k = 4);\n      var l = Number(b.height);\n      isNaN(l) && (l = 4);\n      k /= c;\n      l /= c;\n      c = b.x;\n      isNaN(c) && (c = 0);\n      var m = -Math.random() * Number(b.randomX);\n      isNaN(m) || (c = m);\n      m = b.y;\n      isNaN(m) && (m = 0);\n      var n = -Math.random() * Number(b.randomY);\n      isNaN(n) || (m = n);\n      f.setAttribute(\"id\", e);\n      f.setAttribute(\"width\", k);\n      f.setAttribute(\"height\", l);\n      f.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n      f.setAttribute(\"xlink:href\", g);\n      b.color && (n = document.createElementNS(d.SVG_NS, \"rect\"), n.setAttributeNS(null, \"height\", k), n.setAttributeNS(null, \"width\", l), n.setAttributeNS(null, \"fill\", b.color), f.appendChild(n));\n      this.D.image(g, 0, 0, k, l, f).translate(c, m);\n      g = \"#\";\n      d.baseHref && !d.isIE && (g = this.removeTarget(window.location.href) + g);\n      h.setAttribute(\"fill\", \"url(\" + g + e + \")\");\n      a.patternNode = f;\n      h.parentNode.appendChild(f);\n    },\n    remove: function (a) {\n      a.clipPath && this.D.remove(a.clipPath);\n      a.grad && this.D.remove(a.grad);\n      a.patternNode && this.D.remove(a.patternNode);\n      this.D.remove(a.node);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmChart = d.Class({\n    construct: function (a) {\n      this.theme = a;\n      this.classNamePrefix = \"amcharts\";\n      this.addClassNames = !1;\n      this.version = \"3.14.1\";\n      d.addChart(this);\n      this.createEvents(\"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\", \"resized\");\n      this.height = this.width = \"100%\";\n      this.dataChanged = !0;\n      this.chartCreated = !1;\n      this.previousWidth = this.previousHeight = 0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.borderAlpha = this.backgroundAlpha = 0;\n      this.color = this.borderColor = \"#000000\";\n      this.fontFamily = \"Verdana\";\n      this.fontSize = 11;\n      this.usePrefixes = !1;\n      this.precision = -1;\n      this.percentPrecision = 2;\n      this.decimalSeparator = \".\";\n      this.thousandsSeparator = \",\";\n      this.labels = [];\n      this.allLabels = [];\n      this.titles = [];\n      this.marginRight = this.marginLeft = this.autoMarginOffset = 0;\n      this.timeOuts = [];\n      this.creditsPosition = \"top-left\";\n      var b = document.createElement(\"div\"),\n          c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.chartDiv = b;\n      b = document.createElement(\"div\");\n      c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.legendDiv = b;\n      this.titleHeight = 0;\n      this.hideBalloonTime = 150;\n      this.handDrawScatter = 2;\n      this.handDrawThickness = 1;\n      this.prefixesOfBigNumbers = [{\n        number: 1E3,\n        prefix: \"k\"\n      }, {\n        number: 1E6,\n        prefix: \"M\"\n      }, {\n        number: 1E9,\n        prefix: \"G\"\n      }, {\n        number: 1E12,\n        prefix: \"T\"\n      }, {\n        number: 1E15,\n        prefix: \"P\"\n      }, {\n        number: 1E18,\n        prefix: \"E\"\n      }, {\n        number: 1E21,\n        prefix: \"Z\"\n      }, {\n        number: 1E24,\n        prefix: \"Y\"\n      }];\n      this.prefixesOfSmallNumbers = [{\n        number: 1E-24,\n        prefix: \"y\"\n      }, {\n        number: 1E-21,\n        prefix: \"z\"\n      }, {\n        number: 1E-18,\n        prefix: \"a\"\n      }, {\n        number: 1E-15,\n        prefix: \"f\"\n      }, {\n        number: 1E-12,\n        prefix: \"p\"\n      }, {\n        number: 1E-9,\n        prefix: \"n\"\n      }, {\n        number: 1E-6,\n        prefix: \"\\u03bc\"\n      }, {\n        number: .001,\n        prefix: \"m\"\n      }];\n      this.panEventsEnabled = !0;\n      this.product = \"amcharts\";\n      this.animations = [];\n      this.balloon = new d.AmBalloon(this.theme);\n      this.balloon.chart = this;\n      d.applyTheme(this, a, \"AmChart\");\n    },\n    drawChart: function () {\n      this.drawBackground();\n      this.redrawLabels();\n      this.drawTitles();\n      this.brr();\n    },\n    drawBackground: function () {\n      d.remove(this.background);\n      var a = this.container,\n          b = this.backgroundColor,\n          c = this.backgroundAlpha,\n          h = this.set;\n      d.isModern || 0 !== c || (c = .001);\n      var f = this.updateWidth();\n      this.realWidth = f;\n      var e = this.updateHeight();\n      this.realHeight = e;\n      b = d.polygon(a, [0, f - 1, f - 1, 0], [0, 0, e - 1, e - 1], b, c, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this, b, \"bg\");\n      this.background = b;\n      h.push(b);\n      if (b = this.backgroundImage) this.path && (b = this.path + b), a = a.image(b, 0, 0, f, e), d.setCN(this, b, \"bg-image\"), this.bgImg = a, h.push(a);\n    },\n    drawTitles: function () {\n      var a = this.titles;\n\n      if (d.ifArray(a)) {\n        var b = 20,\n            c;\n\n        for (c = 0; c < a.length; c++) {\n          var h = a[c],\n              h = d.processObject(h, d.Title, this.theme);\n\n          if (!1 !== h.enabled) {\n            var f = h.color;\n            void 0 === f && (f = this.color);\n            var e = h.size;\n            isNaN(e) && (e = this.fontSize + 2);\n            isNaN(h.alpha);\n            var g = this.marginLeft,\n                f = d.text(this.container, h.text, f, this.fontFamily, e);\n            f.translate(g + (this.realWidth - this.marginRight - g) / 2, b);\n            f.node.style.pointerEvents = \"none\";\n            d.setCN(this, f, \"title\");\n            h.id && d.setCN(this, f, \"title-\" + h.id);\n            g = !0;\n            void 0 !== h.bold && (g = h.bold);\n            g && f.attr({\n              \"font-weight\": \"bold\"\n            });\n            f.attr({\n              opacity: h.alpha\n            });\n            b += e + 6;\n            this.freeLabelsSet.push(f);\n          }\n        }\n      }\n    },\n    write: function (a) {\n      if (a = \"object\" != typeof a ? document.getElementById(a) : a) {\n        for (; a.firstChild;) a.removeChild(a.firstChild);\n\n        this.div = a;\n        a.style.overflow = \"hidden\";\n        a.style.textAlign = \"left\";\n        var b = this.chartDiv,\n            c = this.legendDiv,\n            h = this.legend,\n            f = c.style,\n            e = b.style;\n        this.measure();\n        this.previousHeight = this.divRealHeight;\n        this.previousWidth = this.divRealWidth;\n        var g,\n            k = document.createElement(\"div\");\n        g = k.style;\n        g.position = \"relative\";\n        this.containerDiv = k;\n        k.className = this.classNamePrefix + \"-main-div\";\n        b.className = this.classNamePrefix + \"-chart-div\";\n        a.appendChild(k);\n        var l = this.exportConfig;\n        l && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this, l));\n        this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));\n        this.AmExport && this.AmExport.init && this.AmExport.init();\n        if (h) {\n          if (h = this.addLegend(h, h.divId), h.enabled) switch (h.position) {\n            case \"bottom\":\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"top\":\n              k.appendChild(c);\n              k.appendChild(b);\n              break;\n\n            case \"absolute\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              f.position = \"absolute\";\n              e.position = \"absolute\";\n              void 0 !== h.left && (f.left = h.left + \"px\");\n              void 0 !== h.right && (f.right = h.right + \"px\");\n              void 0 !== h.top && (f.top = h.top + \"px\");\n              void 0 !== h.bottom && (f.bottom = h.bottom + \"px\");\n              h.marginLeft = 0;\n              h.marginRight = 0;\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"right\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              f.position = \"relative\";\n              e.position = \"absolute\";\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"left\":\n              g.width = a.style.width;\n              g.height = a.style.height;\n              f.position = \"absolute\";\n              e.position = \"relative\";\n              k.appendChild(b);\n              k.appendChild(c);\n              break;\n\n            case \"outside\":\n              k.appendChild(b);\n          } else k.appendChild(b);\n        } else k.appendChild(b);\n        this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\n        this.initChart();\n      }\n    },\n    createLabelsSet: function () {\n      d.remove(this.labelsSet);\n      this.labelsSet = this.container.set();\n      this.freeLabelsSet.push(this.labelsSet);\n    },\n    initChart: function () {\n      this.initHC || (d.callInitHandler(this), this.initHC = !0);\n      this.renderFix();\n      d.applyLang(this.language, this);\n      var a = this.numberFormatter;\n      a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));\n      (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);\n      this.nf = {\n        precision: this.precision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.pf = {\n        precision: this.percentPrecision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.divIsFixed = d.findIfFixed(this.chartDiv);\n      this.destroy();\n      a = 0;\n      document.attachEvent && !window.opera && (a = 1);\n      this.dmouseX = this.dmouseY = 0;\n      var b = document.getElementsByTagName(\"html\")[0];\n      b && window.getComputedStyle && (b = window.getComputedStyle(b, null)) && (this.dmouseY = d.removePx(b.getPropertyValue(\"margin-top\")), this.dmouseX = d.removePx(b.getPropertyValue(\"margin-left\")));\n      this.mouseMode = a;\n      (a = this.container) ? (a.container.innerHTML = \"\", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);\n      a.chart = this;\n      d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, this.container = a, this.set && this.set.remove(), this.set = a.set(), this.gridSet && this.gridSet.remove(), this.gridSet = a.set(), this.cursorLineSet && this.cursorLineSet.remove(), this.cursorLineSet = a.set(), this.graphsBehindSet && this.graphsBehindSet.remove(), this.graphsBehindSet = a.set(), this.bulletBehindSet && this.bulletBehindSet.remove(), this.bulletBehindSet = a.set(), this.columnSet && this.columnSet.remove(), this.columnSet = a.set(), this.graphsSet && this.graphsSet.remove(), this.graphsSet = a.set(), this.trendLinesSet && this.trendLinesSet.remove(), this.trendLinesSet = a.set(), this.axesSet && this.axesSet.remove(), this.axesSet = a.set(), this.cursorSet && this.cursorSet.remove(), this.cursorSet = a.set(), this.scrollbarsSet && this.scrollbarsSet.remove(), this.scrollbarsSet = a.set(), this.bulletSet && this.bulletSet.remove(), this.bulletSet = a.set(), this.freeLabelsSet && this.freeLabelsSet.remove(), this.axesLabelsSet && this.axesLabelsSet.remove(), this.axesLabelsSet = a.set(), this.freeLabelsSet = a.set(), this.balloonsSet && this.balloonsSet.remove(), this.balloonsSet = a.set(), this.zoomButtonSet && this.zoomButtonSet.remove(), this.zoomButtonSet = a.set(), this.linkSet && this.linkSet.remove(), this.linkSet = a.set()) : this.fire(\"failed\", {\n        type: \"failed\",\n        chart: this\n      });\n    },\n    premeasure: function () {\n      var a = this.div;\n\n      if (a) {\n        var b = a.offsetWidth,\n            c = a.offsetHeight;\n        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\n        if (b != this.mw || c != this.mh) this.mw = b, this.mh = c, this.measure();\n      }\n    },\n    measure: function () {\n      var a = this.div;\n\n      if (a) {\n        var b = this.chartDiv,\n            c = a.offsetWidth,\n            h = a.offsetHeight,\n            f = this.container;\n        a.clientHeight && (c = a.clientWidth, h = a.clientHeight);\n        var e = d.removePx(d.getStyle(a, \"padding-left\")),\n            g = d.removePx(d.getStyle(a, \"padding-right\")),\n            k = d.removePx(d.getStyle(a, \"padding-top\")),\n            l = d.removePx(d.getStyle(a, \"padding-bottom\"));\n        isNaN(e) || (c -= e);\n        isNaN(g) || (c -= g);\n        isNaN(k) || (h -= k);\n        isNaN(l) || (h -= l);\n        e = a.style;\n        a = e.width;\n        e = e.height;\n        -1 != a.indexOf(\"px\") && (c = d.removePx(a));\n        -1 != e.indexOf(\"px\") && (h = d.removePx(e));\n        h = Math.round(h);\n        c = Math.round(c);\n        a = Math.round(d.toCoordinate(this.width, c));\n        e = Math.round(d.toCoordinate(this.height, h));\n        (c != this.previousWidth || h != this.previousHeight) && 0 < a && 0 < e && (b.style.width = a + \"px\", b.style.height = e + \"px\", f && f.setSize(a, e), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme), this.balloon.setBounds(2, 2, a - 2, e));\n        this.balloon.chart = this;\n        this.realWidth = a;\n        this.realHeight = e;\n        this.divRealWidth = c;\n        this.divRealHeight = h;\n      }\n    },\n    destroy: function () {\n      this.chartDiv.innerHTML = \"\";\n      this.clearTimeOuts();\n      this.legend && this.legend.destroy();\n    },\n    clearTimeOuts: function () {\n      var a = this.timeOuts;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) clearTimeout(a[b]);\n      }\n\n      this.timeOuts = [];\n    },\n    clear: function (a) {\n      d.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);\n      this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;\n      this.clearTimeOuts();\n      this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));\n      a || d.removeChart(this);\n      if (a = this.div) for (; a.firstChild;) a.removeChild(a.firstChild);\n      this.legend && this.legend.destroy();\n    },\n    setMouseCursor: function (a) {\n      \"auto\" == a && d.isNN && (a = \"default\");\n      this.chartDiv.style.cursor = a;\n      this.legendDiv.style.cursor = a;\n    },\n    redrawLabels: function () {\n      this.labels = [];\n      var a = this.allLabels;\n      this.createLabelsSet();\n      var b;\n\n      for (b = 0; b < a.length; b++) this.drawLabel(a[b]);\n    },\n    drawLabel: function (a) {\n      if (this.container && !1 !== a.enabled) {\n        a = d.processObject(a, d.Label, this.theme);\n        var b = a.y,\n            c = a.text,\n            h = a.align,\n            f = a.size,\n            e = a.color,\n            g = a.rotation,\n            k = a.alpha,\n            l = a.bold,\n            m = d.toCoordinate(a.x, this.realWidth),\n            b = d.toCoordinate(b, this.realHeight);\n        m || (m = 0);\n        b || (b = 0);\n        void 0 === e && (e = this.color);\n        isNaN(f) && (f = this.fontSize);\n        h || (h = \"start\");\n        \"left\" == h && (h = \"start\");\n        \"right\" == h && (h = \"end\");\n        \"center\" == h && (h = \"middle\", g ? b = this.realHeight - b + b / 2 : m = this.realWidth / 2 - m);\n        void 0 === k && (k = 1);\n        void 0 === g && (g = 0);\n        b += f / 2;\n        c = d.text(this.container, c, e, this.fontFamily, f, h, l, k);\n        c.translate(m, b);\n        d.setCN(this, c, \"label\");\n        a.id && d.setCN(this, c, \"label-\" + a.id);\n        0 !== g && c.rotate(g);\n        a.url ? (c.setAttr(\"cursor\", \"pointer\"), c.click(function () {\n          d.getURL(a.url);\n        })) : c.node.style.pointerEvents = \"none\";\n        this.labelsSet.push(c);\n        this.labels.push(c);\n      }\n    },\n    addLabel: function (a, b, c, d, f, e, g, k, l, m) {\n      a = {\n        x: a,\n        y: b,\n        text: c,\n        align: d,\n        size: f,\n        color: e,\n        alpha: k,\n        rotation: g,\n        bold: l,\n        url: m,\n        enabled: !0\n      };\n      this.container && this.drawLabel(a);\n      this.allLabels.push(a);\n    },\n    clearLabels: function () {\n      var a = this.labels,\n          b;\n\n      for (b = a.length - 1; 0 <= b; b--) a[b].remove();\n\n      this.labels = [];\n      this.allLabels = [];\n    },\n    updateHeight: function () {\n      var a = this.divRealHeight,\n          b = this.legend;\n\n      if (b) {\n        var c = this.legendDiv.offsetHeight,\n            b = b.position;\n\n        if (\"top\" == b || \"bottom\" == b) {\n          a -= c;\n          if (0 > a || isNaN(a)) a = 0;\n          this.chartDiv.style.height = a + \"px\";\n        }\n      }\n\n      return a;\n    },\n    updateWidth: function () {\n      var a = this.divRealWidth,\n          b = this.divRealHeight,\n          c = this.legend;\n\n      if (c) {\n        var d = this.legendDiv,\n            f = d.offsetWidth;\n        isNaN(c.width) || (f = c.width);\n        c.ieW && (f = c.ieW);\n        var e = d.offsetHeight,\n            d = d.style,\n            g = this.chartDiv.style,\n            c = c.position;\n\n        if (\"right\" == c || \"left\" == c) {\n          a -= f;\n          if (0 > a || isNaN(a)) a = 0;\n          g.width = a + \"px\";\n          \"left\" == c ? (g.left = f + \"px\", d.left = \"0px\") : (g.left = \"0px\", d.left = a + \"px\");\n          b > e && (d.top = (b - e) / 2 + \"px\");\n        }\n      }\n\n      return a;\n    },\n    getTitleHeight: function () {\n      var a = 0,\n          b = this.titles,\n          c = !0;\n\n      if (0 < b.length) {\n        var a = 20,\n            d;\n\n        for (d = 0; d < b.length; d++) {\n          var f = b[d];\n          !1 !== f.enabled && (c = !1, f = f.size, isNaN(f) && (f = this.fontSize + 2), a += f + 6);\n        }\n\n        c && (a = 0);\n      }\n\n      return a;\n    },\n    addTitle: function (a, b, c, d, f) {\n      isNaN(b) && (b = this.fontSize + 2);\n      a = {\n        text: a,\n        size: b,\n        color: c,\n        alpha: d,\n        bold: f,\n        enabled: !0\n      };\n      this.titles.push(a);\n      return a;\n    },\n    handleWheel: function (a) {\n      var b = 0;\n      a || (a = window.event);\n      a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);\n      b && this.handleWheelReal(b, a.shiftKey);\n      a.preventDefault && a.preventDefault();\n    },\n    handleWheelReal: function () {},\n    addListeners: function () {\n      var a = this,\n          b = a.chartDiv;\n      document.addEventListener ? (a.panEventsEnabled && (b.style.msTouchAction = \"none\"), \"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function (b) {\n        a.handleTouchMove.call(a, b);\n        a.handleTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"touchmove\", function (b) {\n        a.handleTouchMove.call(a, b);\n      }, !0), b.addEventListener(\"touchend\", function (b) {\n        a.handleTouchEnd.call(a, b);\n      }, !0)), b.addEventListener(\"mousedown\", function (b) {\n        a.mouseIsOver = !0;\n        a.handleMouseMove.call(a, b);\n        a.handleMouseDown.call(a, b);\n      }, !0), b.addEventListener(\"mouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }, !0), b.addEventListener(\"mouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }, !0)) : (b.attachEvent(\"onmousedown\", function (b) {\n        a.handleMouseDown.call(a, b);\n      }), b.attachEvent(\"onmouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }), b.attachEvent(\"onmouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }));\n    },\n    dispDUpd: function () {\n      if (!this.skipEvents) {\n        var a;\n        this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, a = \"dataUpdated\", this.fire(a, {\n          type: a,\n          chart: this\n        }));\n        this.chartCreated || (a = \"init\", this.fire(a, {\n          type: a,\n          chart: this\n        }));\n        this.chartRendered || (a = \"rendered\", this.fire(a, {\n          type: a,\n          chart: this\n        }), this.chartRendered = !0);\n        a = \"drawn\";\n        this.fire(a, {\n          type: a,\n          chart: this\n        });\n      }\n\n      this.skipEvents = !1;\n    },\n    validateSize: function () {\n      var a = this;\n      a.premeasure();\n\n      if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {\n        var b = a.legend;\n\n        if (0 < a.realWidth && 0 < a.realHeight) {\n          a.sizeChanged = !0;\n\n          if (b) {\n            clearTimeout(a.legendInitTO);\n            var c = setTimeout(function () {\n              b.invalidateSize();\n            }, 100);\n            a.timeOuts.push(c);\n            a.legendInitTO = c;\n          }\n\n          \"xy\" != a.type ? a.marginsUpdated = !1 : (a.marginsUpdated = !0, a.selfZoom = !0);\n          clearTimeout(a.initTO);\n          c = setTimeout(function () {\n            a.initChart();\n          }, 10);\n          a.timeOuts.push(c);\n          a.initTO = c;\n        }\n\n        a.fire(\"resized\", {\n          type: \"resized\",\n          chart: a\n        });\n        a.renderFix();\n        b && b.renderFix && b.renderFix();\n        a.previousHeight = a.divRealHeight;\n        a.previousWidth = a.divRealWidth;\n      }\n    },\n    invalidateSize: function () {\n      this.previousHeight = this.previousWidth = NaN;\n      this.invalidateSizeReal();\n    },\n    invalidateSizeReal: function () {\n      var a = this;\n      a.marginsUpdated = !1;\n      clearTimeout(a.validateTO);\n      var b = setTimeout(function () {\n        a.validateSize();\n      }, 5);\n      a.timeOuts.push(b);\n      a.validateTO = b;\n    },\n    validateData: function (a) {\n      this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = \"xy\" != this.type ? !1 : !0, this.initChart(a));\n    },\n    validateNow: function (a, b) {\n      this.initTO && clearTimeout(this.initTO);\n      a && (this.dataChanged = !0);\n      this.skipEvents = b;\n      this.chartRendered = !1;\n      this.write(this.div);\n    },\n    showItem: function (a) {\n      a.hidden = !1;\n      this.initChart();\n    },\n    hideItem: function (a) {\n      a.hidden = !0;\n      this.initChart();\n    },\n    hideBalloon: function () {\n      var a = this;\n      clearTimeout(a.hoverInt);\n      clearTimeout(a.balloonTO);\n      a.hoverInt = setTimeout(function () {\n        a.hideBalloonReal.call(a);\n      }, a.hideBalloonTime);\n    },\n    cleanChart: function () {},\n    hideBalloonReal: function () {\n      var a = this.balloon;\n      a && a.hide();\n    },\n    showBalloon: function (a, b, c, d, f) {\n      var e = this;\n      clearTimeout(e.balloonTO);\n      clearTimeout(e.hoverInt);\n      e.balloonTO = setTimeout(function () {\n        e.showBalloonReal.call(e, a, b, c, d, f);\n      }, 1);\n    },\n    showBalloonReal: function (a, b, c, d, f) {\n      this.handleMouseMove();\n      var e = this.balloon;\n      e.enabled && (e.followCursor(!1), e.changeColor(b), !c || e.fixedPosition ? (e.setPosition(d, f), e.followCursor(!1)) : e.followCursor(!0), a && e.showBalloon(a));\n    },\n    handleTouchMove: function (a) {\n      this.hideBalloon();\n      var b = this.chartDiv;\n      a.touches && (a = a.touches.item(0), this.mouseX = a.pageX - d.findPosX(b), this.mouseY = a.pageY - d.findPosY(b));\n    },\n    handleMouseOver: function () {\n      this.outTO && clearTimeout(this.outTO);\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n    },\n    handleMouseOut: function () {\n      var a = this;\n      a.outTO && clearTimeout(a.outTO);\n      a.outTO = setTimeout(function () {\n        a.handleMouseOutReal();\n      }, 10);\n    },\n    handleMouseOutReal: function () {\n      d.resetMouseOver();\n      this.mouseIsOver = !1;\n    },\n    handleMouseMove: function (a) {\n      if (this.mouseIsOver) {\n        var b = this.chartDiv;\n        a || (a = window.event);\n        var c, h;\n\n        if (a) {\n          this.posX = d.findPosX(b);\n          this.posY = d.findPosY(b);\n\n          switch (this.mouseMode) {\n            case 1:\n              c = a.clientX - this.posX;\n              h = a.clientY - this.posY;\n\n              if (!this.divIsFixed) {\n                var b = document.body,\n                    f,\n                    e,\n                    g,\n                    k;\n                b && (f = b.scrollLeft, g = b.scrollTop);\n                if (b = document.documentElement) e = b.scrollLeft, k = b.scrollTop;\n                f = Math.max(f, e);\n                g = Math.max(g, k);\n                c += f;\n                h += g;\n              }\n\n              break;\n\n            case 0:\n              this.divIsFixed ? (c = a.clientX - this.posX, h = a.clientY - this.posY) : (c = a.pageX - this.posX, h = a.pageY - this.posY);\n          }\n\n          a.touches && (a = a.touches.item(0), c = a.pageX - this.posX, h = a.pageY - this.posY);\n          this.mouseX = c - this.dmouseX;\n          this.mouseY = h - this.dmouseY;\n        }\n      }\n    },\n    handleTouchStart: function (a) {\n      this.handleMouseDown(a);\n    },\n    handleTouchEnd: function (a) {\n      d.resetMouseOver();\n      this.handleReleaseOutside(a);\n    },\n    handleReleaseOutside: function () {},\n    handleMouseDown: function (a) {\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n      a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault());\n    },\n    addLegend: function (a, b) {\n      a = d.processObject(a, d.AmLegend, this.theme);\n      a.divId = b;\n      var c;\n      c = \"object\" != typeof b && b ? document.getElementById(b) : b;\n      this.legend = a;\n      a.chart = this;\n      c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;\n      c = this.handleLegendEvent;\n      this.listenTo(a, \"showItem\", c);\n      this.listenTo(a, \"hideItem\", c);\n      this.listenTo(a, \"clickMarker\", c);\n      this.listenTo(a, \"rollOverItem\", c);\n      this.listenTo(a, \"rollOutItem\", c);\n      this.listenTo(a, \"rollOverMarker\", c);\n      this.listenTo(a, \"rollOutMarker\", c);\n      this.listenTo(a, \"clickLabel\", c);\n      return a;\n    },\n    removeLegend: function () {\n      this.legend = void 0;\n      this.legendDiv.innerHTML = \"\";\n    },\n    handleResize: function () {\n      (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal();\n      this.renderFix();\n    },\n    renderFix: function () {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    getSVG: function () {\n      if (d.hasSVG) return this.container;\n    },\n    animate: function (a, b, c, h, f, e, g) {\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: c,\n        to: h,\n        time: f,\n        effect: e,\n        suffix: g\n      };\n      a[\"an_\" + b] = c;\n      this.animations.push(c);\n      return c;\n    },\n    setLegendData: function (a) {\n      var b = this.legend;\n      b && b.setData(a);\n    },\n    stopAnim: function (a) {\n      d.removeFromArray(this.animations, a);\n    },\n    updateAnimations: function () {\n      var a;\n      this.container && this.container.update();\n      if (this.animations) for (a = this.animations.length - 1; 0 <= a; a--) {\n        var b = this.animations[a],\n            c = 1E3 * b.time / d.updateRate,\n            h = b.frame + 1,\n            f = b.obj,\n            e = b.attribute;\n\n        if (h <= c) {\n          b.frame++;\n          var g = Number(b.from),\n              k = Number(b.to) - g,\n              c = d[b.effect](0, h, g, k, c);\n          0 === k ? (this.animations.splice(a, 1), f.node.style[e] = Number(b.to) + b.suffix) : f.node.style[e] = c + b.suffix;\n        } else f.node.style[e] = Number(b.to) + b.suffix, this.animations.splice(a, 1);\n      }\n    },\n    update: function () {\n      this.updateAnimations();\n    },\n    inIframe: function () {\n      try {\n        return window.self !== window.top;\n      } catch (a) {\n        return !0;\n      }\n    },\n    brr: function () {\n      var a = window.location.hostname.split(\".\"),\n          b;\n      2 <= a.length && (b = a[a.length - 2] + \".\" + a[a.length - 1]);\n      this.amLink && (a = this.amLink.parentNode) && a.removeChild(this.amLink);\n      a = this.creditsPosition;\n\n      if (\"amcharts.com\" != b || !0 === this.inIframe()) {\n        var c = b = 0,\n            d = this.realWidth,\n            f = this.realHeight,\n            e = this.type;\n        if (\"serial\" == e || \"xy\" == e || \"gantt\" == e) b = this.marginLeftReal, c = this.marginTopReal, d = b + this.plotAreaWidth, f = c + this.plotAreaHeight;\n        var g = \"http://www.amcharts.com/javascript-charts/\",\n            k = \"JavaScript charts\",\n            l = \"JS chart by amCharts\";\n        \"ammap\" == this.product && (g = \"http://www.ammap.com/javascript-maps/\", k = \"Interactive JavaScript maps\", l = \"JS map by amCharts\");\n        e = document.createElement(\"a\");\n        l = document.createTextNode(l);\n        e.setAttribute(\"href\", g);\n        e.setAttribute(\"title\", k);\n        e.appendChild(l);\n        this.chartDiv.appendChild(e);\n        this.amLink = e;\n        g = e.style;\n        g.position = \"absolute\";\n        g.textDecoration = \"none\";\n        g.color = this.color;\n        g.fontFamily = this.fontFamily;\n        g.fontSize = this.fontSize + \"px\";\n        g.opacity = .7;\n        g.display = \"block\";\n        var k = e.offsetWidth,\n            e = e.offsetHeight,\n            l = 5 + b,\n            m = c + 5;\n        \"bottom-left\" == a && (l = 5 + b, m = f - e - 3);\n        \"bottom-right\" == a && (l = d - k - 5, m = f - e - 3);\n        \"top-right\" == a && (l = d - k - 5, m = c + 5);\n        g.left = l + \"px\";\n        g.top = m + \"px\";\n      }\n    }\n  });\n  d.Slice = d.Class({\n    construct: function () {}\n  });\n  d.SerialDataItem = d.Class({\n    construct: function () {}\n  });\n  d.GraphDataItem = d.Class({\n    construct: function () {}\n  });\n  d.Guide = d.Class({\n    construct: function (a) {\n      this.cname = \"Guide\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Title = d.Class({\n    construct: function (a) {\n      this.cname = \"Title\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Label = d.Class({\n    construct: function (a) {\n      this.cname = \"Label\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmBalloon = d.Class({\n    construct: function (a) {\n      this.cname = \"AmBalloon\";\n      this.enabled = !0;\n      this.fillColor = \"#FFFFFF\";\n      this.fillAlpha = .8;\n      this.borderThickness = 2;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = 1;\n      this.cornerRadius = 0;\n      this.maxWidth = 220;\n      this.horizontalPadding = 8;\n      this.verticalPadding = 4;\n      this.pointerWidth = 6;\n      this.pointerOrientation = \"V\";\n      this.color = \"#000000\";\n      this.adjustBorderColor = !0;\n      this.show = this.follow = this.showBullet = !1;\n      this.bulletSize = 3;\n      this.shadowAlpha = .4;\n      this.shadowColor = \"#000000\";\n      this.fadeOutDuration = this.animationDuration = .3;\n      this.fixedPosition = !1;\n      this.offsetY = 6;\n      this.offsetX = 1;\n      this.textAlign = \"center\";\n      d.isModern || (this.offsetY *= 1.5);\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      var a = this.pointToX,\n          b = this.pointToY;\n      this.deltaSignX = this.deltaSignY = 1;\n      var c = this.chart;\n      d.VML && (this.fadeOutDuration = 0);\n      this.xAnim && c.stopAnim(this.xAnim);\n      this.yAnim && c.stopAnim(this.yAnim);\n\n      if (!isNaN(a)) {\n        var h = this.follow,\n            f = c.container,\n            e = this.set;\n        d.remove(e);\n        this.removeDiv();\n        e = f.set();\n        e.node.style.pointerEvents = \"none\";\n        this.set = e;\n        c.balloonsSet.push(e);\n\n        if (this.show) {\n          var g = this.l,\n              k = this.t,\n              l = this.r,\n              m = this.b,\n              n = this.balloonColor,\n              p = this.fillColor,\n              u = this.borderColor,\n              r = p;\n          void 0 != n && (this.adjustBorderColor ? r = u = n : p = n);\n          var A = this.horizontalPadding,\n              B = this.verticalPadding,\n              w = this.pointerWidth,\n              D = this.pointerOrientation,\n              x = this.cornerRadius,\n              y = c.fontFamily,\n              q = this.fontSize;\n          void 0 == q && (q = c.fontSize);\n          var n = document.createElement(\"div\"),\n              v = c.classNamePrefix;\n          n.className = v + \"-balloon-div\";\n          this.className && (n.className = n.className + \" \" + v + \"-balloon-div-\" + this.className);\n          v = n.style;\n          v.pointerEvents = \"none\";\n          v.position = \"absolute\";\n          var t = this.minWidth,\n              z = \"\";\n          isNaN(t) || (z = \"min-width:\" + (t - 2 * A) + \"px; \");\n          n.innerHTML = \"<div style='text-align:\" + this.textAlign + \"; \" + z + \"max-width:\" + this.maxWidth + \"px; font-size:\" + q + \"px; color:\" + this.color + \"; font-family:\" + y + \"'>\" + this.text + \"</div>\";\n          c.chartDiv.appendChild(n);\n          this.textDiv = n;\n          q = n.offsetWidth;\n          y = n.offsetHeight;\n          n.clientHeight && (q = n.clientWidth, y = n.clientHeight);\n          y += 2 * B;\n          z = q + 2 * A;\n          !isNaN(t) && z < t && (z = t);\n          window.opera && (y += 2);\n          var C = !1,\n              q = this.offsetY;\n          c.handDrawn && (q += c.handDrawScatter + 2);\n          \"H\" != D ? (t = a - z / 2, b < k + y + 10 && \"down\" != D ? (C = !0, h && (b += q), q = b + w, this.deltaSignY = -1) : (h && (b -= q), q = b - y - w, this.deltaSignY = 1)) : (2 * w > y && (w = y / 2), q = b - y / 2, a < g + (l - g) / 2 ? (t = a + w, this.deltaSignX = -1) : (t = a - z - w, this.deltaSignX = 1));\n          q + y >= m && (q = m - y);\n          q < k && (q = k);\n          t < g && (t = g);\n          t + z > l && (t = l - z);\n          var k = q + B,\n              m = t + A,\n              B = this.shadowAlpha,\n              G = this.shadowColor,\n              A = this.borderThickness,\n              E = this.bulletSize,\n              F;\n          0 < x || 0 === w ? (0 < B && (a = d.rect(f, z, y, p, 0, A + 1, G, B, this.cornerRadius), d.isModern ? a.translate(1, 1) : a.translate(4, 4), e.push(a)), p = d.rect(f, z, y, p, this.fillAlpha, A, u, this.borderAlpha, this.cornerRadius), this.showBullet && (F = d.circle(f, E, r, this.fillAlpha), e.push(F))) : (r = [], x = [], \"H\" != D ? (g = a - t, g > z - w && (g = z - w), g < w && (g = w), r = [0, g - w, a - t, g + w, z, z, 0, 0], x = C ? [0, 0, b - q, 0, 0, y, y, 0] : [y, y, b - q, y, y, 0, 0, y]) : (r = b - q, r > y - w && (r = y - w), r < w && (r = w), x = [0, r - w, b - q, r + w, y, y, 0, 0], r = a < g + (l - g) / 2 ? [0, 0, t < a ? 0 : a - t, 0, 0, z, z, 0] : [z, z, t + z > a ? z : a - t, z, z, 0, 0, z]), 0 < B && (a = d.polygon(f, r, x, p, 0, A, G, B), a.translate(1, 1), e.push(a)), p = d.polygon(f, r, x, p, this.fillAlpha, A, u, this.borderAlpha));\n          this.bg = p;\n          e.push(p);\n          p.toFront();\n          d.setCN(c, p, \"balloon-bg\");\n          this.className && d.setCN(c, p, \"balloon-bg-\" + this.className);\n          f = 1 * this.deltaSignX;\n          v.left = m + \"px\";\n          v.top = k + \"px\";\n          e.translate(t - f, q);\n          p = p.getBBox();\n          this.bottom = q + y + 1;\n          this.yPos = p.y + q;\n          F && F.translate(this.pointToX - t + f, b - q);\n          b = this.animationDuration;\n          0 < this.animationDuration && !h && !isNaN(this.prevX) && (e.translate(this.prevX, this.prevY), e.animate({\n            translate: t - f + \",\" + q\n          }, b, \"easeOutSine\"), n && (v.left = this.prevTX + \"px\", v.top = this.prevTY + \"px\", this.xAnim = c.animate({\n            node: n\n          }, \"left\", this.prevTX, m, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({\n            node: n\n          }, \"top\", this.prevTY, k, b, \"easeOutSine\", \"px\")));\n          this.prevX = t - f;\n          this.prevY = q;\n          this.prevTX = m;\n          this.prevTY = k;\n        }\n      }\n    },\n    followMouse: function () {\n      if (this.follow && this.show) {\n        var a = this.chart.mouseX - this.offsetX * this.deltaSignX,\n            b = this.chart.mouseY;\n        this.pointToX = a;\n        this.pointToY = b;\n        if (a != this.previousX || b != this.previousY) if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();else {\n          var c = this.set;\n\n          if (c) {\n            var d = c.getBBox(),\n                a = a - d.width / 2,\n                f = b - d.height - 10;\n            a < this.l && (a = this.l);\n            a > this.r - d.width && (a = this.r - d.width);\n            f < this.t && (f = b + 10);\n            c.translate(a, f);\n            b = this.textDiv.style;\n            b.left = a + this.horizontalPadding + \"px\";\n            b.top = f + this.verticalPadding + \"px\";\n          }\n        }\n      }\n    },\n    changeColor: function (a) {\n      this.balloonColor = a;\n    },\n    setBounds: function (a, b, c, d) {\n      this.l = a;\n      this.t = b;\n      this.r = c;\n      this.b = d;\n      this.destroyTO && clearTimeout(this.destroyTO);\n    },\n    showBalloon: function (a) {\n      this.text = a;\n      this.show = !0;\n      this.destroyTO && clearTimeout(this.destroyTO);\n      a = this.chart;\n      this.fadeAnim1 && a.stopAnim(this.fadeAnim1);\n      this.fadeAnim2 && a.stopAnim(this.fadeAnim2);\n      this.draw();\n    },\n    hide: function () {\n      var a = this,\n          b = a.fadeOutDuration,\n          c = a.chart;\n\n      if (0 < b) {\n        a.destroyTO = setTimeout(function () {\n          a.destroy.call(a);\n        }, 1E3 * b);\n        a.follow = !1;\n        a.show = !1;\n        var d = a.set;\n        d && (d.setAttr(\"opacity\", a.fillAlpha), a.fadeAnim1 = d.animate({\n          opacity: 0\n        }, b, \"easeInSine\"));\n        a.textDiv && (a.fadeAnim2 = c.animate({\n          node: a.textDiv\n        }, \"opacity\", 1, 0, b, \"easeInSine\", \"\"));\n      } else a.show = !1, a.follow = !1, a.destroy();\n    },\n    setPosition: function (a, b, c) {\n      this.pointToX = a;\n      this.pointToY = b;\n      c && (a == this.previousX && b == this.previousY || this.draw());\n      this.previousX = a;\n      this.previousY = b;\n    },\n    followCursor: function (a) {\n      var b = this;\n      (b.follow = a) ? (b.pShowBullet = b.showBullet, b.showBullet = !1) : void 0 !== b.pShowBullet && (b.showBullet = b.pShowBullet);\n      clearInterval(b.interval);\n      var c = b.chart.mouseX,\n          d = b.chart.mouseY;\n      !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), b.interval = setInterval(function () {\n        b.followMouse.call(b);\n      }, 40));\n    },\n    removeDiv: function () {\n      if (this.textDiv) {\n        var a = this.textDiv.parentNode;\n        a && a.removeChild(this.textDiv);\n      }\n    },\n    destroy: function () {\n      clearInterval(this.interval);\n      d.remove(this.set);\n      this.removeDiv();\n      this.set = null;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.circle = function (a, b, c, h, f, e, g, k, l) {\n    0 >= b && (b = .001);\n    if (void 0 == f || 0 === f) f = .01;\n    void 0 === e && (e = \"#000000\");\n    void 0 === g && (g = 0);\n    h = {\n      fill: c,\n      stroke: e,\n      \"fill-opacity\": h,\n      \"stroke-width\": f,\n      \"stroke-opacity\": g\n    };\n    a = isNaN(l) ? a.circle(0, 0, b).attr(h) : a.ellipse(0, 0, b, l).attr(h);\n    k && a.gradient(\"radialGradient\", [c, d.adjustLuminosity(c, -.6)]);\n    return a;\n  };\n\n  d.text = function (a, b, c, h, f, e, g, k) {\n    e || (e = \"middle\");\n    \"right\" == e && (e = \"end\");\n    \"left\" == e && (e = \"start\");\n    isNaN(k) && (k = 1);\n    void 0 !== b && (b = String(b), d.isIE && !d.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));\n    c = {\n      fill: c,\n      \"font-family\": h,\n      \"font-size\": f,\n      opacity: k\n    };\n    !0 === g && (c[\"font-weight\"] = \"bold\");\n    c[\"text-anchor\"] = e;\n    return a.text(b, c);\n  };\n\n  d.polygon = function (a, b, c, h, f, e, g, k, l, m, n) {\n    isNaN(e) && (e = .01);\n    isNaN(k) && (k = f);\n    var p = h,\n        u = !1;\n    \"object\" == typeof p && 1 < p.length && (u = !0, p = p[0]);\n    void 0 === g && (g = p);\n    f = {\n      fill: p,\n      stroke: g,\n      \"fill-opacity\": f,\n      \"stroke-width\": e,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (f[\"stroke-dasharray\"] = n);\n    n = d.dx;\n    e = d.dy;\n    a.handDrawn && (c = d.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);\n    g = Math.round;\n    m && (g = d.doNothing);\n    m = \"M\" + (g(b[0]) + n) + \",\" + (g(c[0]) + e);\n\n    for (k = 1; k < b.length; k++) m += \" L\" + (g(b[k]) + n) + \",\" + (g(c[k]) + e);\n\n    a = a.path(m + \" Z\").attr(f);\n    u && a.gradient(\"linearGradient\", h, l);\n    return a;\n  };\n\n  d.rect = function (a, b, c, h, f, e, g, k, l, m, n) {\n    if (isNaN(b) || isNaN(c)) return a.set();\n    isNaN(e) && (e = 0);\n    void 0 === l && (l = 0);\n    void 0 === m && (m = 270);\n    isNaN(f) && (f = 0);\n    var p = h,\n        u = !1;\n    \"object\" == typeof p && (p = p[0], u = !0);\n    void 0 === g && (g = p);\n    void 0 === k && (k = f);\n    b = Math.round(b);\n    c = Math.round(c);\n    var r = 0,\n        A = 0;\n    0 > b && (b = Math.abs(b), r = -b);\n    0 > c && (c = Math.abs(c), A = -c);\n    r += d.dx;\n    A += d.dy;\n    f = {\n      fill: p,\n      stroke: g,\n      \"fill-opacity\": f,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (f[\"stroke-dasharray\"] = n);\n    a = a.rect(r, A, b, c, l, e).attr(f);\n    u && a.gradient(\"linearGradient\", h, m);\n    return a;\n  };\n\n  d.bullet = function (a, b, c, h, f, e, g, k, l, m, n) {\n    var p;\n    \"circle\" == b && (b = \"round\");\n\n    switch (b) {\n      case \"round\":\n        p = d.circle(a, c / 2, h, f, e, g, k);\n        break;\n\n      case \"square\":\n        p = d.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], h, f, e, g, k, m - 180);\n        break;\n\n      case \"rectangle\":\n        p = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], h, f, e, g, k, m - 180);\n        break;\n\n      case \"diamond\":\n        p = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], h, f, e, g, k);\n        break;\n\n      case \"triangleUp\":\n        p = d.triangle(a, c, 0, h, f, e, g, k);\n        break;\n\n      case \"triangleDown\":\n        p = d.triangle(a, c, 180, h, f, e, g, k);\n        break;\n\n      case \"triangleLeft\":\n        p = d.triangle(a, c, 270, h, f, e, g, k);\n        break;\n\n      case \"triangleRight\":\n        p = d.triangle(a, c, 90, h, f, e, g, k);\n        break;\n\n      case \"bubble\":\n        p = d.circle(a, c / 2, h, f, e, g, k, !0);\n        break;\n\n      case \"line\":\n        p = d.line(a, [-c / 2, c / 2], [0, 0], h, f, e, g, k);\n        break;\n\n      case \"yError\":\n        p = a.set();\n        p.push(d.line(a, [0, 0], [-c / 2, c / 2], h, f, e));\n        p.push(d.line(a, [-l, l], [-c / 2, -c / 2], h, f, e));\n        p.push(d.line(a, [-l, l], [c / 2, c / 2], h, f, e));\n        break;\n\n      case \"xError\":\n        p = a.set(), p.push(d.line(a, [-c / 2, c / 2], [0, 0], h, f, e)), p.push(d.line(a, [-c / 2, -c / 2], [-l, l], h, f, e)), p.push(d.line(a, [c / 2, c / 2], [-l, l], h, f, e));\n    }\n\n    p && p.pattern(n);\n    return p;\n  };\n\n  d.triangle = function (a, b, c, d, f, e, g, k) {\n    if (void 0 === e || 0 === e) e = 1;\n    void 0 === g && (g = \"#000\");\n    void 0 === k && (k = 0);\n    d = {\n      fill: d,\n      stroke: g,\n      \"fill-opacity\": f,\n      \"stroke-width\": e,\n      \"stroke-opacity\": k\n    };\n    b /= 2;\n    var l;\n    0 === c && (l = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");\n    180 == c && (l = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    90 == c && (l = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");\n    270 == c && (l = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    return a.path(l).attr(d);\n  };\n\n  d.line = function (a, b, c, h, f, e, g, k, l, m, n) {\n    if (a.handDrawn && !n) return d.handDrawnLine(a, b, c, h, f, e, g, k, l, m, n);\n    e = {\n      fill: \"none\",\n      \"stroke-width\": e\n    };\n    void 0 !== g && 0 < g && (e[\"stroke-dasharray\"] = g);\n    isNaN(f) || (e[\"stroke-opacity\"] = f);\n    h && (e.stroke = h);\n    h = Math.round;\n    m && (h = d.doNothing);\n    m = d.dx;\n    f = d.dy;\n    g = \"M\" + (h(b[0]) + m) + \",\" + (h(c[0]) + f);\n\n    for (k = 1; k < b.length; k++) g += \" L\" + (h(b[k]) + m) + \",\" + (h(c[k]) + f);\n\n    if (d.VML) return a.path(g, void 0, !0).attr(e);\n    l && (g += \" M0,0 L0,0\");\n    return a.path(g).attr(e);\n  };\n\n  d.makeHD = function (a, b, c) {\n    for (var d = [], f = [], e = 1; e < a.length; e++) for (var g = Number(a[e - 1]), k = Number(b[e - 1]), l = Number(a[e]), m = Number(b[e]), n = Math.sqrt(Math.pow(l - g, 2) + Math.pow(m - k, 2)), n = Math.round(n / 50) + 1, l = (l - g) / n, m = (m - k) / n, p = 0; p <= n; p++) {\n      var u = g + p * l + Math.random() * c,\n          r = k + p * m + Math.random() * c;\n      d.push(u);\n      f.push(r);\n    }\n\n    return [d, f];\n  };\n\n  d.handDrawnLine = function (a, b, c, h, f, e, g, k, l, m) {\n    var n,\n        p = a.set();\n\n    for (n = 1; n < b.length; n++) for (var u = [b[n - 1], b[n]], r = [c[n - 1], c[n]], r = d.makeHD(u, r, a.handDrawScatter), u = r[0], r = r[1], A = 1; A < u.length; A++) p.push(d.line(a, [u[A - 1], u[A]], [r[A - 1], r[A]], h, f, e + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, k, l, m, !0));\n\n    return p;\n  };\n\n  d.doNothing = function (a) {\n    return a;\n  };\n\n  d.wedge = function (a, b, c, h, f, e, g, k, l, m, n, p) {\n    var u = Math.round;\n    e = u(e);\n    g = u(g);\n    k = u(k);\n    var r = u(g / e * k),\n        A = d.VML,\n        B = 359.5 + e / 100;\n    359.94 < B && (B = 359.94);\n    f >= B && (f = B);\n    var w = 1 / 180 * Math.PI,\n        B = b + Math.sin(h * w) * k,\n        D = c - Math.cos(h * w) * r,\n        x = b + Math.sin(h * w) * e,\n        y = c - Math.cos(h * w) * g,\n        q = b + Math.sin((h + f) * w) * e,\n        v = c - Math.cos((h + f) * w) * g,\n        t = b + Math.sin((h + f) * w) * k,\n        w = c - Math.cos((h + f) * w) * r,\n        z = {\n      fill: d.adjustLuminosity(m.fill, -.2),\n      \"stroke-opacity\": 0,\n      \"fill-opacity\": m[\"fill-opacity\"]\n    },\n        C = 0;\n    180 < Math.abs(f) && (C = 1);\n    h = a.set();\n    var G;\n    A && (B = u(10 * B), x = u(10 * x), q = u(10 * q), t = u(10 * t), D = u(10 * D), y = u(10 * y), v = u(10 * v), w = u(10 * w), b = u(10 * b), l = u(10 * l), c = u(10 * c), e *= 10, g *= 10, k *= 10, r *= 10, 1 > Math.abs(f) && 1 >= Math.abs(q - x) && 1 >= Math.abs(v - y) && (G = !0));\n    f = \"\";\n    var E;\n    p && (z[\"fill-opacity\"] = 0, z[\"stroke-opacity\"] = m[\"stroke-opacity\"] / 2, z.stroke = m.stroke);\n    0 < l && (E = \" M\" + B + \",\" + (D + l) + \" L\" + x + \",\" + (y + l), A ? (G || (E += \" A\" + (b - e) + \",\" + (l + c - g) + \",\" + (b + e) + \",\" + (l + c + g) + \",\" + x + \",\" + (y + l) + \",\" + q + \",\" + (v + l)), E += \" L\" + t + \",\" + (w + l), 0 < k && (G || (E += \" B\" + (b - k) + \",\" + (l + c - r) + \",\" + (b + k) + \",\" + (l + c + r) + \",\" + t + \",\" + (l + w) + \",\" + B + \",\" + (l + D)))) : (E += \" A\" + e + \",\" + g + \",0,\" + C + \",1,\" + q + \",\" + (v + l) + \" L\" + t + \",\" + (w + l), 0 < k && (E += \" A\" + k + \",\" + r + \",0,\" + C + \",0,\" + B + \",\" + (D + l))), E = a.path(E + \" Z\", void 0, void 0, \"1000,1000\").attr(z), h.push(E), E = a.path(\" M\" + B + \",\" + D + \" L\" + B + \",\" + (D + l) + \" L\" + x + \",\" + (y + l) + \" L\" + x + \",\" + y + \" L\" + B + \",\" + D + \" Z\", void 0, void 0, \"1000,1000\").attr(z), l = a.path(\" M\" + q + \",\" + v + \" L\" + q + \",\" + (v + l) + \" L\" + t + \",\" + (w + l) + \" L\" + t + \",\" + w + \" L\" + q + \",\" + v + \" Z\", void 0, void 0, \"1000,1000\").attr(z), h.push(E), h.push(l));\n    A ? (G || (f = \" A\" + u(b - e) + \",\" + u(c - g) + \",\" + u(b + e) + \",\" + u(c + g) + \",\" + u(x) + \",\" + u(y) + \",\" + u(q) + \",\" + u(v)), e = \" M\" + u(B) + \",\" + u(D) + \" L\" + u(x) + \",\" + u(y) + f + \" L\" + u(t) + \",\" + u(w)) : e = \" M\" + B + \",\" + D + \" L\" + x + \",\" + y + (\" A\" + e + \",\" + g + \",0,\" + C + \",1,\" + q + \",\" + v) + \" L\" + t + \",\" + w;\n    0 < k && (A ? G || (e += \" B\" + (b - k) + \",\" + (c - r) + \",\" + (b + k) + \",\" + (c + r) + \",\" + t + \",\" + w + \",\" + B + \",\" + D) : e += \" A\" + k + \",\" + r + \",0,\" + C + \",0,\" + B + \",\" + D);\n    a.handDrawn && (b = d.line(a, [B, x], [D, y], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m[\"stroke-opacity\"]), h.push(b));\n    a = a.path(e + \" Z\", void 0, void 0, \"1000,1000\").attr(m);\n\n    if (n) {\n      b = [];\n\n      for (c = 0; c < n.length; c++) b.push(d.adjustLuminosity(m.fill, n[c]));\n\n      0 < b.length && a.gradient(\"linearGradient\", b);\n    }\n\n    a.pattern(p);\n    h.wedge = a;\n    h.push(a);\n    return h;\n  };\n\n  d.adjustLuminosity = function (a, b) {\n    a = String(a).replace(/[^0-9a-f]/gi, \"\");\n    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\n    b = b || 0;\n    var c = \"#\",\n        d,\n        f;\n\n    for (f = 0; 3 > f; f++) d = parseInt(a.substr(2 * f, 2), 16), d = Math.round(Math.min(Math.max(0, d + d * b), 255)).toString(16), c += (\"00\" + d).substr(d.length);\n\n    return c;\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmLegend = d.Class({\n    construct: function (a) {\n      this.enabled = !0;\n      this.cname = \"AmLegend\";\n      this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"rollOverItem\", \"rollOutItem\", \"clickLabel\");\n      this.position = \"bottom\";\n      this.borderColor = this.color = \"#000000\";\n      this.borderAlpha = 0;\n      this.markerLabelGap = 5;\n      this.verticalGap = 10;\n      this.align = \"left\";\n      this.horizontalGap = 0;\n      this.spacing = 10;\n      this.markerDisabledColor = \"#AAB3B3\";\n      this.markerType = \"square\";\n      this.markerSize = 16;\n      this.markerBorderThickness = this.markerBorderAlpha = 1;\n      this.marginBottom = this.marginTop = 0;\n      this.marginLeft = this.marginRight = 20;\n      this.autoMargins = !0;\n      this.valueWidth = 50;\n      this.switchable = !0;\n      this.switchType = \"x\";\n      this.switchColor = \"#FFFFFF\";\n      this.rollOverColor = \"#CC0000\";\n      this.reversedOrder = !1;\n      this.labelText = \"[[title]]\";\n      this.valueText = \"[[value]]\";\n      this.useMarkerColorForLabels = !1;\n      this.rollOverGraphAlpha = 1;\n      this.textClickEnabled = !1;\n      this.equalWidths = !0;\n      this.dateFormat = \"DD-MM-YYYY\";\n      this.backgroundColor = \"#FFFFFF\";\n      this.backgroundAlpha = 0;\n      this.useGraphSettings = !1;\n      this.showEntries = !0;\n      d.applyTheme(this, a, this.cname);\n    },\n    setData: function (a) {\n      this.legendData = a;\n      this.invalidateSize();\n    },\n    invalidateSize: function () {\n      this.destroy();\n      this.entries = [];\n      this.valueLabels = [];\n      var a = this.legendData;\n      this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend();\n    },\n    drawLegend: function () {\n      var a = this.chart,\n          b = this.position,\n          c = this.width,\n          h = a.divRealWidth,\n          f = a.divRealHeight,\n          e = this.div,\n          g = this.legendData;\n      this.data && (g = this.data);\n      isNaN(this.fontSize) && (this.fontSize = a.fontSize);\n      if (\"right\" == b || \"left\" == b) this.maxColumns = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);else if (this.autoMargins) {\n        this.marginRight = a.marginRight;\n        this.marginLeft = a.marginLeft;\n        var k = a.autoMarginOffset;\n        \"bottom\" == b ? (this.marginBottom = k, this.marginTop = 0) : (this.marginTop = k, this.marginBottom = 0);\n      }\n      c = void 0 !== c ? d.toCoordinate(c, h) : a.realWidth;\n      \"outside\" == b ? (c = e.offsetWidth, f = e.offsetHeight, e.clientHeight && (c = e.clientWidth, f = e.clientHeight)) : (isNaN(c) || (e.style.width = c + \"px\"), e.className = \"amChartsLegend \" + a.classNamePrefix + \"-legend-div\");\n      this.divWidth = c;\n      (b = this.container) ? (b.container.innerHTML = \"\", e.appendChild(b.container), b.width = c, b.height = f, b.addDefs(a)) : b = new d.AmDraw(e, c, f, a);\n      this.container = b;\n      this.lx = 0;\n      this.ly = 8;\n      f = this.markerSize;\n      f > this.fontSize && (this.ly = f / 2 - 1);\n      0 < f && (this.lx += f + this.markerLabelGap);\n      this.titleWidth = 0;\n      if (f = this.title) f = d.text(this.container, f, this.color, a.fontFamily, this.fontSize, \"start\", !0), d.setCN(a, f, \"legend-title\"), f.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = f.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6;\n      this.index = this.maxLabelWidth = 0;\n\n      if (this.showEntries) {\n        for (a = 0; a < g.length; a++) this.createEntry(g[a]);\n\n        for (a = this.index = 0; a < g.length; a++) this.createValue(g[a]);\n      }\n\n      this.arrangeEntries();\n      this.updateValues();\n    },\n    arrangeEntries: function () {\n      var a = this.position,\n          b = this.marginLeft + this.titleWidth,\n          c = this.marginRight,\n          h = this.marginTop,\n          f = this.marginBottom,\n          e = this.horizontalGap,\n          g = this.div,\n          k = this.divWidth,\n          l = this.maxColumns,\n          m = this.verticalGap,\n          n = this.spacing,\n          p = k - c - b,\n          u = 0,\n          r = 0,\n          A = this.container;\n      this.set && this.set.remove();\n      var B = A.set();\n      this.set = B;\n      var w = A.set();\n      B.push(w);\n      var D = this.entries,\n          x,\n          y;\n\n      for (y = 0; y < D.length; y++) {\n        x = D[y].getBBox();\n        var q = x.width;\n        q > u && (u = q);\n        x = x.height;\n        x > r && (r = x);\n      }\n\n      var q = r = 0,\n          v = e,\n          t = 0,\n          z = 0;\n\n      for (y = 0; y < D.length; y++) {\n        var C = D[y];\n        this.reversedOrder && (C = D[D.length - y - 1]);\n        x = C.getBBox();\n        var G;\n        this.equalWidths ? G = e + q * (u + n + this.markerLabelGap) : (G = v, v = v + x.width + e + n);\n        x.height > z && (z = x.height);\n        G + x.width > p && 0 < y && 0 !== q && (r++, q = 0, G = e, v = G + x.width + e + n, t = t + z + m, z = 0);\n        C.translate(G, t);\n        q++;\n        !isNaN(l) && q >= l && (q = 0, r++, t = t + z + m, z = 0);\n        w.push(C);\n      }\n\n      x = w.getBBox();\n      l = x.height + 2 * m - 1;\n      \"left\" == a || \"right\" == a ? (n = x.width + 2 * e, k = n + b + c, g.style.width = k + \"px\", this.ieW = k) : n = k - b - c - 1;\n      c = d.polygon(this.container, [0, n, n, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this.chart, c, \"legend-bg\");\n      B.push(c);\n      B.translate(b, h);\n      c.toBack();\n      b = e;\n      if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = e + (n - x.width) / 2 : \"right\" == this.align && (b = e + n - x.width);\n      w.translate(b, m + 1);\n      this.titleHeight > l && (l = this.titleHeight);\n      a = l + h + f + 1;\n      0 > a && (a = 0);\n      a > this.chart.divRealHeight && (g.style.top = \"0px\");\n      g.style.height = Math.round(a) + \"px\";\n      A.setSize(this.divWidth, a);\n    },\n    createEntry: function (a) {\n      if (!1 !== a.visibleInLegend) {\n        var b = this.chart,\n            c = a.markerType;\n        a.legendEntryWidth = this.markerSize;\n        c || (c = this.markerType);\n        var h = a.color,\n            f = a.alpha;\n        a.legendKeyColor && (h = a.legendKeyColor());\n        a.legendKeyAlpha && (f = a.legendKeyAlpha());\n        var e;\n        !0 === a.hidden && (e = h = this.markerDisabledColor);\n        var g = a.pattern,\n            k = a.customMarker;\n        k || (k = this.customMarker);\n        var l = this.container,\n            m = this.markerSize,\n            n = 0,\n            p = 0,\n            u = m / 2;\n\n        if (this.useGraphSettings) {\n          c = a.type;\n          this.switchType = void 0;\n          if (\"line\" == c || \"step\" == c || \"smoothedLine\" == c || \"ohlc\" == c) g = l.set(), a.hidden || (h = a.lineColorR, e = a.bulletBorderColorR), n = d.line(l, [0, 2 * m], [m / 2, m / 2], h, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(b, n, \"graph-stroke\"), g.push(n), a.bullet && (a.hidden || (h = a.bulletColorR), n = d.bullet(l, a.bullet, a.bulletSize, h, a.bulletAlpha, a.bulletBorderThickness, e, a.bulletBorderAlpha)) && (d.setCN(b, n, \"graph-bullet\"), n.translate(m + 1, m / 2), g.push(n)), u = 0, n = m, p = m / 3;else {\n            var r;\n            a.getGradRotation && (r = a.getGradRotation());\n            n = a.fillColorsR;\n            !0 === a.hidden && (n = h);\n            if (g = this.createMarker(\"rectangle\", n, a.fillAlphas, a.lineThickness, h, a.lineAlpha, r, g)) u = m, g.translate(u, m / 2);\n            n = m;\n          }\n          d.setCN(b, g, \"graph-\" + c);\n          d.setCN(b, g, \"graph-\" + a.id);\n        } else k ? (b.path && (k = b.path + k), g = l.image(k, 0, 0, m, m)) : (g = this.createMarker(c, h, f, void 0, void 0, void 0, void 0, g)) && g.translate(m / 2, m / 2);\n\n        d.setCN(b, g, \"legend-marker\");\n        this.addListeners(g, a);\n        l = l.set([g]);\n        this.switchable && a.switchable && l.setAttr(\"cursor\", \"pointer\");\n        void 0 !== a.id && d.setCN(b, l, \"legend-item-\" + a.id);\n        d.setCN(b, l, a.className, !0);\n        (e = this.switchType) && \"none\" != e && (\"x\" == e ? (c = this.createX(), c.translate(m / 2, m / 2)) : c = this.createV(), c.dItem = a, !0 !== a.hidden ? \"x\" == e ? c.hide() : c.show() : \"x\" != e && c.hide(), this.switchable || c.hide(), this.addListeners(c, a), a.legendSwitch = c, l.push(c), d.setCN(b, c, \"legend-switch\"));\n        e = this.color;\n        a.showBalloon && this.textClickEnabled && void 0 !== this.selectedColor && (e = this.selectedColor);\n        this.useMarkerColorForLabels && (e = h);\n        !0 === a.hidden && (e = this.markerDisabledColor);\n        h = d.massReplace(this.labelText, {\n          \"[[title]]\": a.title\n        });\n        c = this.fontSize;\n        g && (m <= c && g.translate(u, m / 2 + this.ly - c / 2 + (c + 2 - m) / 2 - p), a.legendEntryWidth = g.getBBox().width);\n        var A;\n        h && (h = d.fixBrakes(h), a.legendTextReal = h, A = this.labelWidth, A = isNaN(A) ? d.text(this.container, h, e, b.fontFamily, c, \"start\") : d.wrappedText(this.container, h, e, b.fontFamily, c, \"start\", !1, A, 0), d.setCN(b, A, \"legend-label\"), A.translate(this.lx + n, this.ly), l.push(A), b = A.getBBox().width, this.maxLabelWidth < b && (this.maxLabelWidth = b));\n        this.entries[this.index] = l;\n        a.legendEntry = this.entries[this.index];\n        a.legendLabel = A;\n        this.index++;\n      }\n    },\n    addListeners: function (a, b) {\n      var c = this;\n      a && a.mouseover(function (a) {\n        c.rollOverMarker(b, a);\n      }).mouseout(function (a) {\n        c.rollOutMarker(b, a);\n      }).click(function (a) {\n        c.clickMarker(b, a);\n      });\n    },\n    rollOverMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOverMarker\", a, b);\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOutMarker\", a, b);\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickMarker: function (a, b) {\n      this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n      this.dispatch(\"clickMarker\", a, b);\n    },\n    rollOverLabel: function (a, b) {\n      a.hidden || (this.textClickEnabled && a.legendLabel && a.legendLabel.attr({\n        fill: this.rollOverColor\n      }), this.dispatch(\"rollOverItem\", a, b));\n    },\n    rollOutLabel: function (a, b) {\n      if (!a.hidden) {\n        if (this.textClickEnabled && a.legendLabel) {\n          var c = this.color;\n          void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\n          this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\n          a.legendLabel.attr({\n            fill: c\n          });\n        }\n\n        this.dispatch(\"rollOutItem\", a, b);\n      }\n    },\n    clickLabel: function (a, b) {\n      this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n    },\n    dispatch: function (a, b, c) {\n      this.fire(a, {\n        type: a,\n        dataItem: b,\n        target: this,\n        event: c,\n        chart: this.chart\n      });\n    },\n    createValue: function (a) {\n      var b = this,\n          c = b.fontSize,\n          h = b.chart;\n\n      if (!1 !== a.visibleInLegend) {\n        var f = b.maxLabelWidth;\n        b.forceWidth && (f = b.labelWidth);\n        b.equalWidths || (b.valueAlign = \"left\");\n        \"left\" == b.valueAlign && (f = a.legendEntry.getBBox().width);\n        var e = f;\n\n        if (b.valueText && 0 < b.valueWidth) {\n          var g = b.color;\n          b.useMarkerColorForValues && (g = a.color, a.legendKeyColor && (g = a.legendKeyColor()));\n          !0 === a.hidden && (g = b.markerDisabledColor);\n          var k = b.valueText,\n              f = f + b.lx + b.markerLabelGap + b.valueWidth,\n              l = \"end\";\n          \"left\" == b.valueAlign && (f -= b.valueWidth, l = \"start\");\n          g = d.text(b.container, k, g, b.chart.fontFamily, c, l);\n          d.setCN(h, g, \"legend-value\");\n          g.translate(f, b.ly);\n          b.entries[b.index].push(g);\n          e += b.valueWidth + 2 * b.markerLabelGap;\n          g.dItem = a;\n          b.valueLabels.push(g);\n        }\n\n        b.index++;\n        h = b.markerSize;\n        h < c + 7 && (h = c + 7, d.VML && (h += 3));\n        c = b.container.rect(a.legendEntryWidth, 0, e, h, 0, 0).attr({\n          stroke: \"none\",\n          fill: \"#fff\",\n          \"fill-opacity\": .005\n        });\n        c.dItem = a;\n        b.entries[b.index - 1].push(c);\n        c.mouseover(function (c) {\n          b.rollOverLabel(a, c);\n        }).mouseout(function (c) {\n          b.rollOutLabel(a, c);\n        }).click(function (c) {\n          b.clickLabel(a, c);\n        });\n      }\n    },\n    createV: function () {\n      var a = this.markerSize;\n      return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor);\n    },\n    createX: function () {\n      var a = (this.markerSize - 4) / 2,\n          b = {\n        stroke: this.switchColor,\n        \"stroke-width\": 3\n      },\n          c = this.container,\n          h = d.line(c, [-a, a], [-a, a]).attr(b),\n          a = d.line(c, [-a, a], [a, -a]).attr(b);\n      return this.container.set([h, a]);\n    },\n    createMarker: function (a, b, c, h, f, e, g, k) {\n      var l = this.markerSize,\n          m = this.container;\n      f || (f = this.markerBorderColor);\n      f || (f = b);\n      isNaN(h) && (h = this.markerBorderThickness);\n      isNaN(e) && (e = this.markerBorderAlpha);\n      return d.bullet(m, a, l, b, c, h, f, e, l, g, k);\n    },\n    validateNow: function () {\n      this.invalidateSize();\n    },\n    updateValues: function () {\n      var a = this.valueLabels,\n          b = this.chart,\n          c,\n          d = this.data;\n\n      for (c = 0; c < a.length; c++) {\n        var f = a[c],\n            e = f.dItem,\n            g = \" \";\n        if (d) e.value ? f.text(e.value) : f.text(\"\");else {\n          var k;\n\n          if (void 0 !== e.type) {\n            k = e.currentDataItem;\n            var l = this.periodValueText;\n            e.legendPeriodValueText && (l = e.legendPeriodValueText);\n            k ? (g = this.valueText, e.legendValueText && (g = e.legendValueText), g = b.formatString(g, k)) : l && (g = b.formatPeriodString(l, e));\n          } else g = b.formatString(this.valueText, e);\n\n          if (l = this.valueFunction) k && (e = k), g = l(e, g);\n          f.text(g);\n        }\n      }\n    },\n    renderFix: function () {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    destroy: function () {\n      this.div.innerHTML = \"\";\n      d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmMap = d.Class({\n    inherits: d.AmChart,\n    construct: function (a) {\n      this.cname = \"AmMap\";\n      this.type = \"map\";\n      this.theme = a;\n      this.version = \"3.14.1\";\n      this.svgNotSupported = \"This browser doesn't support SVG. Use Chrome, Firefox, Internet Explorer 9 or later.\";\n      this.createEvents(\"rollOverMapObject\", \"rollOutMapObject\", \"clickMapObject\", \"selectedObjectChanged\", \"homeButtonClicked\", \"zoomCompleted\", \"dragCompleted\", \"positionChanged\", \"writeDevInfo\", \"click\");\n      this.zoomDuration = 1;\n      this.zoomControl = new d.ZoomControl(a);\n      this.fitMapToContainer = !0;\n      this.mouseWheelZoomEnabled = this.backgroundZoomsToTop = !1;\n      this.allowClickOnSelectedObject = this.useHandCursorOnClickableOjects = this.showBalloonOnSelectedObject = !0;\n      this.showObjectsAfterZoom = this.wheelBusy = !1;\n      this.zoomOnDoubleClick = this.useObjectColorForBalloon = !0;\n      this.allowMultipleDescriptionWindows = !1;\n      this.dragMap = this.centerMap = this.linesAboveImages = !0;\n      this.colorSteps = 5;\n      this.showAreasInList = !0;\n      this.showLinesInList = this.showImagesInList = !1;\n      this.areasProcessor = new d.AreasProcessor(this);\n      this.areasSettings = new d.AreasSettings(a);\n      this.imagesProcessor = new d.ImagesProcessor(this);\n      this.imagesSettings = new d.ImagesSettings(a);\n      this.linesProcessor = new d.LinesProcessor(this);\n      this.linesSettings = new d.LinesSettings(a);\n      this.showDescriptionOnHover = !1;\n      d.AmMap.base.construct.call(this, a);\n      this.creditsPosition = \"bottom-left\";\n      this.product = \"ammap\";\n      this.areasClasses = {};\n      d.applyTheme(this, a, this.cname);\n    },\n    initChart: function () {\n      this.zoomInstantly = !0;\n      var a = this.container;\n\n      if (this.sizeChanged && d.hasSVG && this.chartCreated) {\n        this.freeLabelsSet && this.freeLabelsSet.remove();\n        this.freeLabelsSet = a.set();\n        this.container.setSize(this.realWidth, this.realHeight);\n        this.resizeMap();\n        this.drawBackground();\n        this.redrawLabels();\n        this.drawTitles();\n        this.processObjects();\n        this.rescaleObjects();\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        var b = this.smallMap;\n        b && b.init(this, a);\n        (b = this.valueLegend) && b.init(this, a);\n        this.sizeChanged = !1;\n        this.zoomToLongLat(this.zLevelTemp, this.zLongTemp, this.zLatTemp, !0);\n        this.previousWidth = this.realWidth;\n        this.previousHeight = this.realHeight;\n        this.updateSmallMap();\n        this.linkSet.toFront();\n      } else (d.AmMap.base.initChart.call(this), d.hasSVG) ? (this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, a = this.legend) && (a.position = \"absolute\", a.invalidateSize()), this.createDescriptionsDiv(), this.svgAreas = [], this.svgAreasById = {}, this.drawChart()) : (this.chartDiv.style.textAlign = \"\", this.chartDiv.setAttribute(\"class\", \"ammapAlert\"), this.chartDiv.innerHTML = this.svgNotSupported, this.fire(\"failed\", {\n        type: \"failed\",\n        chart: this\n      }));\n    },\n    storeTemp: function () {\n      var a = this.zoomLongitude();\n      isNaN(a) || (this.zLongTemp = a);\n      a = this.zoomLatitude();\n      isNaN(a) || (this.zLatTemp = a);\n      a = this.zoomLevel();\n      isNaN(a) || (this.zLevelTemp = a);\n    },\n    invalidateSize: function () {\n      this.storeTemp();\n      d.AmMap.base.invalidateSize.call(this);\n    },\n    validateSize: function () {\n      d.hasSVG && this.storeTemp();\n      d.AmMap.base.validateSize.call(this);\n    },\n    handleWheelReal: function (a) {\n      if (!this.wheelBusy) {\n        this.stopAnimation();\n        var b = this.zoomLevel(),\n            c = this.zoomControl,\n            h = c.zoomFactor;\n        this.wheelBusy = !0;\n        a = d.fitToBounds(0 < a ? b * h : b / h, c.minZoomLevel, c.maxZoomLevel);\n        h = this.mouseX / this.mapWidth;\n        c = this.mouseY / this.mapHeight;\n        h = (this.zoomX() - h) * (a / b) + h;\n        b = (this.zoomY() - c) * (a / b) + c;\n        this.zoomTo(a, h, b);\n      }\n    },\n    addLegend: function (a, b) {\n      a.position = \"absolute\";\n      a.autoMargins = !1;\n      a.valueWidth = 0;\n      a.switchable = !1;\n      d.AmMap.base.addLegend.call(this, a, b);\n      void 0 === a.enabled && (a.enabled = !0);\n      return a;\n    },\n    handleLegendEvent: function () {},\n    createDescriptionsDiv: function () {\n      if (!this.descriptionsDiv) {\n        var a = document.createElement(\"div\"),\n            b = a.style;\n        b.position = \"absolute\";\n        b.left = \"0px\";\n        b.top = \"0px\";\n        this.descriptionsDiv = a;\n      }\n\n      this.containerDiv.appendChild(this.descriptionsDiv);\n    },\n    drawChart: function () {\n      d.AmMap.base.drawChart.call(this);\n      var a = this.dataProvider;\n      this.dataProvider = a = d.extend(a, new d.MapData(), !0);\n      this.areasSettings = d.processObject(this.areasSettings, d.AreasSettings, this.theme);\n      this.imagesSettings = d.processObject(this.imagesSettings, d.ImagesSettings, this.theme);\n      this.linesSettings = d.processObject(this.linesSettings, d.LinesSettings, this.theme);\n      var b = this.container;\n      this.mapContainer && this.mapContainer.remove();\n      this.mapContainer = b.set();\n      this.graphsSet.push(this.mapContainer);\n      var c;\n      a.map && (c = d.maps[a.map]);\n      a.mapVar && (c = a.mapVar);\n      c ? (this.svgData = c.svg, this.getBounds(), this.buildEverything()) : (a = a.mapURL) && this.loadXml(a);\n      this.balloonsSet.toFront();\n    },\n    drawBg: function () {\n      var a = this;\n      a.background.click(function () {\n        a.handleBackgroundClick();\n      });\n    },\n    buildEverything: function () {\n      if (0 < this.realWidth && 0 < this.realHeight) {\n        var a = this.container;\n        this.zoomControl = d.processObject(this.zoomControl, d.ZoomControl, this.theme);\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        this.buildSVGMap();\n        var b = this.smallMap;\n        b && (b = this.smallMap = d.processObject(this.smallMap, d.SmallMap, this.theme), b.init(this, a));\n        b = this.dataProvider;\n        isNaN(b.zoomX) && isNaN(b.zoomY) && isNaN(b.zoomLatitude) && isNaN(b.zoomLongitude) && (this.centerMap ? (b.zoomLatitude = this.coordinateToLatitude(this.mapHeight / 2), b.zoomLongitude = this.coordinateToLongitude(this.mapWidth / 2)) : (b.zoomX = 0, b.zoomY = 0), this.zoomInstantly = !0);\n        this.selectObject(this.dataProvider);\n        this.processAreas();\n        if (b = this.valueLegend) this.valueLegend = b = d.processObject(b, d.ValueLegend, this.theme), b.init(this, a);\n        this.objectList && (a = this.objectList = d.processObject(this.objectList, d.ObjectList)) && (this.clearObjectList(), a.init(this));\n        this.dispDUpd();\n        this.linkSet.toFront();\n        this.chartCreated = !0;\n      } else this.cleanChart();\n    },\n    hideGroup: function (a) {\n      this.showHideGroup(a, !1);\n    },\n    showGroup: function (a) {\n      this.showHideGroup(a, !0);\n    },\n    showHideGroup: function (a, b) {\n      this.showHideReal(this.imagesProcessor.allObjects, a, b);\n      this.showHideReal(this.areasProcessor.allObjects, a, b);\n      this.showHideReal(this.linesProcessor.allObjects, a, b);\n    },\n    showHideReal: function (a, b, c) {\n      var d;\n\n      for (d = 0; d < a.length; d++) {\n        var f = a[d];\n\n        if (f.groupId == b) {\n          var e = f.displayObject;\n          e && (c ? (f.hidden = !1, e.show()) : (f.hidden = !0, e.hide()));\n        }\n      }\n    },\n    update: function () {\n      d.hasSVG && (d.AmMap.base.update.call(this), this.zoomControl && this.zoomControl.update());\n    },\n    animateMap: function () {\n      var a = this;\n      a.totalFrames = 1E3 * a.zoomDuration / d.updateRate;\n      a.totalFrames += 1;\n      a.frame = 0;\n      a.tweenPercent = 0;\n      setTimeout(function () {\n        a.updateSize.call(a);\n      }, d.updateRate);\n    },\n    updateSize: function () {\n      var a = this,\n          b = a.totalFrames;\n      a.preventHover = !0;\n      a.frame <= b ? (a.frame++, b = d.easeOutSine(0, a.frame, 0, 1, b), 1 <= b ? (b = 1, a.preventHover = !1, a.wheelBusy = !1) : setTimeout(function () {\n        a.updateSize.call(a);\n      }, d.updateRate), .8 < b && (a.preventHover = !1)) : (b = 1, a.preventHover = !1, a.wheelBusy = !1);\n      a.tweenPercent = b;\n      a.rescaleMapAndObjects();\n    },\n    rescaleMapAndObjects: function () {\n      var a = this.initialScale,\n          b = this.initialX,\n          c = this.initialY,\n          d = this.tweenPercent,\n          a = a + (this.finalScale - a) * d;\n      this.mapContainer.translate(b + (this.finalX - b) * d, c + (this.finalY - c) * d, a);\n      if (this.areasSettings.adjustOutlineThickness) for (b = this.dataProvider.areas, c = 0; c < b.length; c++) {\n        var f = b[c],\n            e = f.displayObject;\n        e && e.setAttr(\"stroke-width\", f.outlineThicknessReal / a);\n      }\n      this.rescaleObjects();\n      this.positionChanged();\n      this.updateSmallMap();\n      1 == d && (d = {\n        type: \"zoomCompleted\",\n        chart: this\n      }, this.fire(d.type, d));\n    },\n    updateSmallMap: function () {\n      this.smallMap && this.smallMap.update();\n    },\n    rescaleObjects: function () {\n      var a = this.mapContainer.scale,\n          b = this.imagesProcessor.objectsToResize,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var d = b[c].image;\n        d.translate(d.x, d.y, b[c].scale / a, !0);\n      }\n\n      b = this.linesProcessor;\n      if (d = b.linesToResize) for (c = 0; c < d.length; c++) {\n        var f = d[c];\n        f.line.setAttr(\"stroke-width\", f.thickness / a);\n      }\n      b = b.objectsToResize;\n\n      for (c = 0; c < b.length; c++) d = b[c], d.translate(d.x, d.y, 1 / a);\n    },\n    handleTouchStart: function (a) {\n      this.handleMouseMove(a);\n      this.handleMouseDown(a);\n    },\n    handleTouchEnd: function (a) {\n      this.previousDistance = NaN;\n      this.handleReleaseOutside(a);\n    },\n    handleMouseDown: function (a) {\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n      a && this.mouseIsOver && a.preventDefault && this.panEventsEnabled && a.preventDefault();\n\n      if (this.chartCreated && !this.preventHover && (this.dragMap && (this.stopAnimation(), this.isDragging = !0, this.mapContainerClickX = this.mapContainer.x, this.mapContainerClickY = this.mapContainer.y), a || (a = window.event), a.shiftKey && !0 === this.developerMode && this.getDevInfo(), a && a.touches)) {\n        var b = this.mouseX,\n            c = this.mouseY,\n            h = a.touches.item(1);\n        h && (a = h.pageX - d.findPosX(this.div), h = h.pageY - d.findPosY(this.div), this.middleXP = (b + (a - b) / 2) / this.realWidth, this.middleYP = (c + (h - c) / 2) / this.realHeight);\n      }\n    },\n    stopDrag: function () {\n      this.isDragging = !1;\n    },\n    handleReleaseOutside: function () {\n      if (d.isModern && !this.preventHover) {\n        this.stopDrag();\n        var a = this.zoomControl;\n        a && a.draggerUp && a.draggerUp();\n        this.mapWasDragged = !1;\n        var a = this.mapContainer,\n            b = this.mapContainerClickX,\n            c = this.mapContainerClickY;\n        isNaN(b) || isNaN(c) || !(2 < Math.abs(a.x - b) || Math.abs(a.y - c)) || (this.mapWasDragged = !0, a = {\n          type: \"dragCompleted\",\n          zoomX: this.zoomX(),\n          zoomY: this.zoomY(),\n          zoomLevel: this.zoomLevel(),\n          chart: this\n        }, this.fire(a.type, a));\n        !this.mouseIsOver || this.mapWasDragged || this.skipClick || (a = {\n          type: \"click\",\n          x: this.mouseX,\n          y: this.mouseY,\n          chart: this\n        }, this.fire(a.type, a), this.skipClick = !1);\n        this.mapContainerClickY = this.mapContainerClickX = NaN;\n        this.objectWasClicked = !1;\n        this.zoomOnDoubleClick && this.mouseIsOver && (a = new Date().getTime(), 200 > a - this.previousClickTime && 20 < a - this.previousClickTime && this.doDoubleClickZoom(), this.previousClickTime = a);\n      }\n    },\n    handleTouchMove: function (a) {\n      this.handleMouseMove(a);\n    },\n    resetPinch: function () {\n      this.mapWasPinched = !1;\n    },\n    handleMouseMove: function (a) {\n      var b = this;\n      d.AmMap.base.handleMouseMove.call(b, a);\n      b.panEventsEnabled && b.mouseIsOver && a && a.preventDefault && a.preventDefault();\n      var c = b.previuosMouseX,\n          h = b.previuosMouseY,\n          f = b.mouseX,\n          e = b.mouseY,\n          g = b.zoomControl;\n      isNaN(c) && (c = f);\n      isNaN(h) && (h = e);\n      b.mouse2X = NaN;\n      b.mouse2Y = NaN;\n      a && a.touches && (a = a.touches.item(1)) && (b.mouse2X = a.pageX - d.findPosX(b.div), b.mouse2Y = a.pageY - d.findPosY(b.div));\n\n      if (a = b.mapContainer) {\n        var k = b.mouse2X,\n            l = b.mouse2Y;\n        b.pinchTO && clearTimeout(b.pinchTO);\n        b.pinchTO = setTimeout(function () {\n          b.resetPinch.call(b);\n        }, 1E3);\n        var m = b.realHeight,\n            n = b.realWidth,\n            p = b.mapWidth,\n            u = b.mapHeight;\n\n        if (!isNaN(k)) {\n          b.stopDrag();\n          var k = Math.sqrt(Math.pow(k - f, 2) + Math.pow(l - e, 2)),\n              r = b.previousDistance,\n              l = Math.max(b.realWidth, b.realHeight);\n          5 > Math.abs(r - k) && (b.isDragging = !0);\n\n          if (!isNaN(r)) {\n            var A = 5 * Math.abs(r - k) / l,\n                l = a.scale,\n                l = d.fitToBounds(r < k ? l + l * A : l - l * A, g.minZoomLevel, g.maxZoomLevel),\n                g = b.zoomLevel(),\n                B = b.middleXP,\n                r = b.middleYP,\n                A = m / u,\n                w = n / p,\n                B = (b.zoomX() - B * w) * (l / g) + B * w,\n                r = (b.zoomY() - r * A) * (l / g) + r * A;\n            .1 < Math.abs(l - g) && (b.zoomTo(l, B, r, !0), b.mapWasPinched = !0, clearTimeout(b.pinchTO));\n          }\n\n          b.previousDistance = k;\n        }\n\n        k = a.scale;\n        b.isDragging && (b.hideBalloon(), b.positionChanged(), c = a.x + (f - c), h = a.y + (e - h), b.preventDragOut && (u = -u * k + m / 2, m /= 2, c = d.fitToBounds(c, -p * k + n / 2, n / 2), h = d.fitToBounds(h, u, m)), a.translate(c, h, k), b.updateSmallMap());\n        b.previuosMouseX = f;\n        b.previuosMouseY = e;\n      }\n    },\n    selectObject: function (a) {\n      var b = this;\n      a || (a = b.dataProvider);\n      a.isOver = !1;\n      var c = a.linkToObject;\n      \"string\" == typeof c && (c = b.getObjectById(c));\n      a.useTargetsZoomValues && c && (a.zoomX = c.zoomX, a.zoomY = c.zoomY, a.zoomLatitude = c.zoomLatitude, a.zoomLongitude = c.zoomLongitude, a.zoomLevel = c.zoomLevel);\n      var d = b.selectedObject;\n      d && b.returnInitialColor(d);\n      b.selectedObject = a;\n      var f = !1,\n          e;\n      \"MapArea\" == a.objectType && (a.autoZoomReal && (f = !0), e = b.areasSettings.selectedOutlineColor);\n\n      if (c && !f && (\"string\" == typeof c && (c = b.getObjectById(c)), isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY))) {\n        if (b.extendMapData(c)) return;\n        b.selectObject(c);\n        return;\n      }\n\n      b.allowMultipleDescriptionWindows || b.closeAllDescriptions();\n      clearTimeout(b.selectedObjectTimeOut);\n      clearTimeout(b.processObjectsTimeOut);\n      c = b.zoomDuration;\n      !f && isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY) ? (b.showDescriptionAndGetUrl(), b.processObjects()) : (b.selectedObjectTimeOut = setTimeout(function () {\n        b.showDescriptionAndGetUrl.call(b);\n      }, 1E3 * c + 200), b.showObjectsAfterZoom ? b.processObjectsTimeOut = setTimeout(function () {\n        b.processObjects.call(b);\n      }, 1E3 * c + 200) : b.processObjects());\n      c = a.displayObject;\n      f = a.selectedColorReal;\n\n      if (c) {\n        if (a.bringForwardOnHover && c.toFront(), !a.preserveOriginalAttributes) {\n          c.setAttr(\"stroke\", a.outlineColorReal);\n          void 0 !== f && c.setAttr(\"fill\", f);\n          void 0 !== e && c.setAttr(\"stroke\", e);\n\n          if (\"MapLine\" == a.objectType) {\n            var g = a.lineSvg;\n            g && g.setAttr(\"stroke\", f);\n            if (g = a.arrowSvg) g.setAttr(\"fill\", f), g.setAttr(\"stroke\", f);\n          }\n\n          if (g = a.imageLabel) {\n            var k = a.selectedLabelColorReal;\n            void 0 !== k && g.setAttr(\"fill\", k);\n          }\n\n          a.selectable || (c.setAttr(\"cursor\", \"default\"), g && g.setAttr(\"cursor\", \"default\"));\n        }\n      } else b.returnInitialColorReal(a);\n\n      if (c = a.groupId) for (g = b.getGroupById(c), k = 0; k < g.length; k++) {\n        var l = g[k];\n        l.isOver = !1;\n\n        if (c = l.displayObject) {\n          var m = l.selectedColorReal;\n          void 0 !== e && c.setAttr(\"stroke\", e);\n          void 0 !== m ? c.setAttr(\"fill\", m) : b.returnInitialColor(l);\n          \"MapLine\" == l.objectType && ((c = l.lineSvg) && c.setAttr(\"stroke\", f), c = l.arrowSvg) && (c.setAttr(\"fill\", f), c.setAttr(\"stroke\", f));\n        }\n      }\n      b.zoomToSelectedObject();\n      d != a && (a = {\n        type: \"selectedObjectChanged\",\n        chart: b\n      }, b.fire(a.type, a));\n    },\n    returnInitialColor: function (a, b) {\n      this.returnInitialColorReal(a);\n      b && (a.isFirst = !1);\n\n      if (this.selectedObject.bringForwardOnHover) {\n        var c = this.selectedObject.displayObject;\n        c && c.toFront();\n      }\n\n      if (c = a.groupId) {\n        var c = this.getGroupById(c),\n            d;\n\n        for (d = 0; d < c.length; d++) this.returnInitialColorReal(c[d]), b && (c[d].isFirst = !1);\n      }\n    },\n    closeAllDescriptions: function () {\n      this.descriptionsDiv.innerHTML = \"\";\n    },\n    returnInitialColorReal: function (a) {\n      a.isOver = !1;\n      var b = a.displayObject;\n\n      if (b) {\n        b.toPrevious();\n\n        if (\"MapImage\" == a.objectType) {\n          var c = a.tempScale;\n          isNaN(c) || b.translate(b.x, b.y, c, !0);\n          a.tempScale = NaN;\n        }\n\n        c = a.colorReal;\n\n        if (\"MapLine\" == a.objectType) {\n          var d = a.lineSvg;\n          d && d.setAttr(\"stroke\", c);\n          if (d = a.arrowSvg) d.setAttr(\"fill\", c), d.setAttr(\"stroke\", c);\n        }\n\n        a.showAsSelected && (c = a.selectedColorReal);\n        \"bubble\" == a.type && (c = void 0);\n        void 0 !== c && b.setAttr(\"fill\", c);\n        (d = a.image) && d.setAttr(\"fill\", c);\n        b.setAttr(\"stroke\", a.outlineColorReal);\n        \"MapArea\" == a.objectType && (c = 1, this.areasSettings.adjustOutlineThickness && (c = this.zoomLevel()), b.setAttr(\"fill-opacity\", a.alphaReal), b.setAttr(\"stroke-opacity\", a.outlineAlphaReal), b.setAttr(\"stroke-width\", a.outlineThicknessReal / c));\n        (c = a.pattern) && b.pattern(c, this.mapScale);\n        (b = a.imageLabel) && !a.labelInactive && b.setAttr(\"fill\", a.labelColorReal);\n      }\n    },\n    zoomToRectangle: function (a, b, c, h) {\n      var f = this.realWidth,\n          e = this.realHeight,\n          g = this.mapSet.scale,\n          k = this.zoomControl,\n          f = d.fitToBounds(c / f > h / e ? .8 * f / (c * g) : .8 * e / (h * g), k.minZoomLevel, k.maxZoomLevel);\n      this.zoomToMapXY(f, (a + c / 2) * g, (b + h / 2) * g);\n    },\n    zoomToLatLongRectangle: function (a, b, c, h) {\n      var f = this.dataProvider,\n          e = this.zoomControl,\n          g = Math.abs(c - a),\n          k = Math.abs(b - h),\n          l = Math.abs(f.rightLongitude - f.leftLongitude),\n          f = Math.abs(f.topLatitude - f.bottomLatitude),\n          e = d.fitToBounds(g / l > k / f ? .8 * l / g : .8 * f / k, e.minZoomLevel, e.maxZoomLevel);\n      this.zoomToLongLat(e, a + (c - a) / 2, h + (b - h) / 2);\n    },\n    getGroupById: function (a) {\n      var b = [];\n      this.getGroup(this.imagesProcessor.allObjects, a, b);\n      this.getGroup(this.linesProcessor.allObjects, a, b);\n      this.getGroup(this.areasProcessor.allObjects, a, b);\n      return b;\n    },\n    zoomToGroup: function (a) {\n      a = \"object\" == typeof a ? a : this.getGroupById(a);\n      var b, c, d, f, e;\n\n      for (e = 0; e < a.length; e++) {\n        var g = a[e].displayObject;\n\n        if (g) {\n          var k = g.getBBox(),\n              g = k.y,\n              l = k.y + k.height,\n              m = k.x,\n              k = k.x + k.width;\n          if (g < b || isNaN(b)) b = g;\n          if (l > f || isNaN(f)) f = l;\n          if (m < c || isNaN(c)) c = m;\n          if (k > d || isNaN(d)) d = k;\n        }\n      }\n\n      a = this.mapSet.getBBox();\n      c -= a.x;\n      d -= a.x;\n      f -= a.y;\n      b -= a.y;\n      this.zoomToRectangle(c, b, d - c, f - b);\n    },\n    getGroup: function (a, b, c) {\n      if (a) {\n        var d;\n\n        for (d = 0; d < a.length; d++) {\n          var f = a[d];\n          f.groupId == b && c.push(f);\n        }\n      }\n    },\n    zoomToStageXY: function (a, b, c, h) {\n      if (!this.objectWasClicked) {\n        var f = this.zoomControl;\n        a = d.fitToBounds(a, f.minZoomLevel, f.maxZoomLevel);\n        f = this.zoomLevel();\n        c = this.coordinateToLatitude((c - this.mapContainer.y) / f);\n        b = this.coordinateToLongitude((b - this.mapContainer.x) / f);\n        this.zoomToLongLat(a, b, c, h);\n      }\n    },\n    zoomToLongLat: function (a, b, c, d) {\n      b = this.longitudeToCoordinate(b);\n      c = this.latitudeToCoordinate(c);\n      this.zoomToMapXY(a, b, c, d);\n    },\n    zoomToMapXY: function (a, b, c, d) {\n      var f = this.mapWidth,\n          e = this.mapHeight;\n      this.zoomTo(a, -(b / f) * a + this.realWidth / f / 2, -(c / e) * a + this.realHeight / e / 2, d);\n    },\n    zoomToObject: function (a) {\n      if (a) {\n        var b = a.zoomLatitude,\n            c = a.zoomLongitude,\n            h = a.zoomLevel,\n            f = this.zoomInstantly,\n            e = a.zoomX,\n            g = a.zoomY,\n            k = this.realWidth,\n            l = this.realHeight;\n        isNaN(h) || (isNaN(b) || isNaN(c) ? this.zoomTo(h, e, g, f) : this.zoomToLongLat(h, c, b, f));\n        this.zoomInstantly = !1;\n        \"MapImage\" == a.objectType && isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && !isNaN(a.latitude) && !isNaN(a.longitude) && this.zoomToLongLat(a.zoomLevel, a.longitude, a.latitude);\n        \"MapArea\" == a.objectType && (e = a.displayObject.getBBox(), b = this.mapScale, c = e.x * b, h = e.y * b, f = e.width * b, e = e.height * b, k = a.autoZoomReal && isNaN(a.zoomLevel) ? f / k > e / l ? .8 * k / f : .8 * l / e : a.zoomLevel, l = this.zoomControl, k = d.fitToBounds(k, l.minZoomLevel, l.maxZoomLevel), isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && (a = this.mapSet.getBBox(), this.zoomToMapXY(k, -a.x * b + c + f / 2, -a.y * b + h + e / 2)));\n      }\n    },\n    zoomToSelectedObject: function () {\n      this.zoomToObject(this.selectedObject);\n    },\n    zoomTo: function (a, b, c, h) {\n      var f = this.zoomControl;\n      a = d.fitToBounds(a, f.minZoomLevel, f.maxZoomLevel);\n      f = this.zoomLevel();\n      isNaN(b) && (b = this.realWidth / this.mapWidth, b = (this.zoomX() - .5 * b) * (a / f) + .5 * b);\n      isNaN(c) && (c = this.realHeight / this.mapHeight, c = (this.zoomY() - .5 * c) * (a / f) + .5 * c);\n      this.stopAnimation();\n      isNaN(a) || (f = this.mapContainer, this.initialX = f.x, this.initialY = f.y, this.initialScale = f.scale, this.finalX = this.mapWidth * b, this.finalY = this.mapHeight * c, this.finalScale = a, this.finalX != this.initialX || this.finalY != this.initialY || this.finalScale != this.initialScale ? h ? (this.tweenPercent = 1, this.rescaleMapAndObjects(), this.wheelBusy = !1) : this.animateMap() : this.wheelBusy = !1);\n    },\n    loadXml: function (a) {\n      var b;\n      window.XMLHttpRequest && (b = new XMLHttpRequest());\n      b.overrideMimeType && b.overrideMimeType(\"text/xml\");\n      b.open(\"GET\", a, !1);\n      b.send();\n      this.parseXMLObject(b.responseXML);\n      this.svgData && this.buildEverything();\n    },\n    stopAnimation: function () {\n      this.frame = this.totalFrames;\n    },\n    processObjects: function () {\n      var a = this.container,\n          b = this.stageImagesContainer;\n      b && b.remove();\n      this.stageImagesContainer = b = a.set();\n      this.trendLinesSet.push(b);\n      var c = this.stageLinesContainer;\n      c && c.remove();\n      this.stageLinesContainer = c = a.set();\n      this.trendLinesSet.push(c);\n      var d = this.mapImagesContainer;\n      d && d.remove();\n      this.mapImagesContainer = d = a.set();\n      this.mapContainer.push(d);\n      var f = this.mapLinesContainer;\n      f && f.remove();\n      this.mapLinesContainer = f = a.set();\n      this.mapContainer.push(f);\n      this.linesAboveImages ? (d.toFront(), b.toFront(), f.toFront(), c.toFront()) : (f.toFront(), c.toFront(), d.toFront(), b.toFront());\n      if (a = this.selectedObject) this.imagesProcessor.reset(), this.linesProcessor.reset(), this.linesAboveImages ? (this.imagesProcessor.process(a), this.linesProcessor.process(a)) : (this.linesProcessor.process(a), this.imagesProcessor.process(a));\n      this.rescaleObjects();\n    },\n    processAreas: function () {\n      this.areasProcessor.process(this.dataProvider);\n    },\n    buildSVGMap: function () {\n      var a = this.svgData.g.path,\n          b = this.container,\n          c = b.set();\n      void 0 === a.length && (a = [a]);\n      var d;\n\n      for (d = 0; d < a.length; d++) {\n        var f = a[d],\n            e = f.d,\n            g = f.title;\n        f.titleTr && (g = f.titleTr);\n        e = b.path(e);\n        e.id = f.id;\n\n        if (this.areasSettings.preserveOriginalAttributes) {\n          e.customAttr = {};\n\n          for (var k in f) \"d\" != k && \"id\" != k && \"title\" != k && (e.customAttr[k] = f[k]);\n        }\n\n        this.svgAreasById[f.id] = {\n          area: e,\n          title: g,\n          className: f[\"class\"]\n        };\n        this.svgAreas.push(e);\n        c.push(e);\n      }\n\n      this.mapSet = c;\n      this.mapContainer.push(c);\n      this.resizeMap();\n    },\n    addObjectEventListeners: function (a, b) {\n      var c = this;\n      a.mouseup(function (a) {\n        c.clickMapObject(b, a);\n      }).mouseover(function (a) {\n        c.rollOverMapObject(b, !0, a);\n      }).mouseout(function (a) {\n        c.rollOutMapObject(b, a);\n      }).touchend(function (a) {\n        c.clickMapObject(b, a);\n      }).touchstart(function (a) {\n        c.rollOverMapObject(b, !0, a);\n      });\n    },\n    checkIfSelected: function (a) {\n      var b = this.selectedObject;\n      if (b == a) return !0;\n\n      if (b = b.groupId) {\n        var b = this.getGroupById(b),\n            c;\n\n        for (c = 0; c < b.length; c++) if (b[c] == a) return !0;\n      }\n\n      return !1;\n    },\n    clearMap: function () {\n      this.chartDiv.innerHTML = \"\";\n      this.clearObjectList();\n    },\n    clearObjectList: function () {\n      var a = this.objectList;\n      a && a.div && (a.div.innerHTML = \"\");\n    },\n    checkIfLast: function (a) {\n      if (a) {\n        var b = a.parentNode;\n        if (b && b.lastChild == a) return !0;\n      }\n\n      return !1;\n    },\n    showAsRolledOver: function (a) {\n      var b = a.displayObject;\n\n      if (!a.showAsSelected && b && !a.isOver) {\n        b.node.onmouseout = function () {};\n\n        b.node.onmouseover = function () {};\n\n        b.node.onclick = function () {};\n\n        !a.isFirst && a.bringForwardOnHover && (b.toFront(), a.isFirst = !0);\n        var c = a.rollOverColorReal,\n            d;\n        a.preserveOriginalAttributes && (c = void 0);\n        if (void 0 != c) if (\"MapImage\" == a.objectType) (d = a.image) && d.setAttr(\"fill\", c);else if (\"MapLine\" == a.objectType) {\n          if ((d = a.lineSvg) && d.setAttr(\"stroke\", c), d = a.arrowSvg) d.setAttr(\"fill\", c), d.setAttr(\"stroke\", c);\n        } else b.setAttr(\"fill\", c);\n        (c = a.imageLabel) && !a.labelInactive && (d = a.labelRollOverColorReal, void 0 != d && c.setAttr(\"fill\", d));\n        c = a.rollOverOutlineColorReal;\n        void 0 != c && (\"MapImage\" == a.objectType ? (d = a.image) && d.setAttr(\"stroke\", c) : b.setAttr(\"stroke\", c));\n\n        if (\"MapArea\" == a.objectType) {\n          c = this.areasSettings;\n          d = a.rollOverAlphaReal;\n          isNaN(d) || b.setAttr(\"fill-opacity\", d);\n          d = c.rollOverOutlineAlpha;\n          isNaN(d) || b.setAttr(\"stroke-opacity\", d);\n          d = 1;\n          this.areasSettings.adjustOutlineThickness && (d = this.zoomLevel());\n          var f = c.rollOverOutlineThickness;\n          isNaN(f) || b.setAttr(\"stroke-width\", f / d);\n          (c = c.rollOverPattern) && b.pattern(c, this.mapScale);\n        }\n\n        \"MapImage\" == a.objectType && (c = a.rollOverScaleReal, isNaN(c) || 1 == c || (a.tempScale = b.scale, b.translate(b.x, b.y, b.scale * c, !0)));\n        this.useHandCursorOnClickableOjects && this.checkIfClickable(a) && b.setAttr(\"cursor\", \"pointer\");\n        this.addObjectEventListeners(b, a);\n        a.isOver = !0;\n      }\n    },\n    rollOverMapObject: function (a, b, c) {\n      if (this.chartCreated) {\n        this.handleMouseMove();\n        var d = this.previouslyHovered;\n        d && d != a ? (!1 === this.checkIfSelected(d) && (this.returnInitialColor(d, !0), this.previouslyHovered = null), this.hideBalloon()) : clearTimeout(this.hoverInt);\n\n        if (!this.preventHover) {\n          if (!1 === this.checkIfSelected(a)) {\n            if (d = a.groupId) {\n              var d = this.getGroupById(d),\n                  f;\n\n              for (f = 0; f < d.length; f++) d[f] != a && this.showAsRolledOver(d[f]);\n            }\n\n            this.showAsRolledOver(a);\n          } else (d = a.displayObject) && (this.allowClickOnSelectedObject ? d.setAttr(\"cursor\", \"pointer\") : d.setAttr(\"cursor\", \"default\"));\n\n          if (this.showDescriptionOnHover) this.showDescription(a);else if ((this.showBalloonOnSelectedObject || !this.checkIfSelected(a)) && !1 !== b && (f = this.balloon, b = a.colorReal, d = \"\", void 0 !== b && this.useObjectColorForBalloon || (b = f.fillColor), (f = a.balloonTextReal) && (d = this.formatString(f, a)), this.balloonLabelFunction && (d = this.balloonLabelFunction(a, this)), d && \"\" !== d)) {\n            var e, g;\n            \"MapArea\" == a.objectType && (g = this.getAreaCenterLatitude(a), e = this.getAreaCenterLongitude(a), g = this.latitudeToY(g), e = this.longitudeToX(e));\n            \"MapImage\" == a.objectType && (e = a.displayObject.x * this.zoomLevel() + this.mapContainer.x, g = a.displayObject.y * this.zoomLevel() + this.mapContainer.y);\n            this.showBalloon(d, b, this.mouseIsOver, e, g);\n          }\n          c = {\n            type: \"rollOverMapObject\",\n            mapObject: a,\n            chart: this,\n            event: c\n          };\n          this.fire(c.type, c);\n          this.previouslyHovered = a;\n        }\n      }\n    },\n    longitudeToX: function (a) {\n      return this.longitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.x;\n    },\n    latitudeToY: function (a) {\n      return this.latitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.y;\n    },\n    rollOutMapObject: function (a, b) {\n      this.hideBalloon();\n\n      if (this.chartCreated && a.isOver) {\n        this.checkIfSelected(a) || this.returnInitialColor(a);\n        var c = {\n          type: \"rollOutMapObject\",\n          mapObject: a,\n          chart: this,\n          event: b\n        };\n        this.fire(c.type, c);\n      }\n    },\n    formatString: function (a, b) {\n      var c = this.nf,\n          h = this.pf,\n          f = b.title;\n      b.titleTr && (f = b.titleTr);\n      void 0 == f && (f = \"\");\n      var e = b.value,\n          e = isNaN(e) ? \"\" : d.formatNumber(e, c),\n          c = b.percents,\n          c = isNaN(c) ? \"\" : d.formatNumber(c, h),\n          h = b.description;\n      void 0 == h && (h = \"\");\n      var g = b.customData;\n      void 0 == g && (g = \"\");\n      return a = d.massReplace(a, {\n        \"[[title]]\": f,\n        \"[[value]]\": e,\n        \"[[percent]]\": c,\n        \"[[description]]\": h,\n        \"[[customData]]\": g\n      });\n    },\n    clickMapObject: function (a, b) {\n      this.hideBalloon();\n\n      if (this.chartCreated && !this.preventHover && !this.mapWasDragged && this.checkIfClickable(a) && !this.mapWasPinched) {\n        this.selectObject(a);\n        var c = {\n          type: \"clickMapObject\",\n          mapObject: a,\n          chart: this,\n          event: b\n        };\n        this.fire(c.type, c);\n        this.objectWasClicked = !0;\n      }\n    },\n    checkIfClickable: function (a) {\n      var b = this.allowClickOnSelectedObject;\n      return this.selectedObject == a && b ? !0 : this.selectedObject != a || b ? !0 === a.selectable || \"MapArea\" == a.objectType && a.autoZoomReal || a.url || a.linkToObject || 0 < a.images.length || 0 < a.lines.length || !isNaN(a.zoomLevel) || !isNaN(a.zoomX) || !isNaN(a.zoomY) || a.description ? !0 : !1 : !1;\n    },\n    resizeMap: function () {\n      var a = this.mapSet;\n\n      if (a) {\n        var b = 1,\n            c = a.getBBox(),\n            d = this.realWidth,\n            f = this.realHeight,\n            e = c.width,\n            g = c.height;\n        this.fitMapToContainer && (b = e / d > g / f ? d / e : f / g);\n        a.translate(-c.x * b, -c.y * b, b);\n        this.mapScale = b;\n        this.mapHeight = g * b;\n        this.mapWidth = e * b;\n      }\n    },\n    zoomIn: function () {\n      this.skipClick = !0;\n      var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    zoomOut: function () {\n      this.skipClick = !0;\n      var a = this.zoomLevel() / this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    moveLeft: function () {\n      this.skipClick = !0;\n      var a = this.zoomX() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveRight: function () {\n      this.skipClick = !0;\n      var a = this.zoomX() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveUp: function () {\n      this.skipClick = !0;\n      var a = this.zoomY() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    moveDown: function () {\n      this.skipClick = !0;\n      var a = this.zoomY() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    zoomX: function () {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.x / this.mapWidth) / 1E4 : NaN;\n    },\n    zoomY: function () {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.y / this.mapHeight) / 1E4 : NaN;\n    },\n    goHome: function () {\n      this.selectObject(this.dataProvider);\n      var a = {\n        type: \"homeButtonClicked\",\n        chart: this\n      };\n      this.fire(a.type, a);\n    },\n    zoomLevel: function () {\n      return Math.round(1E5 * this.mapContainer.scale) / 1E5;\n    },\n    showDescriptionAndGetUrl: function () {\n      var a = this.selectedObject;\n\n      if (a) {\n        this.showDescription();\n        var b = a.url;\n        if (b) d.getURL(b, a.urlTarget);else if (b = a.linkToObject) {\n          if (\"string\" == typeof b) {\n            var c = this.getObjectById(b);\n\n            if (c) {\n              this.selectObject(c);\n              return;\n            }\n          }\n\n          b && a.passZoomValuesToTarget && (b.zoomLatitude = this.zoomLatitude(), b.zoomLongitude = this.zoomLongitude(), b.zoomLevel = this.zoomLevel());\n          this.extendMapData(b) || this.selectObject(b);\n        }\n      }\n    },\n    extendMapData: function (a) {\n      var b = a.objectType;\n      if (\"MapImage\" != b && \"MapArea\" != b && \"MapLine\" != b) return d.extend(a, new d.MapData(), !0), this.dataProvider = a, this.zoomInstantly = !0, this.validateData(), !0;\n    },\n    showDescription: function (a) {\n      a || (a = this.selectedObject);\n      this.allowMultipleDescriptionWindows || this.closeAllDescriptions();\n\n      if (a.description) {\n        var b = a.descriptionWindow;\n        b && b.close();\n        b = new d.DescriptionWindow();\n        a.descriptionWindow = b;\n        var c = a.descriptionWindowWidth,\n            h = a.descriptionWindowHeight,\n            f = a.descriptionWindowLeft,\n            e = a.descriptionWindowTop,\n            g = a.descriptionWindowRight,\n            k = a.descriptionWindowBottom;\n        isNaN(g) || (f = this.realWidth - g);\n        isNaN(k) || (e = this.realHeight - k);\n        var l = a.descriptionWindowX;\n        isNaN(l) || (f = l);\n        l = a.descriptionWindowY;\n        isNaN(l) || (e = l);\n        isNaN(f) && (f = this.mouseX, f = f > this.realWidth / 2 ? f - c - 20 : f + 20);\n        isNaN(e) && (e = this.mouseY);\n        b.maxHeight = h;\n        l = a.title;\n        a.titleTr && (l = a.titleTr);\n        b.show(this, this.descriptionsDiv, a.description, l);\n        a = b.div.style;\n        a.position = \"absolute\";\n        a.width = c + \"px\";\n        a.maxHeight = h + \"px\";\n        isNaN(k) || (e -= b.div.offsetHeight);\n        isNaN(g) || (f -= b.div.offsetWidth);\n        a.left = f + \"px\";\n        a.top = e + \"px\";\n      }\n    },\n    parseXMLObject: function (a) {\n      var b = {\n        root: {}\n      };\n      this.parseXMLNode(b, \"root\", a);\n      this.svgData = b.root.svg;\n      this.getBounds();\n    },\n    getBounds: function () {\n      var a = this.dataProvider;\n\n      try {\n        var b = this.svgData.defs[\"amcharts:ammap\"];\n        a.leftLongitude = Number(b.leftLongitude);\n        a.rightLongitude = Number(b.rightLongitude);\n        a.topLatitude = Number(b.topLatitude);\n        a.bottomLatitude = Number(b.bottomLatitude);\n        a.projection = b.projection;\n        var c = b.wrappedLongitudes;\n        c && (a.rightLongitude += 360);\n        a.wrappedLongitudes = c;\n      } catch (d) {}\n    },\n    recalcLongitude: function (a) {\n      var b = this.dataProvider.leftLongitude,\n          c = this.dataProvider.wrappedLongitudes;\n      return isNaN(a) && c ? a < b ? Number(a) + 360 : a : a;\n    },\n    latitudeToCoordinate: function (a) {\n      var b,\n          c = this.dataProvider;\n\n      if (this.mapSet) {\n        b = c.topLatitude;\n        var d = c.bottomLatitude;\n        \"mercator\" == c.projection && (a = this.mercatorLatitudeToCoordinate(a), b = this.mercatorLatitudeToCoordinate(b), d = this.mercatorLatitudeToCoordinate(d));\n        b = (a - b) / (d - b) * this.mapHeight;\n      }\n\n      return b;\n    },\n    longitudeToCoordinate: function (a) {\n      a = this.recalcLongitude(a);\n      var b,\n          c = this.dataProvider;\n      this.mapSet && (b = c.leftLongitude, b = (a - b) / (c.rightLongitude - b) * this.mapWidth);\n      return b;\n    },\n    mercatorLatitudeToCoordinate: function (a) {\n      89.5 < a && (a = 89.5);\n      -89.5 > a && (a = -89.5);\n      a = d.degreesToRadians(a);\n      a = .5 * Math.log((1 + Math.sin(a)) / (1 - Math.sin(a)));\n      return d.radiansToDegrees(a / 2);\n    },\n    zoomLatitude: function () {\n      if (this.mapContainer) return this.coordinateToLatitude((-this.mapContainer.y + this.previousHeight / 2) / this.zoomLevel());\n    },\n    zoomLongitude: function () {\n      if (this.mapContainer) return this.coordinateToLongitude((-this.mapContainer.x + this.previousWidth / 2) / this.zoomLevel());\n    },\n    getAreaCenterLatitude: function (a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale;\n      a = -this.mapSet.getBBox().y * b + (a.y + a.height / 2) * b;\n      return this.coordinateToLatitude(a);\n    },\n    getAreaCenterLongitude: function (a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale;\n      a = -this.mapSet.getBBox().x * b + (a.x + a.width / 2) * b;\n      return this.coordinateToLongitude(a);\n    },\n    coordinateToLatitude: function (a) {\n      var b;\n\n      if (this.mapSet) {\n        var c = this.dataProvider,\n            h = c.bottomLatitude,\n            f = c.topLatitude;\n        b = this.mapHeight;\n        \"mercator\" == c.projection ? (c = this.mercatorLatitudeToCoordinate(h), f = this.mercatorLatitudeToCoordinate(f), a = 2 * Math.atan(Math.exp(2 * (a * (c - f) / b + f) * Math.PI / 180)) - .5 * Math.PI, b = d.radiansToDegrees(a)) : b = a / b * (h - f) + f;\n      }\n\n      return Math.round(1E6 * b) / 1E6;\n    },\n    coordinateToLongitude: function (a) {\n      var b,\n          c = this.dataProvider;\n      this.mapSet && (b = a / this.mapWidth * (c.rightLongitude - c.leftLongitude) + c.leftLongitude);\n      return Math.round(1E6 * b) / 1E6;\n    },\n    milesToPixels: function (a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 69.172;\n    },\n    kilometersToPixels: function (a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 111.325;\n    },\n    handleBackgroundClick: function () {\n      if (this.backgroundZoomsToTop && !this.mapWasDragged) {\n        var a = this.dataProvider;\n        if (this.checkIfClickable(a)) this.clickMapObject(a);else {\n          var b = a.zoomX,\n              c = a.zoomY,\n              d = a.zoomLongitude,\n              f = a.zoomLatitude,\n              a = a.zoomLevel;\n          isNaN(b) || isNaN(c) || this.zoomTo(a, b, c);\n          isNaN(d) || isNaN(f) || this.zoomToLongLat(a, d, f, !0);\n        }\n      }\n    },\n    parseXMLNode: function (a, b, c, d) {\n      void 0 === d && (d = \"\");\n      var f, e, g;\n\n      if (c) {\n        var k = c.childNodes.length;\n\n        for (f = 0; f < k; f++) {\n          e = c.childNodes[f];\n          var l = e.nodeName,\n              m = e.nodeValue ? this.trim(e.nodeValue) : \"\",\n              n = !1;\n          e.attributes && 0 < e.attributes.length && (n = !0);\n          if (0 !== e.childNodes.length || \"\" !== m || !1 !== n) if (3 == e.nodeType || 4 == e.nodeType) {\n            if (\"\" !== m) {\n              e = 0;\n\n              for (g in a[b]) a[b].hasOwnProperty(g) && e++;\n\n              e ? a[b][\"#text\"] = m : a[b] = m;\n            }\n          } else if (1 == e.nodeType) {\n            var p;\n            void 0 !== a[b][l] ? void 0 === a[b][l].length ? (p = a[b][l], a[b][l] = [], a[b][l].push(p), a[b][l].push({}), p = a[b][l][1]) : \"object\" == typeof a[b][l] && (a[b][l].push({}), p = a[b][l][a[b][l].length - 1]) : (a[b][l] = {}, p = a[b][l]);\n            if (e.attributes && e.attributes.length) for (m = 0; m < e.attributes.length; m++) p[e.attributes[m].name] = e.attributes[m].value;\n            void 0 !== a[b][l].length ? this.parseXMLNode(a[b][l], a[b][l].length - 1, e, d + \"  \") : this.parseXMLNode(a[b], l, e, d + \"  \");\n          }\n        }\n\n        e = 0;\n        c = \"\";\n\n        for (g in a[b]) \"#text\" == g ? c = a[b][g] : e++;\n\n        0 === e && void 0 === a[b].length && (a[b] = c);\n      }\n    },\n    doDoubleClickZoom: function () {\n      if (!this.mapWasDragged) {\n        var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n        this.zoomToStageXY(a, this.mouseX, this.mouseY);\n      }\n    },\n    getDevInfo: function () {\n      var a = this.zoomLevel(),\n          a = {\n        chart: this,\n        type: \"writeDevInfo\",\n        zoomLevel: a,\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLatitude: this.zoomLatitude(),\n        zoomLongitude: this.zoomLongitude(),\n        latitude: this.coordinateToLatitude((this.mouseY - this.mapContainer.y) / a),\n        longitude: this.coordinateToLongitude((this.mouseX - this.mapContainer.x) / a),\n        left: this.mouseX,\n        top: this.mouseY,\n        right: this.realWidth - this.mouseX,\n        bottom: this.realHeight - this.mouseY,\n        percentLeft: Math.round(this.mouseX / this.realWidth * 100) + \"%\",\n        percentTop: Math.round(this.mouseY / this.realHeight * 100) + \"%\",\n        percentRight: Math.round((this.realWidth - this.mouseX) / this.realWidth * 100) + \"%\",\n        percentBottom: Math.round((this.realHeight - this.mouseY) / this.realHeight * 100) + \"%\"\n      },\n          b = \"zoomLevel:\" + a.zoomLevel + \", zoomLongitude:\" + a.zoomLongitude + \", zoomLatitude:\" + a.zoomLatitude + \"\\n\",\n          b = b + (\"zoomX:\" + a.zoomX + \", zoomY:\" + a.zoomY + \"\\n\"),\n          b = b + (\"latitude:\" + a.latitude + \", longitude:\" + a.longitude + \"\\n\"),\n          b = b + (\"left:\" + a.left + \", top:\" + a.top + \"\\n\"),\n          b = b + (\"right:\" + a.right + \", bottom:\" + a.bottom + \"\\n\"),\n          b = b + (\"left:\" + a.percentLeft + \", top:\" + a.percentTop + \"\\n\"),\n          b = b + (\"right:\" + a.percentRight + \", bottom:\" + a.percentBottom + \"\\n\");\n      a.str = b;\n      this.fire(a.type, a);\n      return a;\n    },\n    getXY: function (a, b, c) {\n      void 0 !== a && (-1 != String(a).indexOf(\"%\") ? (a = Number(a.split(\"%\").join(\"\")), c && (a = 100 - a), a = Number(a) * b / 100) : c && (a = b - a));\n      return a;\n    },\n    getObjectById: function (a) {\n      var b = this.dataProvider;\n\n      if (b.areas) {\n        var c = this.getObject(a, b.areas);\n        if (c) return c;\n      }\n\n      if (c = this.getObject(a, b.images)) return c;\n      if (a = this.getObject(a, b.lines)) return a;\n    },\n    getObject: function (a, b) {\n      if (b) {\n        var c;\n\n        for (c = 0; c < b.length; c++) {\n          var d = b[c];\n          if (d.id == a) return d;\n\n          if (d.areas) {\n            var f = this.getObject(a, d.areas);\n            if (f) return f;\n          }\n\n          if (f = this.getObject(a, d.images)) return f;\n          if (d = this.getObject(a, d.lines)) return d;\n        }\n      }\n    },\n    parseData: function () {\n      var a = this.dataProvider;\n      this.processObject(a.areas, a, \"area\");\n      this.processObject(a.images, a, \"image\");\n      this.processObject(a.lines, a, \"line\");\n    },\n    processObject: function (a, b, c) {\n      if (a) {\n        var h;\n\n        for (h = 0; h < a.length; h++) {\n          var f = a[h];\n          f.parentObject = b;\n          \"area\" == c && d.extend(f, new d.MapArea(this.theme), !0);\n          \"image\" == c && (f = d.extend(f, new d.MapImage(this.theme), !0));\n          \"line\" == c && (f = d.extend(f, new d.MapLine(this.theme), !0));\n          a[h] = f;\n          f.areas && this.processObject(f.areas, f, \"area\");\n          f.images && this.processObject(f.images, f, \"image\");\n          f.lines && this.processObject(f.lines, f, \"line\");\n        }\n      }\n    },\n    positionChanged: function () {\n      var a = {\n        type: \"positionChanged\",\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLevel: this.zoomLevel(),\n        chart: this\n      };\n      this.fire(a.type, a);\n    },\n    getX: function (a, b) {\n      return this.getXY(a, this.realWidth, b);\n    },\n    getY: function (a, b) {\n      return this.getXY(a, this.realHeight, b);\n    },\n    trim: function (a) {\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) if (-1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n          a = a.substring(b);\n          break;\n        }\n\n        for (b = a.length - 1; 0 <= b; b--) if (-1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n          a = a.substring(0, b + 1);\n          break;\n        }\n\n        return -1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(0)) ? a : \"\";\n      }\n    },\n    destroy: function () {\n      d.AmMap.base.destroy.call(this);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ZoomControl = d.Class({\n    construct: function (a) {\n      this.cname = \"ZoomControl\";\n      this.panStepSize = .1;\n      this.zoomFactor = 2;\n      this.maxZoomLevel = 64;\n      this.minZoomLevel = 1;\n      this.zoomControlEnabled = this.panControlEnabled = !0;\n      this.buttonRollOverColor = \"#CC0000\";\n      this.buttonFillColor = \"#990000\";\n      this.buttonFillAlpha = 1;\n      this.buttonBorderColor = \"#FFFFFF\";\n      this.buttonIconAlpha = this.buttonBorderThickness = this.buttonBorderAlpha = 1;\n      this.gridColor = \"#FFFFFF\";\n      this.homeIconFile = \"homeIcon.gif\";\n      this.gridBackgroundColor = \"#000000\";\n      this.gridBackgroundAlpha = .15;\n      this.gridAlpha = 1;\n      this.buttonSize = 18;\n      this.iconSize = 11;\n      this.buttonCornerRadius = 0;\n      this.gridHeight = 150;\n      this.top = this.left = 10;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      var c = this;\n      c.chart = a;\n      d.remove(c.set);\n      var h = b.set();\n      d.setCN(a, h, \"zoom-control\");\n      var f = c.buttonSize,\n          e = c.zoomControlEnabled,\n          g = c.panControlEnabled,\n          k = c.buttonFillColor,\n          l = c.buttonFillAlpha,\n          m = c.buttonBorderThickness,\n          n = c.buttonBorderColor,\n          p = c.buttonBorderAlpha,\n          u = c.buttonCornerRadius,\n          r = c.buttonRollOverColor,\n          A = c.gridHeight,\n          B = c.zoomFactor,\n          w = c.minZoomLevel,\n          D = c.maxZoomLevel,\n          x = c.buttonIconAlpha,\n          y = a.getX(c.left),\n          q = a.getY(c.top);\n      isNaN(c.right) || (y = a.getX(c.right, !0), y = g ? y - 3 * f : y - f);\n      isNaN(c.bottom) || (q = a.getY(c.bottom, !0), e && (q -= A + 3 * f), q = g ? q - 3 * f : q + f);\n      h.translate(y, q);\n      c.previousDY = NaN;\n      var v;\n\n      if (e) {\n        v = b.set();\n        d.setCN(a, v, \"zoom-control-zoom\");\n        h.push(v);\n        c.set = h;\n        c.zoomSet = v;\n        q = d.rect(b, f + 6, A + 2 * f + 6, c.gridBackgroundColor, c.gridBackgroundAlpha, 0, 0, 0, 4);\n        d.setCN(a, q, \"zoom-bg\");\n        q.translate(-3, -3);\n        q.mouseup(function () {\n          c.handleBgUp();\n        }).touchend(function () {\n          c.handleBgUp();\n        });\n        v.push(q);\n        q = new d.SimpleButton();\n        q.setIcon(a.pathToImages + \"plus.gif\", c.iconSize);\n        q.setClickHandler(a.zoomIn, a);\n        q.init(b, f, f, k, l, m, n, p, u, r, x);\n        d.setCN(a, q.set, \"zoom-in\");\n        v.push(q.set);\n        q = new d.SimpleButton();\n        q.setIcon(a.pathToImages + \"minus.gif\", c.iconSize);\n        q.setClickHandler(a.zoomOut, a);\n        q.init(b, f, f, k, l, m, n, p, u, r, x);\n        q.set.translate(0, A + f);\n        d.setCN(a, q.set, \"zoom-out\");\n        v.push(q.set);\n        var y = Math.log(D / w) / Math.log(B) + 1,\n            e = A / y,\n            t;\n\n        for (t = 1; t < y; t++) q = f + t * e, q = d.line(b, [1, f - 2], [q, q], c.gridColor, c.gridAlpha, 1), d.setCN(a, q, \"zoom-grid\"), v.push(q);\n\n        q = new d.SimpleButton();\n        q.setDownHandler(c.draggerDown, c);\n        q.setClickHandler(c.draggerUp, c);\n        q.init(b, f, e, k, l, m, n, p, u, r);\n        d.setCN(a, q.set, \"zoom-dragger\");\n        v.push(q.set);\n        c.dragger = q.set;\n        c.previousY = NaN;\n        A -= e;\n        w = Math.log(w / 100) / Math.log(B);\n        B = Math.log(D / 100) / Math.log(B);\n        c.realStepSize = A / (B - w);\n        c.realGridHeight = A;\n        c.stepMax = B;\n      }\n\n      g && (g = b.set(), d.setCN(a, g, \"zoom-control-pan\"), h.push(g), v && v.translate(f, 4 * f), v = new d.SimpleButton(), v.setIcon(a.pathToImages + \"panLeft.gif\", c.iconSize), v.setClickHandler(a.moveLeft, a), v.init(b, f, f, k, l, m, n, p, u, r, x), v.set.translate(0, f), d.setCN(a, v.set, \"pan-left\"), g.push(v.set), v = new d.SimpleButton(), v.setIcon(a.pathToImages + \"panRight.gif\", c.iconSize), v.setClickHandler(a.moveRight, a), v.init(b, f, f, k, l, m, n, p, u, r, x), v.set.translate(2 * f, f), d.setCN(a, v.set, \"pan-right\"), g.push(v.set), v = new d.SimpleButton(), v.setIcon(a.pathToImages + \"panUp.gif\", c.iconSize), v.setClickHandler(a.moveUp, a), v.init(b, f, f, k, l, m, n, p, u, r, x), v.set.translate(f, 0), d.setCN(a, v.set, \"pan-up\"), g.push(v.set), v = new d.SimpleButton(), v.setIcon(a.pathToImages + \"panDown.gif\", c.iconSize), v.setClickHandler(a.moveDown, a), v.init(b, f, f, k, l, m, n, p, u, r, x), v.set.translate(f, 2 * f), d.setCN(a, v.set, \"pan-down\"), g.push(v.set), l = new d.SimpleButton(), l.setIcon(a.pathToImages + c.homeIconFile, c.iconSize), l.setClickHandler(a.goHome, a), l.init(b, f, f, k, 0, 0, n, 0, u, r, x), l.set.translate(f, f), d.setCN(a, l.set, \"pan-home\"), g.push(l.set), h.push(g));\n    },\n    draggerDown: function () {\n      this.chart.stopDrag();\n      this.isDragging = !0;\n    },\n    draggerUp: function () {\n      this.isDragging = !1;\n    },\n    handleBgUp: function () {\n      var a = this.chart,\n          b = 100 * Math.pow(this.zoomFactor, this.stepMax - (a.mouseY - this.zoomSet.y - this.set.y - this.buttonSize - this.realStepSize / 2) / this.realStepSize);\n      a.zoomTo(b);\n    },\n    update: function () {\n      var a,\n          b = this.zoomFactor,\n          c = this.realStepSize,\n          h = this.stepMax,\n          f = this.dragger,\n          e = this.buttonSize,\n          g = this.chart;\n      this.isDragging ? (g.stopDrag(), a = f.y + (g.mouseY - this.previousY), a = d.fitToBounds(a, e, this.realGridHeight + e), c = 100 * Math.pow(b, h - (a - e) / c), g.zoomTo(c, NaN, NaN, !0)) : (a = Math.log(g.zoomLevel() / 100) / Math.log(b), a = (h - a) * c + e);\n      this.previousY = g.mouseY;\n      this.previousDY != a && f && (f.translate(0, a), this.previousDY = a);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SimpleButton = d.Class({\n    construct: function () {},\n    init: function (a, b, c, h, f, e, g, k, l, m, n) {\n      var p = this;\n      p.rollOverColor = m;\n      p.color = h;\n      m = a.set();\n      p.set = m;\n      h = d.rect(a, b, c, h, f, e, g, k, l);\n      m.push(h);\n      if (f = p.iconPath) e = p.iconSize, a = a.image(f, (b - e) / 2, (c - e) / 2, e, e), m.push(a), a.setAttr(\"opacity\", n), a.mousedown(function () {\n        p.handleDown();\n      }).mouseup(function () {\n        p.handleUp();\n      }).mouseover(function () {\n        p.handleOver();\n      }).mouseout(function () {\n        p.handleOut();\n      });\n      h.mousedown(function () {\n        p.handleDown();\n      }).touchstart(function () {\n        p.handleDown();\n      }).mouseup(function () {\n        p.handleUp();\n      }).touchend(function () {\n        p.handleUp();\n      }).mouseover(function () {\n        p.handleOver();\n      }).mouseout(function () {\n        p.handleOut();\n      });\n      p.bg = h;\n    },\n    setIcon: function (a, b) {\n      this.iconPath = a;\n      this.iconSize = b;\n    },\n    setClickHandler: function (a, b) {\n      this.clickHandler = a;\n      this.scope = b;\n    },\n    setDownHandler: function (a, b) {\n      this.downHandler = a;\n      this.scope = b;\n    },\n    handleUp: function () {\n      var a = this.clickHandler;\n      a && a.call(this.scope);\n    },\n    handleDown: function () {\n      var a = this.downHandler;\n      a && a.call(this.scope);\n    },\n    handleOver: function () {\n      this.bg.setAttr(\"fill\", this.rollOverColor);\n    },\n    handleOut: function () {\n      this.bg.setAttr(\"fill\", this.color);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SmallMap = d.Class({\n    construct: function (a) {\n      this.cname = \"SmallMap\";\n      this.mapColor = \"#e6e6e6\";\n      this.rectangleColor = \"#FFFFFF\";\n      this.top = this.right = 10;\n      this.minimizeButtonWidth = 16;\n      this.backgroundColor = \"#9A9A9A\";\n      this.backgroundAlpha = 1;\n      this.borderColor = \"#FFFFFF\";\n      this.borderThickness = 3;\n      this.borderAlpha = 1;\n      this.size = .2;\n      this.enabled = !0;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      var c = this;\n\n      if (c.enabled) {\n        c.chart = a;\n        c.container = b;\n        c.width = a.realWidth * c.size;\n        c.height = a.realHeight * c.size;\n        d.remove(c.set);\n        var h = b.set();\n        c.set = h;\n        d.setCN(a, h, \"small-map\");\n        var f = b.set();\n        c.allSet = f;\n        h.push(f);\n        c.buildSVGMap();\n        var e = c.borderThickness,\n            g = c.borderColor,\n            k = d.rect(b, c.width + e, c.height + e, c.backgroundColor, c.backgroundAlpha, e, g, c.borderAlpha);\n        d.setCN(a, k, \"small-map-bg\");\n        k.translate(-e / 2, -e / 2);\n        f.push(k);\n        k.toBack();\n        var l,\n            m,\n            k = c.minimizeButtonWidth,\n            n = new d.SimpleButton();\n        n.setIcon(a.pathToImages + \"arrowDown.gif\", k);\n        n.setClickHandler(c.minimize, c);\n        n.init(b, k, k, g, 1, 1, g, 1);\n        d.setCN(a, n.set, \"small-map-down\");\n        n = n.set;\n        c.downButtonSet = n;\n        h.push(n);\n        var p = new d.SimpleButton();\n        p.setIcon(a.pathToImages + \"arrowUp.gif\", k);\n        p.setClickHandler(c.maximize, c);\n        p.init(b, k, k, g, 1, 1, g, 1);\n        d.setCN(a, p.set, \"small-map-up\");\n        g = p.set;\n        c.upButtonSet = g;\n        g.hide();\n        h.push(g);\n        var u, r;\n        isNaN(c.top) || (l = a.getY(c.top) + e, r = 0);\n        isNaN(c.bottom) || (l = a.getY(c.bottom, !0) - c.height - e, r = c.height - k + e / 2);\n        isNaN(c.left) || (m = a.getX(c.left) + e, u = -e / 2);\n        isNaN(c.right) || (m = a.getX(c.right, !0) - c.width - e, u = c.width - k + e / 2);\n        e = b.set();\n        e.clipRect(1, 1, c.width, c.height);\n        f.push(e);\n        c.rectangleC = e;\n        h.translate(m, l);\n        n.translate(u, r);\n        g.translate(u, r);\n        f.mouseup(function () {\n          c.handleMouseUp();\n        });\n        c.drawRectangle();\n      } else d.remove(c.allSet), d.remove(c.downButtonSet), d.remove(c.upButtonSet);\n    },\n    minimize: function () {\n      this.downButtonSet.hide();\n      this.upButtonSet.show();\n      this.allSet.hide();\n    },\n    maximize: function () {\n      this.downButtonSet.show();\n      this.upButtonSet.hide();\n      this.allSet.show();\n    },\n    buildSVGMap: function () {\n      var a = this.chart,\n          b = {\n        fill: this.mapColor,\n        stroke: this.mapColor,\n        \"stroke-opacity\": 1\n      },\n          c = a.svgData.g.path,\n          h = this.container,\n          f = h.set();\n      d.setCN(a, f, \"small-map-image\");\n      var e;\n\n      for (e = 0; e < c.length; e++) {\n        var g = h.path(c[e].d).attr(b);\n        f.push(g);\n      }\n\n      this.allSet.push(f);\n      b = f.getBBox();\n      c = this.size * a.mapScale;\n      h = -b.x * c;\n      e = -b.y * c;\n      var k = g = 0;\n      a.centerMap && (g = (this.width - b.width * c) / 2, k = (this.height - b.height * c) / 2);\n      this.mapWidth = b.width * c;\n      this.mapHeight = b.height * c;\n      this.dx = g;\n      this.dy = k;\n      f.translate(h + g, e + k, c);\n    },\n    update: function () {\n      var a = this.chart,\n          b = a.zoomLevel(),\n          c = this.width,\n          d = a.mapContainer,\n          a = c / (a.realWidth * b),\n          c = c / b,\n          b = this.height / b,\n          f = this.rectangle;\n      f.translate(-d.x * a + this.dx, -d.y * a + this.dy);\n      0 < c && 0 < b && (f.setAttr(\"width\", Math.ceil(c + 1)), f.setAttr(\"height\", Math.ceil(b + 1)));\n      this.rWidth = c;\n      this.rHeight = b;\n    },\n    drawRectangle: function () {\n      var a = this.rectangle;\n      d.remove(a);\n      a = d.rect(this.container, 10, 10, \"#000\", 0, 1, this.rectangleColor, 1);\n      d.setCN(this.chart, a, \"small-map-rectangle\");\n      this.rectangleC.push(a);\n      this.rectangle = a;\n    },\n    handleMouseUp: function () {\n      var a = this.chart,\n          b = a.zoomLevel();\n      a.zoomTo(b, -((a.mouseX - this.set.x - this.dx - this.rWidth / 2) / this.mapWidth) * b, -((a.mouseY - this.set.y - this.dy - this.rHeight / 2) / this.mapHeight) * b);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n    },\n    process: function (a) {\n      this.updateAllAreas();\n      this.allObjects = [];\n      a = a.areas;\n      var b = this.chart,\n          c,\n          h = a.length,\n          f,\n          e,\n          g = 0,\n          k = b.svgAreasById,\n          l = !1,\n          m = !1,\n          n = 0;\n\n      for (f = 0; f < h; f++) {\n        e = a[f];\n        e = e.value;\n        if (!1 === l || l < e) l = e;\n        if (!1 === m || m > e) m = e;\n        isNaN(e) || (g += Math.abs(e), n++);\n      }\n\n      isNaN(b.minValue) || (m = b.minValue);\n      isNaN(b.maxValue) || (l = b.maxValue);\n      b.maxValueReal = l;\n      b.minValueReal = m;\n\n      for (f = 0; f < h; f++) e = a[f], isNaN(e.value) ? e.percents = void 0 : (e.percents = (e.value - m) / g * 100, m == l && (e.percents = 100));\n\n      for (f = 0; f < h; f++) {\n        e = a[f];\n        var p = k[e.id];\n        c = b.areasSettings;\n        p && p.className && (g = b.areasClasses[p.className]) && (c = g, c = d.processObject(c, d.AreasSettings, b.theme));\n        var u = c.color,\n            r = c.alpha,\n            A = c.outlineThickness,\n            B = c.rollOverColor,\n            w = c.selectedColor,\n            D = c.rollOverAlpha,\n            x = c.outlineColor,\n            y = c.outlineAlpha,\n            q = c.balloonText,\n            v = c.selectable,\n            t = c.pattern,\n            z = c.rollOverOutlineColor,\n            C = c.bringForwardOnHover,\n            G = c.preserveOriginalAttributes;\n        this.allObjects.push(e);\n        e.chart = b;\n        e.baseSettings = c;\n        e.autoZoomReal = void 0 == e.autoZoom ? c.autoZoom : e.autoZoom;\n        g = e.color;\n        void 0 == g && (g = u);\n        n = e.alpha;\n        isNaN(n) && (n = r);\n        r = e.rollOverAlpha;\n        isNaN(r) && (r = D);\n        isNaN(r) && (r = n);\n        D = e.rollOverColor;\n        void 0 == D && (D = B);\n        B = e.pattern;\n        void 0 == B && (B = t);\n        t = e.selectedColor;\n        void 0 == t && (t = w);\n        (w = e.balloonText) || (w = q);\n        void 0 == c.colorSolid || isNaN(e.value) || (q = Math.floor((e.value - m) / ((l - m) / b.colorSteps)), q == b.colorSteps && q--, q *= 1 / (b.colorSteps - 1), l == m && (q = 1), e.colorReal = d.getColorFade(g, c.colorSolid, q));\n        void 0 != e.color && (e.colorReal = e.color);\n        void 0 == e.selectable && (e.selectable = v);\n        void 0 == e.colorReal && (e.colorReal = u);\n        u = e.outlineColor;\n        void 0 == u && (u = x);\n        x = e.outlineAlpha;\n        isNaN(x) && (x = y);\n        y = e.outlineThickness;\n        isNaN(y) && (y = A);\n        A = e.rollOverOutlineColor;\n        void 0 == A && (A = z);\n        void 0 == e.bringForwardOnHover && (e.bringForwardOnHover = C);\n        void 0 == e.preserveOriginalAttributes && (e.preserveOriginalAttributes = G);\n        e.alphaReal = n;\n        e.rollOverColorReal = D;\n        e.rollOverAlphaReal = r;\n        e.balloonTextReal = w;\n        e.selectedColorReal = t;\n        e.outlineColorReal = u;\n        e.outlineAlphaReal = x;\n        e.rollOverOutlineColorReal = A;\n        e.outlineThicknessReal = y;\n        e.patternReal = B;\n        d.processDescriptionWindow(c, e);\n\n        if (p && (c = p.area, z = p.title, e.enTitle = p.title, z && !e.title && (e.title = z), (p = b.language) ? (z = d.mapTranslations) && (p = z[p]) && p[e.enTitle] && (e.titleTr = p[e.enTitle]) : e.titleTr = void 0, c)) {\n          e.displayObject = c;\n          e.mouseEnabled && b.addObjectEventListeners(c, e);\n          var E;\n          void 0 != g && (E = g);\n          void 0 != e.colorReal && (E = e.showAsSelected || b.selectedObject == e ? e.selectedColorReal : e.colorReal);\n          c.node.setAttribute(\"class\", \"\");\n          d.setCN(b, c, \"map-area\");\n          d.setCN(b, c, \"map-area-\" + c.id);\n          e.preserveOriginalAttributes || (c.setAttr(\"fill\", E), c.setAttr(\"stroke\", u), c.setAttr(\"stroke-opacity\", x), c.setAttr(\"stroke-width\", y), c.setAttr(\"fill-opacity\", n));\n          B && c.pattern(B, b.mapScale);\n          e.hidden && c.hide();\n        }\n      }\n    },\n    updateAllAreas: function () {\n      var a = this.chart,\n          b = a.areasSettings,\n          c = b.unlistedAreasColor,\n          h = b.unlistedAreasAlpha,\n          f = b.unlistedAreasOutlineColor,\n          e = b.unlistedAreasOutlineAlpha,\n          g = a.svgAreas,\n          k = a.dataProvider,\n          l = k.areas,\n          m = {},\n          n;\n\n      for (n = 0; n < l.length; n++) m[l[n].id] = l[n];\n\n      for (n = 0; n < g.length; n++) {\n        l = g[n];\n\n        if (b.preserveOriginalAttributes) {\n          if (l.customAttr) for (var p in l.customAttr) l.setAttr(p, l.customAttr[p]);\n        } else void 0 != c && l.setAttr(\"fill\", c), isNaN(h) || l.setAttr(\"fill-opacity\", h), void 0 != f && l.setAttr(\"stroke\", f), isNaN(e) || l.setAttr(\"stroke-opacity\", e), l.setAttr(\"stroke-width\", b.outlineThickness);\n\n        d.setCN(a, l, \"map-area-unlisted\");\n\n        if (k.getAreasFromMap && !m[l.id]) {\n          var u = new d.MapArea(a.theme);\n          u.parentObject = k;\n          u.id = l.id;\n          k.areas.push(u);\n        }\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"AreasSettings\";\n      this.alpha = 1;\n      this.autoZoom = !1;\n      this.balloonText = \"[[title]]\";\n      this.color = \"#FFCC00\";\n      this.colorSolid = \"#990000\";\n      this.unlistedAreasAlpha = 1;\n      this.unlistedAreasColor = \"#DDDDDD\";\n      this.outlineColor = \"#FFFFFF\";\n      this.outlineAlpha = 1;\n      this.outlineThickness = .5;\n      this.selectedColor = this.rollOverOutlineColor = \"#CC0000\";\n      this.unlistedAreasOutlineColor = \"#FFFFFF\";\n      this.unlistedAreasOutlineAlpha = 1;\n      this.descriptionWindowWidth = 250;\n      this.adjustOutlineThickness = !1;\n      this.bringForwardOnHover = !0;\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function (a) {\n      var b = a.images,\n          c;\n\n      for (c = 0; c < b.length; c++) this.createImage(b[c], c);\n\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    createImage: function (a, b) {\n      var c = this.chart,\n          h = c.container,\n          f = c.mapImagesContainer,\n          e = c.stageImagesContainer,\n          g = c.imagesSettings;\n      a.remove && a.remove();\n      var k = g.color,\n          l = g.alpha,\n          m = g.rollOverColor,\n          n = g.selectedColor,\n          p = g.balloonText,\n          u = g.outlineColor,\n          r = g.outlineAlpha,\n          A = g.outlineThickness,\n          B = g.selectedScale,\n          w = g.labelPosition,\n          D = g.labelColor,\n          x = g.labelFontSize,\n          y = g.bringForwardOnHover,\n          q = g.labelRollOverColor,\n          v = g.selectedLabelColor;\n      a.index = b;\n      a.chart = c;\n      a.baseSettings = c.imagesSettings;\n      var t = h.set();\n      a.displayObject = t;\n      var z = a.color;\n      void 0 == z && (z = k);\n      k = a.alpha;\n      isNaN(k) && (k = l);\n      void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = y);\n      l = a.outlineAlpha;\n      isNaN(l) && (l = r);\n      r = a.rollOverColor;\n      void 0 == r && (r = m);\n      m = a.selectedColor;\n      void 0 == m && (m = n);\n      (n = a.balloonText) || (n = p);\n      p = a.outlineColor;\n      void 0 == p && (p = u);\n      void 0 == p && (p = z);\n      u = a.outlineThickness;\n      isNaN(u) && (u = A);\n      (A = a.labelPosition) || (A = w);\n      w = a.labelColor;\n      void 0 == w && (w = D);\n      D = a.labelRollOverColor;\n      void 0 == D && (D = q);\n      q = a.selectedLabelColor;\n      void 0 == q && (q = v);\n      v = a.labelFontSize;\n      isNaN(v) && (v = x);\n      x = a.selectedScale;\n      isNaN(x) && (x = B);\n      isNaN(a.rollOverScale);\n      a.colorReal = z;\n      a.alphaReal = k;\n      a.rollOverColorReal = r;\n      a.balloonTextReal = n;\n      a.selectedColorReal = m;\n      a.labelColorReal = w;\n      a.labelRollOverColorReal = D;\n      a.selectedLabelColorReal = q;\n      a.labelFontSizeReal = v;\n      a.labelPositionReal = A;\n      a.selectedScaleReal = x;\n      a.rollOverScaleReal = x;\n      d.processDescriptionWindow(g, a);\n      a.centeredReal = void 0 == a.centered ? g.centered : a.centered;\n      v = a.type;\n      q = a.imageURL;\n      D = a.svgPath;\n      r = a.width;\n      w = a.height;\n      B = a.scale;\n      isNaN(a.percentWidth) || (r = a.percentWidth / 100 * c.realWidth);\n      isNaN(a.percentHeight) || (w = a.percentHeight / 100 * c.realHeight);\n      var C;\n      q || v || D || (v = \"circle\", r = 1, l = k = 0);\n      m = x = 0;\n      g = a.selectedColorReal;\n\n      if (v) {\n        isNaN(r) && (r = 10);\n        isNaN(w) && (w = 10);\n        \"kilometers\" == a.widthAndHeightUnits && (r = c.kilometersToPixels(a.width), w = c.kilometersToPixels(a.height));\n        \"miles\" == a.widthAndHeightUnits && (r = c.milesToPixels(a.width), w = c.milesToPixels(a.height));\n        if (\"circle\" == v || \"bubble\" == v) w = r;\n        C = this.createPredefinedImage(z, p, u, v, r, w);\n        m = x = 0;\n        a.centeredReal ? (isNaN(a.right) || (x = r * B), isNaN(a.bottom) || (m = w * B)) : (x = r * B / 2, m = w * B / 2);\n        C.translate(x, m, B);\n      } else q ? (isNaN(r) && (r = 10), isNaN(w) && (w = 10), C = h.image(q, 0, 0, r, w), C.node.setAttribute(\"preserveAspectRatio\", \"none\"), C.setAttr(\"opacity\", k), a.centeredReal && (x = isNaN(a.right) ? -r / 2 : r / 2, m = isNaN(a.bottom) ? -w / 2 : w / 2, C.translate(x, m))) : D && (C = h.path(D), p = C.getBBox(), a.centeredReal ? (x = -p.x * B - p.width * B / 2, isNaN(a.right) || (x = -x), m = -p.y * B - p.height * B / 2, isNaN(a.bottom) || (m = -m)) : x = m = 0, C.translate(x, m, B), C.x = x, C.y = m);\n\n      C && (t.push(C), a.image = C, C.setAttr(\"stroke-opacity\", l), C.setAttr(\"fill-opacity\", k), C.setAttr(\"fill\", z), d.setCN(c, C, \"map-image\"), void 0 != a.id && d.setCN(c, C, \"map-image-\" + a.id));\n      z = a.labelColorReal;\n      !a.showAsSelected && c.selectedObject != a || void 0 == g || (C.setAttr(\"fill\", g), z = a.selectedLabelColorReal);\n      C = null;\n      void 0 !== a.label && (C = d.text(h, a.label, z, c.fontFamily, a.labelFontSizeReal, a.labelAlign), d.setCN(c, C, \"map-image-label\"), void 0 !== a.id && d.setCN(c, C, \"map-image-label-\" + a.id), z = a.labelBackgroundAlpha, (k = a.labelBackgroundColor) && 0 < z && (l = C.getBBox(), h = d.rect(h, l.width + 16, l.height + 10, k, z), d.setCN(c, h, \"map-image-label-background\"), void 0 != a.id && d.setCN(c, h, \"map-image-label-background-\" + a.id), t.push(h), a.labelBG = h), a.imageLabel = C, t.push(C), d.setCN(c, t, \"map-image-container\"), void 0 != a.id && d.setCN(c, t, \"map-image-container-\" + a.id));\n      isNaN(a.latitude) || isNaN(a.longitude) ? e.push(t) : f.push(t);\n      t && (t.rotation = a.rotation);\n      this.updateSizeAndPosition(a);\n      a.mouseEnabled && c.addObjectEventListeners(t, a);\n      a.hidden && t.hide();\n    },\n    updateSizeAndPosition: function (a) {\n      var b = this.chart,\n          c = a.displayObject,\n          d = b.getX(a.left),\n          f = b.getY(a.top),\n          e = a.image.getBBox();\n      isNaN(a.right) || (d = b.getX(a.right, !0) - e.width * a.scale);\n      isNaN(a.bottom) || (f = b.getY(a.bottom, !0) - e.height * a.scale);\n      var g = a.longitude,\n          k = a.latitude,\n          e = this.objectsToResize;\n      this.allSvgObjects.push(c);\n      this.allObjects.push(a);\n      var l = a.imageLabel;\n      if (!isNaN(d) && !isNaN(f)) c.translate(d, f);else if (!isNaN(k) && !isNaN(g) && (d = b.longitudeToCoordinate(g), f = b.latitudeToCoordinate(k), c.translate(d, f, NaN, !0), a.fixedSize)) {\n        d = 1;\n        if (a.showAsSelected || b.selectedObject == a) d = a.selectedScaleReal;\n        e.push({\n          image: c,\n          scale: d\n        });\n      }\n      this.positionLabel(l, a, a.labelPositionReal);\n    },\n    positionLabel: function (a, b, c) {\n      if (a) {\n        var d = b.image,\n            f = 0,\n            e = 0,\n            g = 0,\n            k = 0;\n        d && (k = d.getBBox(), e = d.y, f = d.x, g = k.width, k = k.height, b.svgPath && (g *= b.scale, k *= b.scale));\n        var d = a.getBBox(),\n            l = d.width,\n            m = d.height;\n        \"right\" == c && (f += g + l / 2 + 5, e += k / 2 - 2);\n        \"left\" == c && (f += -l / 2 - 5, e += k / 2 - 2);\n        \"top\" == c && (e -= m / 2 + 3, f += g / 2);\n        \"bottom\" == c && (e += k + m / 2, f += g / 2);\n        \"middle\" == c && (f += g / 2, e += k / 2);\n        a.translate(f + b.labelShiftX, e + b.labelShiftY);\n        b.labelBG && b.labelBG.translate(f - d.width / 2 + b.labelShiftX - 9, e + b.labelShiftY - d.height / 2 - 3);\n      }\n    },\n    createPredefinedImage: function (a, b, c, h, f, e) {\n      var g = this.chart.container,\n          k;\n\n      switch (h) {\n        case \"circle\":\n          k = d.circle(g, f / 2, a, 1, c, b, 1);\n          break;\n\n        case \"rectangle\":\n          k = d.polygon(g, [-f / 2, f / 2, f / 2, -f / 2], [e / 2, e / 2, -e / 2, -e / 2], a, 1, c, b, 1);\n          break;\n\n        case \"bubble\":\n          k = d.circle(g, f / 2, a, 1, c, b, 1, !0);\n      }\n\n      return k;\n    },\n    reset: function () {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.allLabels = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"ImagesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.alpha = 1;\n      this.borderAlpha = 0;\n      this.borderThickness = 1;\n      this.labelPosition = \"right\";\n      this.labelColor = \"#000000\";\n      this.labelFontSize = 11;\n      this.color = \"#000000\";\n      this.labelRollOverColor = \"#00CC00\";\n      this.centered = !0;\n      this.rollOverScale = this.selectedScale = 1;\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function (a) {\n      var b = a.lines,\n          c = this.chart,\n          h = c.linesSettings,\n          f = this.objectsToResize,\n          e = c.mapLinesContainer,\n          g = c.stageLinesContainer,\n          k = h.thickness,\n          l = h.dashLength,\n          m = h.arrow,\n          n = h.arrowSize,\n          p = h.arrowColor,\n          u = h.arrowAlpha,\n          r = h.color,\n          A = h.alpha,\n          B = h.rollOverColor,\n          w = h.selectedColor,\n          D = h.rollOverAlpha,\n          x = h.balloonText,\n          y = h.bringForwardOnHover,\n          q = c.container,\n          v;\n\n      for (v = 0; v < b.length; v++) {\n        var t = b[v];\n        t.chart = c;\n        t.baseSettings = h;\n        var z = q.set();\n        t.displayObject = z;\n        this.allSvgObjects.push(z);\n        this.allObjects.push(t);\n        t.mouseEnabled && c.addObjectEventListeners(z, t);\n\n        if (t.remainVisible || c.selectedObject == t.parentObject) {\n          var C = t.thickness;\n          isNaN(C) && (C = k);\n          var G = t.dashLength;\n          isNaN(G) && (G = l);\n          var E = t.color;\n          void 0 == E && (E = r);\n          var F = t.alpha;\n          isNaN(F) && (F = A);\n          var H = t.rollOverAlpha;\n          isNaN(H) && (H = D);\n          isNaN(H) && (H = F);\n          var J = t.rollOverColor;\n          void 0 == J && (J = B);\n          var U = t.selectedColor;\n          void 0 == U && (U = w);\n          var S = t.balloonText;\n          S || (S = x);\n          var M = t.arrow;\n          if (!M || \"none\" == M && \"none\" != m) M = m;\n          var O = t.arrowColor;\n          void 0 == O && (O = p);\n          void 0 == O && (O = E);\n          var P = t.arrowAlpha;\n          isNaN(P) && (P = u);\n          isNaN(P) && (P = F);\n          var N = t.arrowSize;\n          isNaN(N) && (N = n);\n          t.alphaReal = F;\n          t.colorReal = E;\n          t.rollOverColorReal = J;\n          t.rollOverAlphaReal = H;\n          t.balloonTextReal = S;\n          t.selectedColorReal = U;\n          t.thicknessReal = C;\n          void 0 == t.bringForwardOnHover && (t.bringForwardOnHover = y);\n          d.processDescriptionWindow(h, t);\n          var H = this.processCoordinates(t.x, c.realWidth),\n              J = this.processCoordinates(t.y, c.realHeight),\n              L = t.longitudes,\n              S = t.latitudes,\n              K = L.length,\n              Q;\n          if (0 < K) for (H = [], Q = 0; Q < K; Q++) H.push(c.longitudeToCoordinate(L[Q]));\n          K = S.length;\n          if (0 < K) for (J = [], Q = 0; Q < K; Q++) J.push(c.latitudeToCoordinate(S[Q]));\n\n          if (0 < H.length) {\n            d.dx = 0;\n            d.dy = 0;\n            L = d.line(q, H, J, E, 1, C, G, !1, !1, !0);\n            d.setCN(c, L, \"map-line\");\n            void 0 != t.id && d.setCN(c, L, \"map-line-\" + t.id);\n            G = d.line(q, H, J, E, .001, 3, G, !1, !1, !0);\n            d.dx = .5;\n            d.dy = .5;\n            z.push(L);\n            z.push(G);\n            z.setAttr(\"opacity\", F);\n\n            if (\"none\" != M) {\n              var I, R, T;\n              if (\"end\" == M || \"both\" == M) F = H[H.length - 1], E = J[J.length - 1], 1 < H.length ? (K = H[H.length - 2], I = J[J.length - 2]) : (K = F, I = E), I = 180 * Math.atan((E - I) / (F - K)) / Math.PI, R = F, T = E, I = 0 > F - K ? I - 90 : I + 90;\n              \"both\" == M && (F = d.polygon(q, [-N / 2, 0, N / 2], [1.5 * N, 0, 1.5 * N], O, P, 1, O, P), z.push(F), F.translate(R, T), F.rotate(I), d.setCN(c, L, \"map-line-arrow\"), void 0 != t.id && d.setCN(c, L, \"map-line-arrow-\" + t.id), t.fixedSize && f.push(F));\n              if (\"start\" == M || \"both\" == M) F = H[0], T = J[0], 1 < H.length ? (E = H[1], R = J[1]) : (E = F, R = T), I = 180 * Math.atan((T - R) / (F - E)) / Math.PI, R = F, I = 0 > F - E ? I - 90 : I + 90;\n              \"middle\" == M && (F = H[H.length - 1], E = J[J.length - 1], 1 < H.length ? (K = H[H.length - 2], I = J[J.length - 2]) : (K = F, I = E), R = K + (F - K) / 2, T = I + (E - I) / 2, I = 180 * Math.atan((E - I) / (F - K)) / Math.PI, I = 0 > F - K ? I - 90 : I + 90);\n              F = d.polygon(q, [-N / 2, 0, N / 2], [1.5 * N, 0, 1.5 * N], O, P, 1, O, P);\n              d.setCN(c, L, \"map-line-arrow\");\n              void 0 != t.id && d.setCN(c, L, \"map-line-arrow-\" + t.id);\n              z.push(F);\n              F.translate(R, T);\n              F.rotate(I);\n              t.fixedSize && f.push(F);\n              t.arrowSvg = F;\n            }\n\n            t.fixedSize && L && (this.linesToResize.push({\n              line: L,\n              thickness: C\n            }), this.linesToResize.push({\n              line: G,\n              thickness: 3\n            }));\n            t.lineSvg = L;\n            t.showAsSelected && !isNaN(U) && L.setAttr(\"stroke\", U);\n            0 < S.length ? e.push(z) : g.push(z);\n            t.hidden && z.hide();\n          }\n        }\n      }\n\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    processCoordinates: function (a, b) {\n      var c = [],\n          d;\n\n      for (d = 0; d < a.length; d++) {\n        var f = a[d],\n            e = Number(f);\n        isNaN(e) && (e = Number(f.replace(\"%\", \"\")) * b / 100);\n        isNaN(e) || c.push(e);\n      }\n\n      return c;\n    },\n    reset: function () {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.linesToResize = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"LinesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.thickness = 1;\n      this.dashLength = 0;\n      this.arrowSize = 10;\n      this.arrowAlpha = 1;\n      this.arrow = \"none\";\n      this.color = \"#990000\";\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapObject = d.Class({\n    construct: function (a) {\n      this.fixedSize = this.mouseEnabled = !0;\n      this.images = [];\n      this.lines = [];\n      this.areas = [];\n      this.remainVisible = !0;\n      this.passZoomValuesToTarget = !1;\n      this.objectType = this.cname;\n      d.applyTheme(this, a, \"MapObject\");\n    }\n  });\n})();\n\n(function (d) {\n  d = window.AmCharts;\n  d.MapArea = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapArea\";\n      d.MapArea.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapLine = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapLine\";\n      this.longitudes = [];\n      this.latitudes = [];\n      this.x = [];\n      this.y = [];\n      this.arrow = \"none\";\n      d.MapLine.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapImage = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapImage\";\n      this.scale = 1;\n      this.widthAndHeightUnits = \"pixels\";\n      this.labelShiftY = this.labelShiftX = 0;\n      d.MapImage.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    },\n    remove: function () {\n      var a = this.displayObject;\n      a && a.remove();\n      (a = this.imageLabel) && a.remove();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.degreesToRadians = function (a) {\n    return a / 180 * Math.PI;\n  };\n\n  d.radiansToDegrees = function (a) {\n    return a / Math.PI * 180;\n  };\n\n  d.getColorFade = function (a, b, c) {\n    var h = d.hex2RGB(b);\n    b = h[0];\n    var f = h[1],\n        h = h[2],\n        e = d.hex2RGB(a);\n    a = e[0];\n    var g = e[1],\n        e = e[2];\n    a += Math.round((b - a) * c);\n    g += Math.round((f - g) * c);\n    e += Math.round((h - e) * c);\n    return \"rgb(\" + a + \",\" + g + \",\" + e + \")\";\n  };\n\n  d.hex2RGB = function (a) {\n    return [parseInt(a.substring(1, 3), 16), parseInt(a.substring(3, 5), 16), parseInt(a.substring(5, 7), 16)];\n  };\n\n  d.processDescriptionWindow = function (a, b) {\n    isNaN(b.descriptionWindowX) && (b.descriptionWindowX = a.descriptionWindowX);\n    isNaN(b.descriptionWindowY) && (b.descriptionWindowY = a.descriptionWindowY);\n    isNaN(b.descriptionWindowLeft) && (b.descriptionWindowLeft = a.descriptionWindowLeft);\n    isNaN(b.descriptionWindowRight) && (b.descriptionWindowRight = a.descriptionWindowRight);\n    isNaN(b.descriptionWindowTop) && (b.descriptionWindowTop = a.descriptionWindowTop);\n    isNaN(b.descriptionWindowBottom) && (b.descriptionWindowBottom = a.descriptionWindowBottom);\n    isNaN(b.descriptionWindowWidth) && (b.descriptionWindowWidth = a.descriptionWindowWidth);\n    isNaN(b.descriptionWindowHeight) && (b.descriptionWindowHeight = a.descriptionWindowHeight);\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapData = d.Class({\n    inherits: d.MapObject,\n    construct: function () {\n      this.cname = \"MapData\";\n      d.MapData.base.construct.call(this);\n      this.projection = \"mercator\";\n      this.topLatitude = 90;\n      this.bottomLatitude = -90;\n      this.leftLongitude = -180;\n      this.rightLongitude = 180;\n      this.zoomLevel = 1;\n      this.getAreasFromMap = !1;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.DescriptionWindow = d.Class({\n    construct: function () {},\n    show: function (a, b, c, d) {\n      var f = this,\n          e = document.createElement(\"div\");\n      e.style.position = \"absolute\";\n      var g = a.classNamePrefix + \"-description-\";\n      e.className = \"ammapDescriptionWindow \" + g + \"div\";\n      f.div = e;\n      b.appendChild(e);\n      var k = document.createElement(\"img\");\n      k.className = \"ammapDescriptionWindowCloseButton \" + g + \"close-img\";\n      k.src = a.pathToImages + \"xIcon.gif\";\n      k.style.cssFloat = \"right\";\n\n      k.onclick = function () {\n        f.close();\n      };\n\n      k.onmouseover = function () {\n        k.src = a.pathToImages + \"xIconH.gif\";\n      };\n\n      k.onmouseout = function () {\n        k.src = a.pathToImages + \"xIcon.gif\";\n      };\n\n      e.appendChild(k);\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionTitle \" + g + \"title-div\";\n\n      b.onmousedown = function () {\n        f.div.style.zIndex = 1E3;\n      };\n\n      e.appendChild(b);\n      d = document.createTextNode(d);\n      b.appendChild(d);\n      d = b.offsetHeight;\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionText \" + g + \"text-div\";\n      b.style.maxHeight = f.maxHeight - d - 20 + \"px\";\n      e.appendChild(b);\n      b.innerHTML = c;\n    },\n    close: function () {\n      try {\n        this.div.parentNode.removeChild(this.div);\n      } catch (a) {}\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ValueLegend = d.Class({\n    construct: function (a) {\n      this.cname = \"ValueLegend\";\n      this.enabled = !0;\n      this.showAsGradient = !1;\n      this.minValue = 0;\n      this.height = 12;\n      this.width = 200;\n      this.bottom = this.left = 10;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = this.borderThickness = 1;\n      this.color = \"#000000\";\n      this.fontSize = 11;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      if (this.enabled) {\n        var c = a.areasSettings.color,\n            h = a.areasSettings.colorSolid,\n            f = a.colorSteps;\n        d.remove(this.set);\n        var e = b.set();\n        this.set = e;\n        d.setCN(a, e, \"value-legend\");\n        var g = 0,\n            k = this.minValue,\n            l = this.fontSize,\n            m = a.fontFamily,\n            n = this.color;\n        void 0 == k && (k = a.minValueReal);\n        void 0 !== k && (g = d.text(b, k, n, m, l, \"left\"), g.translate(0, l / 2 - 1), d.setCN(a, g, \"value-legend-min-label\"), e.push(g), g = g.getBBox().height);\n        k = this.maxValue;\n        void 0 === k && (k = a.maxValueReal);\n        void 0 !== k && (g = d.text(b, k, n, m, l, \"right\"), g.translate(this.width, l / 2 - 1), d.setCN(a, g, \"value-legend-max-label\"), e.push(g), g = g.getBBox().height);\n        if (this.showAsGradient) c = d.rect(b, this.width, this.height, [c, h], 1, this.borderThickness, this.borderColor, 1, 0, 0), d.setCN(a, c, \"value-legend-gradient\"), c.translate(0, g), e.push(c);else for (l = this.width / f, m = 0; m < f; m++) n = d.getColorFade(c, h, 1 * m / (f - 1)), n = d.rect(b, l, this.height, n, 1, this.borderThickness, this.borderColor, 1), d.setCN(a, n, \"value-legend-color\"), d.setCN(a, n, \"value-legend-color-\" + m), n.translate(l * m, g), e.push(n);\n        h = c = 0;\n        f = e.getBBox();\n        g = a.getY(this.bottom, !0);\n        l = a.getY(this.top);\n        m = a.getX(this.right, !0);\n        n = a.getX(this.left);\n        isNaN(l) || (c = l);\n        isNaN(g) || (c = g - f.height);\n        isNaN(n) || (h = n);\n        isNaN(m) || (h = m - f.width);\n        e.translate(h, c);\n      } else d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ObjectList = d.Class({\n    construct: function (a) {\n      this.divId = a;\n    },\n    init: function (a) {\n      this.chart = a;\n      var b = this.divId;\n      this.container && (b = this.container);\n      this.div = \"object\" != typeof b ? document.getElementById(b) : b;\n      b = document.createElement(\"div\");\n      b.className = \"ammapObjectList \" + a.classNamePrefix + \"-object-list-div\";\n      this.div.appendChild(b);\n      this.addObjects(a.dataProvider, b);\n    },\n    addObjects: function (a, b) {\n      var c = this.chart,\n          d = document.createElement(\"ul\");\n      d.className = c.classNamePrefix + \"-object-list-ul\";\n      var f;\n      if (a.areas) for (f = 0; f < a.areas.length; f++) {\n        var e = a.areas[f];\n        void 0 === e.showInList && (e.showInList = c.showAreasInList);\n        this.addObject(e, d);\n      }\n      if (a.images) for (f = 0; f < a.images.length; f++) e = a.images[f], void 0 === e.showInList && (e.showInList = c.showImagesInList), this.addObject(e, d);\n      if (a.lines) for (f = 0; f < a.lines.length; f++) e = a.lines[f], void 0 === e.showInList && (e.showInList = c.showLinesInList), this.addObject(e, d);\n      0 < d.childNodes.length && b.appendChild(d);\n    },\n    addObject: function (a, b) {\n      var c = this;\n\n      if (a.showInList && void 0 !== a.title) {\n        var d = c.chart,\n            f = document.createElement(\"li\");\n        f.className = d.classNamePrefix + \"-object-list-li\";\n        var e = document.createTextNode(a.title),\n            g = document.createElement(\"a\");\n        g.className = d.classNamePrefix + \"-object-list-a\";\n        g.appendChild(e);\n        f.appendChild(g);\n        b.appendChild(f);\n        this.addObjects(a, f);\n\n        g.onmouseover = function () {\n          c.chart.rollOverMapObject(a, !1);\n        };\n\n        g.onmouseout = function () {\n          c.chart.rollOutMapObject(a);\n        };\n\n        g.onclick = function () {\n          c.chart.clickMapObject(a);\n        };\n      }\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}