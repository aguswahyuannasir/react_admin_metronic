{"ast":null,"code":"/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n(function ($) {\n  var options = {\n    xaxis: {\n      categories: null\n    },\n    yaxis: {\n      categories: null\n    }\n  };\n\n  function processRawData(plot, series, data, datapoints) {\n    var xCategories = series.xaxis.options.mode == \"categories\",\n        yCategories = series.yaxis.options.mode == \"categories\";\n    if (!(xCategories || yCategories)) return;\n    var format = datapoints.format;\n\n    if (!format) {\n      var s = series;\n      format = [];\n      format.push({\n        x: true,\n        number: true,\n        required: true\n      });\n      format.push({\n        y: true,\n        number: true,\n        required: true\n      });\n\n      if (s.bars.show || s.lines.show && s.lines.fill) {\n        var autoscale = !!(s.bars.show && s.bars.zero || s.lines.show && s.lines.zero);\n        format.push({\n          y: true,\n          number: true,\n          required: false,\n          defaultValue: 0,\n          autoscale: autoscale\n        });\n\n        if (s.bars.horizontal) {\n          delete format[format.length - 1].y;\n          format[format.length - 1].x = true;\n        }\n      }\n\n      datapoints.format = format;\n    }\n\n    for (var m = 0; m < format.length; ++m) {\n      if (format[m].x && xCategories) format[m].number = false;\n      if (format[m].y && yCategories) format[m].number = false;\n    }\n  }\n\n  function getNextIndex(categories) {\n    var index = -1;\n\n    for (var v in categories) if (categories[v] > index) index = categories[v];\n\n    return index + 1;\n  }\n\n  function categoriesTickGenerator(axis) {\n    var res = [];\n\n    for (var label in axis.categories) {\n      var v = axis.categories[label];\n      if (v >= axis.min && v <= axis.max) res.push([v, label]);\n    }\n\n    res.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    return res;\n  }\n\n  function setupCategoriesForAxis(series, axis, datapoints) {\n    if (series[axis].options.mode != \"categories\") return;\n\n    if (!series[axis].categories) {\n      var c = {},\n          o = series[axis].options.categories || {};\n\n      if ($.isArray(o)) {\n        for (var i = 0; i < o.length; ++i) c[o[i]] = i;\n      } else {\n        for (var v in o) c[v] = o[v];\n      }\n\n      series[axis].categories = c;\n    }\n\n    if (!series[axis].options.ticks) series[axis].options.ticks = categoriesTickGenerator;\n    transformPointsOnAxis(datapoints, axis, series[axis].categories);\n  }\n\n  function transformPointsOnAxis(datapoints, axis, categories) {\n    var points = datapoints.points,\n        ps = datapoints.pointsize,\n        format = datapoints.format,\n        formatColumn = axis.charAt(0),\n        index = getNextIndex(categories);\n\n    for (var i = 0; i < points.length; i += ps) {\n      if (points[i] == null) continue;\n\n      for (var m = 0; m < ps; ++m) {\n        var val = points[i + m];\n        if (val == null || !format[m][formatColumn]) continue;\n\n        if (!(val in categories)) {\n          categories[val] = index;\n          ++index;\n        }\n\n        points[i + m] = categories[val];\n      }\n    }\n  }\n\n  function processDatapoints(plot, series, datapoints) {\n    setupCategoriesForAxis(series, \"xaxis\", datapoints);\n    setupCategoriesForAxis(series, \"yaxis\", datapoints);\n  }\n\n  function init(plot) {\n    plot.hooks.processRawData.push(processRawData);\n    plot.hooks.processDatapoints.push(processDatapoints);\n  }\n\n  $.plot.plugins.push({\n    init: init,\n    options: options,\n    name: \"categories\",\n    version: \"1.0\"\n  });\n})(jQuery);","map":null,"metadata":{},"sourceType":"script"}